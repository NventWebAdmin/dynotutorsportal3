{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/iconbar.js\";\nimport React, { Component } from \"react\";\nimport { GetFontAwesomeIcon, GetGoogleIcon, GetBoostrapIcon } from \"./icons\"; // documentation\n\n/*\niconClk = (e) => {\n  console.log(e.target.dataset.name);\n};\n\n.js\nlet iconarray = [\n    {\n      label: \"Label1\",\n      name: \"name1\",\n      iconName: \"menu\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n  ];\n\n  .html\n <Svgcomp\niconarray={iconarray}\niconClk={this.iconClk}\nisHorizontol=\"false\"\nstyle={{ width: \"5vw\" }}\niconPadding=\"1vw\"\niconClk={this.iconClk}\n/>\n<Svgcomp\niconarray={iconarray}\niconClk={this.iconClk}\nisHorizontol=\"true\"\nstyle={{ width: \"30vw\" }}\niconPadding=\"2vw\"\niconClk={this.iconClk}\n/> */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n\n    this.iconClk = () => {};\n\n    this.state = {};\n  }\n\n  render() {\n    let iconarrayhtml = [];\n\n    for (let i = 0; i < this.props.iconarray.length; i++) {\n      if (this.props.iconarray[i].iconSource === \"google\") {\n        iconarrayhtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: this.props.iconPadding ? this.props.iconPadding : \"\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.props.iconClk({\n              buttonName: this.props.iconarray[i].name\n            }),\n            className: \"org-cursor\",\n            \"data-name\": this.props.iconarray[i].name,\n            children: /*#__PURE__*/_jsxDEV(GetGoogleIcon, {\n              name: this.props.iconarray[i].iconName,\n              \"data-name\": this.props.iconarray[i].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, this.props.iconarray[i].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this));\n      } else if (this.props.iconarray[i].iconSource === \"fontaway\") {// iconarrayhtml.push(\n        //   <div\n        //     key={this.props.iconarray[i].name}\n        //     style={{\n        //       padding: this.props.iconPadding ? this.props.iconPadding : \"\",\n        //     }}\n        //   >\n        //     <div\n        //       onClick={() =>\n        //         this.props.iconClk({ buttonName: this.props.iconarray[i].name })\n        //       }\n        //       className=\"org-cursor\"\n        //       data-name={this.props.iconarray[i].name}\n        //     >\n        //       <GetFontAwesomeIcon\n        //         name={this.props.iconarray[i].iconName}\n        //         data-name={this.props.iconarray[i].name}\n        //       />\n        //     </div>\n        //   </div>\n        // );\n      } else if (this.props.iconarray[i].iconSource === \"bootstrap\") {\n        iconarrayhtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: this.props.iconPadding ? this.props.iconPadding : \"\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.props.iconClk({\n              buttonName: this.props.iconarray[i].name\n            }),\n            className: \"org-cursor\",\n            \"data-name\": this.props.iconarray[i].name,\n            children: /*#__PURE__*/_jsxDEV(GetBoostrapIcon, {\n              name: this.props.iconarray[i].iconName,\n              \"data-name\": this.props.iconarray[i].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, this.props.iconarray[i].name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this));\n      } else {}\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: this.props.style,\n      children: [this.props.isHorizontol === \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\"\n        },\n        children: iconarrayhtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : \"\", this.props.isHorizontol !== \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: iconarrayhtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/iconbar.js"],"names":["React","Component","GetFontAwesomeIcon","GetGoogleIcon","GetBoostrapIcon","F","constructor","props","iconClk","state","render","iconarrayhtml","i","iconarray","length","iconSource","push","padding","iconPadding","buttonName","name","iconName","style","isHorizontol","display","justifyContent","alignItems","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GetFontAwesomeIcon, GetGoogleIcon, GetBoostrapIcon } from \"./icons\";\n\n// documentation\n\n/*\niconClk = (e) => {\n  console.log(e.target.dataset.name);\n};\n\n.js\nlet iconarray = [\n    {\n      label: \"Label1\",\n      name: \"name1\",\n      iconName: \"menu\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n    {\n      label: \"Label2\",\n      name: \"name2\",\n      iconName: \"done\",\n      iconSource: \"google\",\n    },\n  ];\n\n  .html\n <Svgcomp\niconarray={iconarray}\niconClk={this.iconClk}\nisHorizontol=\"false\"\nstyle={{ width: \"5vw\" }}\niconPadding=\"1vw\"\niconClk={this.iconClk}\n/>\n<Svgcomp\niconarray={iconarray}\niconClk={this.iconClk}\nisHorizontol=\"true\"\nstyle={{ width: \"30vw\" }}\niconPadding=\"2vw\"\niconClk={this.iconClk}\n/> */\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  iconClk = () => {};\n\n  render() {\n    let iconarrayhtml = [];\n    for (let i = 0; i < this.props.iconarray.length; i++) {\n      if (this.props.iconarray[i].iconSource === \"google\") {\n        iconarrayhtml.push(\n          <div\n            key={this.props.iconarray[i].name}\n            style={{\n              padding: this.props.iconPadding ? this.props.iconPadding : \"\",\n            }}\n          >\n            <div\n              onClick={() =>\n                this.props.iconClk({ buttonName: this.props.iconarray[i].name })\n              }\n              className=\"org-cursor\"\n              data-name={this.props.iconarray[i].name}\n            >\n              <GetGoogleIcon\n                name={this.props.iconarray[i].iconName}\n                data-name={this.props.iconarray[i].name}\n              />\n            </div>\n          </div>\n        );\n      } else if (this.props.iconarray[i].iconSource === \"fontaway\") {\n        // iconarrayhtml.push(\n        //   <div\n        //     key={this.props.iconarray[i].name}\n        //     style={{\n        //       padding: this.props.iconPadding ? this.props.iconPadding : \"\",\n        //     }}\n        //   >\n        //     <div\n        //       onClick={() =>\n        //         this.props.iconClk({ buttonName: this.props.iconarray[i].name })\n        //       }\n        //       className=\"org-cursor\"\n        //       data-name={this.props.iconarray[i].name}\n        //     >\n        //       <GetFontAwesomeIcon\n        //         name={this.props.iconarray[i].iconName}\n        //         data-name={this.props.iconarray[i].name}\n        //       />\n        //     </div>\n        //   </div>\n        // );\n      } else if (this.props.iconarray[i].iconSource === \"bootstrap\") {\n        iconarrayhtml.push(\n          <div\n            key={this.props.iconarray[i].name}\n            style={{\n              padding: this.props.iconPadding ? this.props.iconPadding : \"\",\n            }}\n          >\n            <div\n              onClick={() =>\n                this.props.iconClk({ buttonName: this.props.iconarray[i].name })\n              }\n              className=\"org-cursor\"\n              data-name={this.props.iconarray[i].name}\n            >\n              <GetBoostrapIcon\n                name={this.props.iconarray[i].iconName}\n                data-name={this.props.iconarray[i].name}\n              />\n            </div>\n          </div>\n        );\n      } else {\n      }\n    }\n\n    return (\n      <div style={this.props.style}>\n        {this.props.isHorizontol === \"true\" ? (\n          <div\n            style={{\n              display: \"flex\",\n\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n            }}\n          >\n            {iconarrayhtml}\n          </div>\n        ) : (\n          \"\"\n        )}\n        {this.props.isHorizontol !== \"true\" ? (\n          <div\n            style={{\n              display: \"flex\",\n\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {iconarrayhtml}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}