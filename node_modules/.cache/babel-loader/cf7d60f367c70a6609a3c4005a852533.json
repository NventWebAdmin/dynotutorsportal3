{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/tablecomp2.js\";\nimport React, { Component } from \"react\";\n/*\nformat : \n <Tablecomp\n              compprops={{\n                columns: columns,\n                buttons: buttons,\n                recordDataList: recordDataList,\n              }}\n            />\n\n     columns: {\n      \"0\": {\n        \"label\": \"Id\",\n        \"name\": \"id\",\n        \"type\": \"\"\n      },\n      \"1\": {\n        \"label\": \"Start Date\",\n        \"name\": \"startdate\",\n        \"type\": \"\"\n      }\n    }\n\n  buttons:\n  recordDatalist:  [{id:\"\"},{id:\"\"}]        \n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let {\n      columns,\n      buttons,\n      recordDataList,\n      recordviewfieldname\n    } = this.props.compprops;\n    console.log(this.props);\n    console.log(buttons);\n    let mainpanelHtml = [];\n    let tableHtml = [];\n    let trrowHtml = [];\n    let throwHtml = [];\n\n    for (let i in columns) {\n      throwHtml.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: columns[i].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this));\n    }\n\n    console.log(recordDataList);\n\n    if (recordDataList) {\n      for (let i = 0; i < recordDataList.length; i++) {\n        let tdcolumnHtml = [];\n\n        for (let j in columns) {\n          let recordDataItem = recordDataList[i];\n          let columndata = columns[j];\n          console.log(recordDataItem);\n          console.log(columndata);\n          tdcolumnHtml.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-name\": recordDataItem[recordviewfieldname],\n            \"data-type\": \"view\",\n            onClick: e => this.props.clickHandler(e, {}),\n            children: recordDataItem[columndata.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this));\n        }\n\n        trrowHtml.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tdcolumnHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this));\n      }\n\n      tableHtml.push( /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: throwHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), trrowHtml]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this));\n      mainpanelHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tableHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: mainpanelHtml\n    }, void 0, false);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/tablecomp2.js"],"names":["React","Component","F","constructor","props","state","render","columns","buttons","recordDataList","recordviewfieldname","compprops","console","log","mainpanelHtml","tableHtml","trrowHtml","throwHtml","i","push","label","length","tdcolumnHtml","j","recordDataItem","columndata","e","clickHandler","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,CAAN,SAAgBD,SAAhB,CAA0B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI;AACFC,MAAAA,OADE;AAEFC,MAAAA,OAFE;AAGFC,MAAAA,cAHE;AAIFC,MAAAA;AAJE,QAKA,KAAKN,KAAL,CAAWO,SALf;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,QAAIM,aAAa,GAAG,EAApB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAT,IAAcX,OAAd,EAAuB;AACrBU,MAAAA,SAAS,CAACE,IAAV,eAAe;AAAA,kBAAKZ,OAAO,CAACW,CAAD,CAAP,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAf;AACD;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;;AAEA,QAAIA,cAAJ,EAAoB;AAClB,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,cAAc,CAACY,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC9C,YAAII,YAAY,GAAG,EAAnB;;AACA,aAAK,IAAIC,CAAT,IAAchB,OAAd,EAAuB;AACrB,cAAIiB,cAAc,GAAGf,cAAc,CAACS,CAAD,CAAnC;AACA,cAAIO,UAAU,GAAGlB,OAAO,CAACgB,CAAD,CAAxB;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAYW,cAAZ;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ;AACAH,UAAAA,YAAY,CAACH,IAAb,eACE;AACE,yBAAWK,cAAc,CAACd,mBAAD,CAD3B;AAEE,yBAAU,MAFZ;AAGE,YAAA,OAAO,EAAGgB,CAAD,IAAO,KAAKtB,KAAL,CAAWuB,YAAX,CAAwBD,CAAxB,EAA2B,EAA3B,CAHlB;AAAA,sBAKGF,cAAc,CAACC,UAAU,CAACG,IAAZ;AALjB;AAAA;AAAA;AAAA;AAAA,kBADF;AASD;;AACDZ,QAAAA,SAAS,CAACG,IAAV,eAAe;AAAA,oBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAf;AACD;;AACDP,MAAAA,SAAS,CAACI,IAAV,eACE;AAAA,gCACE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGD,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMAF,MAAAA,aAAa,CAACK,IAAd,eAAmB;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cAAnB;AACD;;AACD,wBAAO;AAAA,gBAAGD;AAAH,qBAAP;AACD;;AApDuB;;AAuD1B,eAAeZ,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\n/*\nformat : \n <Tablecomp\n              compprops={{\n                columns: columns,\n                buttons: buttons,\n                recordDataList: recordDataList,\n              }}\n            />\n\n     columns: {\n      \"0\": {\n        \"label\": \"Id\",\n        \"name\": \"id\",\n        \"type\": \"\"\n      },\n      \"1\": {\n        \"label\": \"Start Date\",\n        \"name\": \"startdate\",\n        \"type\": \"\"\n      }\n    }\n\n  buttons:\n  recordDatalist:  [{id:\"\"},{id:\"\"}]        \n*/\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let {\n      columns,\n      buttons,\n      recordDataList,\n      recordviewfieldname,\n    } = this.props.compprops;\n    console.log(this.props);\n    console.log(buttons);\n    let mainpanelHtml = [];\n    let tableHtml = [];\n    let trrowHtml = [];\n    let throwHtml = [];\n    for (let i in columns) {\n      throwHtml.push(<th>{columns[i].label}</th>);\n    }\n    console.log(recordDataList);\n\n    if (recordDataList) {\n      for (let i = 0; i < recordDataList.length; i++) {\n        let tdcolumnHtml = [];\n        for (let j in columns) {\n          let recordDataItem = recordDataList[i];\n          let columndata = columns[j];\n          console.log(recordDataItem);\n          console.log(columndata);\n          tdcolumnHtml.push(\n            <td\n              data-name={recordDataItem[recordviewfieldname]}\n              data-type=\"view\"\n              onClick={(e) => this.props.clickHandler(e, {})}\n            >\n              {recordDataItem[columndata.name]}\n            </td>\n          );\n        }\n        trrowHtml.push(<tr>{tdcolumnHtml}</tr>);\n      }\n      tableHtml.push(\n        <table>\n          <tr>{throwHtml}</tr>\n          {trrowHtml}\n        </table>\n      );\n      mainpanelHtml.push(<div>{tableHtml}</div>);\n    }\n    return <>{mainpanelHtml}</>;\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}