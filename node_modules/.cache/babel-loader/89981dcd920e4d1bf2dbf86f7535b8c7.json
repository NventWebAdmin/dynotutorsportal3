{"ast":null,"code":"import _classCallCheck from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";//import socket from \"./Socketio\";\nimport socketIOClient from\"socket.io-client\";import*as Twilio from\"twilio-client\";import{configdata}from\"../config\";//const ENDPOINT = \"http://127.0.0.1:4001\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ENDPOINT,socket;if(configdata().twiliocallcenterserverurl!=\"\"){ENDPOINT=configdata().twiliocallcenterserverurl;socket=socketIOClient(ENDPOINT);}var device=undefined;//JSON.parse(localStorage.getItem(\"token\"));\n//localStorage.setItem(\"token\", JSON.stringify(\"Smith\"));\nvar App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.handleChange=function(e){console.log(e.target.name);var x=e.target.name;if(x==\"tophoneno\"){_this.setState({tophoneno:e.target.value});}if(x==\"code\"){_this.setState({code:e.target.value});}if(x==\"usernumber\"){_this.setState({usernumber:e.target.value});}if(x==\"username\"){_this.setState({username:e.target.value});}console.log(_this.state);};_this.answerCall=function(x){console.log(x);socket.emit(\"answercall\",{callSid:x,client:_this.state.username});};_this.rejectCall=function(x){socket.emit(\"rejectcall\",{callSid:x});};_this.disconnectCall=function(x){console.log(x);socket.emit(\"disconnectcall\",{callSid:x,client:_this.state.username});};_this.dialCall=function(){socket.emit(\"dialcall\",{phoneno:_this.state.tophoneno,client:_this.state.username});};_this.disconnectOwnCall=function(x){console.log(_this.state.dialcallsid);console.log(_this.state.username);socket.emit(\"disconnectownCall\",{callSid:_this.state.dialcallsid,client:_this.state.username});};_this.connectTwilioClienttoServer=function(twilioClientToken){console.log(twilioClientToken);device=new Twilio.Device(twilioClientToken,{debug:true});device.on(\"error\",function(err){console.log(err);});device.on(\"incoming\",function(connection){console.log(\"incoming frm twilio\");console.log(connection.parameters.CallSid);_this.setState({callSid:connection.parameters.CallSid});connection.accept();});};_this.state={tophoneno:\"\",code:\"\",fromphoneno:\"\",callstatus:\"\",callSid:\"\",username:\"\",usernumber:\"\",callconnectionArray:[],dialstatus:\"\",dialcallsid:\"\"};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var compprops=this.props.compprops;// console.log(compprops.userobjectname);\n// console.log(compprops.userid);s\nvar username;if(compprops){username=compprops.userid;}this.setState({username:username});socket.emit(\"registerfortwiliotoken\",{username:username});socket.on(\"logintoken\",function(data){console.log(\"logintoken\"+data);});socket.on(\"twilioclienttoken\",function(data){console.log(\"twilioclienttoken\");console.log(data);// console.log(\"isverfiied\" + data.isverified);\n_this2.connectTwilioClienttoServer(data.token);});socket.on(\"disconnect\",function(){console.log(\"socket disconnected\");});socket.on(\"call-new\",function(req){var data=req.data;console.log(\"call connected\");console.log(data);console.log(data.From);console.log(data.To);console.log(data.Direction);console.log(data.Called);console.log(data.CallSid);console.log(data.CallStatus);var callconnectionArray=_this2.state.callconnectionArray;var isexistingcall=false;for(var i in callconnectionArray){if(callconnectionArray[i].fromphoneno==data.From){callconnectionArray[i].callstatus=\"ringing\";callconnectionArray[i].callSid=data.CallSid;isexistingcall=true;}}if(isexistingcall==false){var callconnection={};callconnection.fromphoneno=data.From;callconnection.callstatus=\"ringing\";callconnection.callSid=data.CallSid;callconnectionArray.push(callconnection);}_this2.setState({callconnectionArray:callconnectionArray});});socket.on(\"call-inque\",function(req){console.log(\" call is in queue\");console.log(req.data);console.log(req.data.CallStatus);var callconnectionArray=_this2.state.callconnectionArray;for(var i in callconnectionArray){if(callconnectionArray[i].fromphoneno==req.data.From){callconnectionArray[i].callstatus=\"inqueue\";}}_this2.setState({callconnectionArray:callconnectionArray});});socket.on(\"call-answer\",function(req){console.log(\" call is in answer\");console.log(req.data);console.log(req.data.CallStatus);var callconnectionArray=_this2.state.callconnectionArray;for(var i in callconnectionArray){if(callconnectionArray[i].callSid==req.data.callsid){callconnectionArray[i].callstatus=\"answering\";callconnectionArray[i].answeringuser=req.data.client;}}_this2.setState({callconnectionArray:callconnectionArray});});socket.on(\"call-disc\",function(req){console.log(\" call disc from twilio server\");console.log(req.data);console.log(req.data.CallStatus);console.log(req.data.Duration);var callconnectionArray=_this2.state.callconnectionArray;for(var i in callconnectionArray){if(callconnectionArray[i].fromphoneno==req.data.From){callconnectionArray[i].callstatus=\"disconnected\";}}_this2.setState({callconnectionArray:callconnectionArray});});socket.on(\"dialowncall\",function(req){console.log(\" dialowncall\");console.log(req.data.CallSid);console.log(req.data.client);var callconnectionArray=_this2.state.username;if(_this2.state.username==req.data.client){_this2.setState({dialstatus:\"dialing\",dialcallsid:req.data.CallSid});}});}},{key:\"render\",value:function render(){var _this3=this;console.log(\"callcenterprops\"+JSON.stringify(this.props));var callconnectionArray=this.state.callconnectionArray;var callconnectionArrayHtml=[];var _loop=function _loop(i){console.log(callconnectionArray[i]);callconnectionArrayHtml.push(/*#__PURE__*/_jsxs(\"div\",{children:[callconnectionArray[i].callstatus==\"ringing\"?/*#__PURE__*/_jsxs(_Fragment,{children:[callconnectionArray[i].fromphoneno,\" is calling\"]}):\"\",callconnectionArray[i].callstatus==\"inqueue\"?/*#__PURE__*/_jsxs(_Fragment,{children:[callconnectionArray[i].fromphoneno,\" is inqueue\"]}):\"\",callconnectionArray[i].callstatus==\"disconnected\"?/*#__PURE__*/_jsxs(_Fragment,{children:[callconnectionArray[i].fromphoneno,\" is disconnected\"]}):\"\",callconnectionArray[i].callstatus==\"answering\"?/*#__PURE__*/_jsxs(_Fragment,{children:[callconnectionArray[i].fromphoneno,\" is answering by\",\" \",callconnectionArray[i].answeringuser]}):\"\",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this3.answerCall(callconnectionArray[i].callSid);},children:\"Answer call\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this3.disconnectCall(callconnectionArray[i].callSid);},children:\"Disconnect call\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this3.suggestCall(callconnectionArray[i].callSid);},children:\"Suggest call\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this3.rejectCall(callconnectionArray[i].callSid);},children:\"Reject call\"})]})]}));};for(var i in callconnectionArray){_loop(i);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Dialing Number\",/*#__PURE__*/_jsx(\"input\",{name:\"tophoneno\",onChange:this.handleChange}),/*#__PURE__*/_jsx(\"button\",{onClick:this.dialCall,children:\"Dial\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.disconnectOwnCall,children:\"Disconnect call\"}),this.state.dialstatus]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),callconnectionArrayHtml]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/callcenter.js"],"names":["React","socketIOClient","Twilio","configdata","ENDPOINT","socket","twiliocallcenterserverurl","device","undefined","App","props","handleChange","e","console","log","target","name","x","setState","tophoneno","value","code","usernumber","username","state","answerCall","emit","callSid","client","rejectCall","disconnectCall","dialCall","phoneno","disconnectOwnCall","dialcallsid","connectTwilioClienttoServer","twilioClientToken","Device","debug","on","err","connection","parameters","CallSid","accept","fromphoneno","callstatus","callconnectionArray","dialstatus","compprops","userid","data","token","req","From","To","Direction","Called","CallStatus","isexistingcall","i","callconnection","push","callsid","answeringuser","Duration","JSON","stringify","callconnectionArrayHtml","suggestCall","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import socket from \"./Socketio\";\nimport socketIOClient from \"socket.io-client\";\nimport * as Twilio from \"twilio-client\";\nimport { configdata } from \"../config\";\n//const ENDPOINT = \"http://127.0.0.1:4001\";\nlet ENDPOINT, socket;\nif (configdata().twiliocallcenterserverurl != \"\") {\n  ENDPOINT = configdata().twiliocallcenterserverurl;\n  socket = socketIOClient(ENDPOINT);\n}\nlet device = undefined;\n//JSON.parse(localStorage.getItem(\"token\"));\n//localStorage.setItem(\"token\", JSON.stringify(\"Smith\"));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tophoneno: \"\",\n      code: \"\",\n      fromphoneno: \"\",\n      callstatus: \"\",\n      callSid: \"\",\n      username: \"\",\n      usernumber: \"\",\n      callconnectionArray: [],\n      dialstatus: \"\",\n      dialcallsid: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let compprops = this.props.compprops;\n    // console.log(compprops.userobjectname);\n    // console.log(compprops.userid);s\n    let username;\n    if (compprops) {\n      username = compprops.userid;\n    }\n    this.setState({ username: username });\n    socket.emit(\"registerfortwiliotoken\", {\n      username: username,\n    });\n\n    socket.on(\"logintoken\", (data) => {\n      console.log(\"logintoken\" + data);\n    });\n\n    socket.on(\"twilioclienttoken\", (data) => {\n      console.log(\"twilioclienttoken\");\n      console.log(data);\n      // console.log(\"isverfiied\" + data.isverified);\n      this.connectTwilioClienttoServer(data.token);\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"socket disconnected\");\n    });\n    socket.on(\"call-new\", (req) => {\n      let data = req.data;\n      console.log(\"call connected\");\n      console.log(data);\n      console.log(data.From);\n      console.log(data.To);\n      console.log(data.Direction);\n      console.log(data.Called);\n      console.log(data.CallSid);\n      console.log(data.CallStatus);\n\n      let callconnectionArray = this.state.callconnectionArray;\n      let isexistingcall = false;\n      for (let i in callconnectionArray) {\n        if (callconnectionArray[i].fromphoneno == data.From) {\n          callconnectionArray[i].callstatus = \"ringing\";\n          callconnectionArray[i].callSid = data.CallSid;\n          isexistingcall = true;\n        }\n      }\n      if (isexistingcall == false) {\n        let callconnection = {};\n        callconnection.fromphoneno = data.From;\n        callconnection.callstatus = \"ringing\";\n        callconnection.callSid = data.CallSid;\n        callconnectionArray.push(callconnection);\n      }\n\n      this.setState({ callconnectionArray: callconnectionArray });\n    });\n\n    socket.on(\"call-inque\", (req) => {\n      console.log(\" call is in queue\");\n      console.log(req.data);\n      console.log(req.data.CallStatus);\n      let callconnectionArray = this.state.callconnectionArray;\n      for (let i in callconnectionArray) {\n        if (callconnectionArray[i].fromphoneno == req.data.From) {\n          callconnectionArray[i].callstatus = \"inqueue\";\n        }\n      }\n      this.setState({ callconnectionArray: callconnectionArray });\n    });\n\n    socket.on(\"call-answer\", (req) => {\n      console.log(\" call is in answer\");\n      console.log(req.data);\n      console.log(req.data.CallStatus);\n      let callconnectionArray = this.state.callconnectionArray;\n      for (let i in callconnectionArray) {\n        if (callconnectionArray[i].callSid == req.data.callsid) {\n          callconnectionArray[i].callstatus = \"answering\";\n          callconnectionArray[i].answeringuser = req.data.client;\n        }\n      }\n      this.setState({ callconnectionArray: callconnectionArray });\n    });\n\n    socket.on(\"call-disc\", (req) => {\n      console.log(\" call disc from twilio server\");\n      console.log(req.data);\n      console.log(req.data.CallStatus);\n      console.log(req.data.Duration);\n\n      let callconnectionArray = this.state.callconnectionArray;\n      for (let i in callconnectionArray) {\n        if (callconnectionArray[i].fromphoneno == req.data.From) {\n          callconnectionArray[i].callstatus = \"disconnected\";\n        }\n      }\n      this.setState({ callconnectionArray: callconnectionArray });\n    });\n\n    socket.on(\"dialowncall\", (req) => {\n      console.log(\" dialowncall\");\n      console.log(req.data.CallSid);\n      console.log(req.data.client);\n      let callconnectionArray = this.state.username;\n      if (this.state.username == req.data.client) {\n        this.setState({ dialstatus: \"dialing\", dialcallsid: req.data.CallSid });\n      }\n    });\n  }\n\n  handleChange = (e) => {\n    console.log(e.target.name);\n    let x = e.target.name;\n    if (x == \"tophoneno\") {\n      this.setState({ tophoneno: e.target.value });\n    }\n    if (x == \"code\") {\n      this.setState({ code: e.target.value });\n    }\n    if (x == \"usernumber\") {\n      this.setState({ usernumber: e.target.value });\n    }\n    if (x == \"username\") {\n      this.setState({ username: e.target.value });\n    }\n\n    console.log(this.state);\n  };\n\n  answerCall = (x) => {\n    console.log(x);\n    socket.emit(\"answercall\", {\n      callSid: x,\n      client: this.state.username,\n    });\n  };\n\n  rejectCall = (x) => {\n    socket.emit(\"rejectcall\", { callSid: x });\n  };\n\n  disconnectCall = (x) => {\n    console.log(x);\n    socket.emit(\"disconnectcall\", {\n      callSid: x,\n      client: this.state.username,\n    });\n  };\n\n  dialCall = () => {\n    socket.emit(\"dialcall\", {\n      phoneno: this.state.tophoneno,\n      client: this.state.username,\n    });\n  };\n\n  disconnectOwnCall = (x) => {\n    console.log(this.state.dialcallsid);\n    console.log(this.state.username);\n    socket.emit(\"disconnectownCall\", {\n      callSid: this.state.dialcallsid,\n      client: this.state.username,\n    });\n  };\n\n  connectTwilioClienttoServer = (twilioClientToken) => {\n    console.log(twilioClientToken);\n    device = new Twilio.Device(twilioClientToken, { debug: true });\n    device.on(\"error\", (err) => {\n      console.log(err);\n    });\n    device.on(\"incoming\", (connection) => {\n      console.log(\"incoming frm twilio\");\n      console.log(connection.parameters.CallSid);\n      this.setState({ callSid: connection.parameters.CallSid });\n      connection.accept();\n    });\n  };\n\n  render() {\n    console.log(\"callcenterprops\" + JSON.stringify(this.props));\n    let { callconnectionArray } = this.state;\n    let callconnectionArrayHtml = [];\n    for (let i in callconnectionArray) {\n      console.log(callconnectionArray[i]);\n      callconnectionArrayHtml.push(\n        <div>\n          {callconnectionArray[i].callstatus == \"ringing\" ? (\n            <>{callconnectionArray[i].fromphoneno} is calling</>\n          ) : (\n            \"\"\n          )}\n          {callconnectionArray[i].callstatus == \"inqueue\" ? (\n            <>{callconnectionArray[i].fromphoneno} is inqueue</>\n          ) : (\n            \"\"\n          )}\n          {callconnectionArray[i].callstatus == \"disconnected\" ? (\n            <>{callconnectionArray[i].fromphoneno} is disconnected</>\n          ) : (\n            \"\"\n          )}\n          {callconnectionArray[i].callstatus == \"answering\" ? (\n            <>\n              {callconnectionArray[i].fromphoneno} is answering by{\" \"}\n              {callconnectionArray[i].answeringuser}\n            </>\n          ) : (\n            \"\"\n          )}\n          <div>\n            <button\n              onClick={() => this.answerCall(callconnectionArray[i].callSid)}\n            >\n              Answer call\n            </button>\n            <button\n              onClick={() =>\n                this.disconnectCall(callconnectionArray[i].callSid)\n              }\n            >\n              Disconnect call\n            </button>\n            <button\n              onClick={() => this.suggestCall(callconnectionArray[i].callSid)}\n            >\n              Suggest call\n            </button>\n            <button\n              onClick={() => this.rejectCall(callconnectionArray[i].callSid)}\n            >\n              Reject call\n            </button>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        {/* <div>\n          Myusername <input name=\"username\" onChange={this.handleChange} />\n          Mynumberrs\n          <input\n            type=\"text\"\n            name=\"usernumber\"\n            list=\"exampleList\"\n            onChange={this.handleChange}\n          />\n          <datalist id=\"exampleList\">\n            <option value=\"+15102400591\" />\n            <option value=\"+1‪5107365704‬\" />\n          </datalist>\n          <button\n            onClick={this.login}\n            name=\"usernumber\"\n            onChange={this.handleChange}\n          >\n            Login\n          </button>\n        </div> \n        <br />\n        <div>\n          Verify code <input name=\"code\" onChange={this.handleChange} />{\" \"}\n          <button onClick={this.verify}>verifyyysss</button>\n        </div>*/}\n        <br />\n        <div>\n          Dialing Number\n          <input name=\"tophoneno\" onChange={this.handleChange} />\n          <button onClick={this.dialCall}>Dial</button>\n          <button onClick={this.disconnectOwnCall}>Disconnect call</button>\n          {this.state.dialstatus}\n        </div>\n        <br />\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        {callconnectionArrayHtml}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}