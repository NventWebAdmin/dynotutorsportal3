{"ast":null,"code":"import{getRecordsAWS,getRecordAWS,createRecordAWS,updateRecordAWS,deleteRecordAWS}from\"./aws\";import{getRecordsFirebase,getRecordFirebase,createRecordFirebase,updateRecordFirebase,deleteRecordFirebase}from\"./firebase\";import{configdata}from\"../config\";export function getImageRecordsStorage(dataprops){var recArray;if(configdata().imagestoragevendor==\"aws\"){recArray=getRecordsAWS(dataprops);}if(configdata().imagestoragevendor==\"firebase\"){recArray=getRecordsFirebase(dataprops);}return recArray;}export function getImageRecordStorage(dataprops){var rec;if(configdata().imagestoragevendor==\"aws\"){rec=getRecordAWS(dataprops);}if(configdata().imagestoragevendor==\"firebase\"){rec=getRecordFirebase(dataprops);}return rec;}export function createImageRecordStorage(dataprops){console.log(dataprops);var rec;if(configdata().imagestoragevendor==\"aws\"){rec=createRecordAWS(dataprops);}if(configdata().imagestoragevendor==\"firebase\"){rec=createRecordFirebase(dataprops);}return rec;}export function updateRecord(dataprops){console.log(dataprops);var rec;if(configdata().imagestoragevendor==\"aws\"){rec=updateRecordAWS(dataprops);}if(configdata().imagestoragevendor==\"firebase\"){rec=updateRecordFirebase(dataprops);}return rec;}export function deleteRecord(dataprops){console.log(dataprops);var rec;if(configdata().imagestoragevendor==\"aws\"){rec=deleteRecordAWS(dataprops);}if(configdata().imagestoragevendor==\"firebase\"){rec=deleteRecordFirebase(dataprops);}return rec;}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/imagestorage/index.js"],"names":["getRecordsAWS","getRecordAWS","createRecordAWS","updateRecordAWS","deleteRecordAWS","getRecordsFirebase","getRecordFirebase","createRecordFirebase","updateRecordFirebase","deleteRecordFirebase","configdata","getImageRecordsStorage","dataprops","recArray","imagestoragevendor","getImageRecordStorage","rec","createImageRecordStorage","console","log","updateRecord","deleteRecord"],"mappings":"AAAA,OACEA,aADF,CAEEC,YAFF,CAGEC,eAHF,CAIEC,eAJF,CAKEC,eALF,KAMO,OANP,CAOA,OACEC,kBADF,CAEEC,iBAFF,CAGEC,oBAHF,CAIEC,oBAJF,CAKEC,oBALF,KAMO,YANP,CAQA,OAASC,UAAT,KAA2B,WAA3B,CAEA,MAAO,SAASC,CAAAA,sBAAT,CAAgCC,SAAhC,CAA2C,CAChD,GAAIC,CAAAA,QAAJ,CACA,GAAIH,UAAU,GAAGI,kBAAb,EAAmC,KAAvC,CAA8C,CAC5CD,QAAQ,CAAGb,aAAa,CAACY,SAAD,CAAxB,CACD,CACD,GAAIF,UAAU,GAAGI,kBAAb,EAAmC,UAAvC,CAAmD,CACjDD,QAAQ,CAAGR,kBAAkB,CAACO,SAAD,CAA7B,CACD,CAED,MAAOC,CAAAA,QAAP,CACD,CAED,MAAO,SAASE,CAAAA,qBAAT,CAA+BH,SAA/B,CAA0C,CAC/C,GAAII,CAAAA,GAAJ,CACA,GAAIN,UAAU,GAAGI,kBAAb,EAAmC,KAAvC,CAA8C,CAC5CE,GAAG,CAAGf,YAAY,CAACW,SAAD,CAAlB,CACD,CACD,GAAIF,UAAU,GAAGI,kBAAb,EAAmC,UAAvC,CAAmD,CACjDE,GAAG,CAAGV,iBAAiB,CAACM,SAAD,CAAvB,CACD,CACD,MAAOI,CAAAA,GAAP,CACD,CAED,MAAO,SAASC,CAAAA,wBAAT,CAAkCL,SAAlC,CAA6C,CAClDM,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACA,GAAII,CAAAA,GAAJ,CACA,GAAIN,UAAU,GAAGI,kBAAb,EAAmC,KAAvC,CAA8C,CAC5CE,GAAG,CAAGd,eAAe,CAACU,SAAD,CAArB,CACD,CACD,GAAIF,UAAU,GAAGI,kBAAb,EAAmC,UAAvC,CAAmD,CACjDE,GAAG,CAAGT,oBAAoB,CAACK,SAAD,CAA1B,CACD,CACD,MAAOI,CAAAA,GAAP,CACD,CAED,MAAO,SAASI,CAAAA,YAAT,CAAsBR,SAAtB,CAAiC,CACtCM,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACA,GAAII,CAAAA,GAAJ,CACA,GAAIN,UAAU,GAAGI,kBAAb,EAAmC,KAAvC,CAA8C,CAC5CE,GAAG,CAAGb,eAAe,CAACS,SAAD,CAArB,CACD,CACD,GAAIF,UAAU,GAAGI,kBAAb,EAAmC,UAAvC,CAAmD,CACjDE,GAAG,CAAGR,oBAAoB,CAACI,SAAD,CAA1B,CACD,CACD,MAAOI,CAAAA,GAAP,CACD,CAED,MAAO,SAASK,CAAAA,YAAT,CAAsBT,SAAtB,CAAiC,CACtCM,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACA,GAAII,CAAAA,GAAJ,CACA,GAAIN,UAAU,GAAGI,kBAAb,EAAmC,KAAvC,CAA8C,CAC5CE,GAAG,CAAGZ,eAAe,CAACQ,SAAD,CAArB,CACD,CACD,GAAIF,UAAU,GAAGI,kBAAb,EAAmC,UAAvC,CAAmD,CACjDE,GAAG,CAAGP,oBAAoB,CAACG,SAAD,CAA1B,CACD,CACD,MAAOI,CAAAA,GAAP,CACD","sourcesContent":["import {\n  getRecordsAWS,\n  getRecordAWS,\n  createRecordAWS,\n  updateRecordAWS,\n  deleteRecordAWS,\n} from \"./aws\";\nimport {\n  getRecordsFirebase,\n  getRecordFirebase,\n  createRecordFirebase,\n  updateRecordFirebase,\n  deleteRecordFirebase,\n} from \"./firebase\";\n\nimport { configdata } from \"../config\";\n\nexport function getImageRecordsStorage(dataprops) {\n  let recArray;\n  if (configdata().imagestoragevendor == \"aws\") {\n    recArray = getRecordsAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    recArray = getRecordsFirebase(dataprops);\n  }\n\n  return recArray;\n}\n\nexport function getImageRecordStorage(dataprops) {\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function createImageRecordStorage(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function updateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function deleteRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n  return rec;\n}\n"]},"metadata":{},"sourceType":"module"}