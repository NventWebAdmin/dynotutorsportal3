{"ast":null,"code":"import axios from \"axios\"; //import React from \"react\";\n//var firebase = require(\"firebase\");\n//var firebaseui = require(\"firebaseui\");\n// Initialize Firebase\n//window.firebase.initializeApp(firebaseConfig);\n\nlet errMessage = \"\";\nlet firebaseWebApiKey = \"AIzaSyAwsbEv9dvu2aDeOf4bpMZ2byvwLUgqIDo\";\nlet firebaseAuthSignupURL = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" + firebaseWebApiKey;\nlet firebaseAuthSigninURL = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" + firebaseWebApiKey;\nlet firebaseAuthrefreshTokenURL = \"https://securetoken.googleapis.com/v1/token?key=\" + firebaseWebApiKey;\nlet firebaseAuthGetAllUsersURL = \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=\" + firebaseWebApiKey;\nlet firebaseAuthChangePasswordURL = \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\" + firebaseWebApiKey;\nlet firebaseAuthResetPasswordURL = \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=\" + firebaseWebApiKey;\nlet firebaseAuthVeifyEmailURL = \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=\" + firebaseWebApiKey;\nlet firebaseAuthgetProviderslURL = \"https://identitytoolkit.googleapis.com/v1/accounts:createAuthUri?key=\" + firebaseWebApiKey;\nexport async function signinFirebase(userDetails) {\n  console.log(userDetails);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let useremail = userDetails.username;\n  let password = userDetails.password;\n  console.log(useremail);\n  console.log(password);\n  let axiosresult = await axios.post(firebaseAuthSigninURL, {\n    email: useremail,\n    password: password,\n    returnSecureToken: true\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response);\n    result = {\n      isSuccess: \"true\",\n      message: \"user loggedin\",\n      dataprops: response.data\n    };\n    return result;\n  }).catch(error => {\n    result = {\n      isSuccess: \"false\",\n      message: error.response.data.error.message,\n      dataprops: {}\n    };\n    return result;\n  });\n  result = axiosresult;\n  console.log(result);\n  return result;\n}\nexport async function refreshTokenFirebase(userDetails) {\n  console.log(userDetails);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  }; // let useremail = userDetails.username;\n  // let password = userDetails.password;\n\n  let refreshtoken = userDetails.refreshtoken; // console.log(useremail);\n\n  console.log(refreshtoken);\n  let axiosresult = await axios.post(firebaseAuthrefreshTokenURL, {\n    grant_type: \"refresh_token\",\n    refresh_token: refreshtoken\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response);\n    result = {\n      isSuccess: \"true\",\n      message: \"user loggedin\",\n      dataprops: response.data\n    };\n    return result;\n  }).catch(error => {\n    result = {\n      isSuccess: \"false\",\n      message: error.response.data.error.message,\n      dataprops: {}\n    };\n    return result;\n  });\n  result = axiosresult;\n  console.log(result);\n  return result;\n}\nexport async function signupFirebase(userDetails) {\n  console.log(userDetails);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let useremail = userDetails.userState.registeremail;\n  let password = userDetails.userState.registerpassword;\n  let registerfirstname = userDetails.userState.registerfirstname;\n  let registerlastname = userDetails.userState.registerlastname;\n  let registerphone = userDetails.userState.registerphone;\n  let axiosresult = await axios.post(firebaseAuthSignupURL, {\n    email: useremail,\n    password: password,\n    displayName: registerfirstname + \" \" + registerlastname,\n    phoneNumber: registerphone,\n    returnSecureToken: true\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(async response => {\n    let axiosemailresult = await axios.post(firebaseAuthVeifyEmailURL, {\n      requestType: \"VERIFY_EMAIL\",\n      idToken: response.data.idToken\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"Please Signin to Access\",\n        dataprops: response.data\n      };\n      console.log(result);\n      return result;\n    }).catch(error => {\n      result = {\n        isSuccess: \"false\",\n        message: error.response.data.error.message,\n        dataprops: {}\n      };\n      return result;\n    });\n    return axiosemailresult;\n  }).catch(error => {\n    result = {\n      isSuccess: \"false\",\n      message: error.response.data.error.message,\n      dataprops: {}\n    };\n    return result;\n  });\n  console.log(axiosresult);\n  result = axiosresult;\n  return result;\n}\nexport async function resetPasswordFirebase(userDetails) {\n  var auth = window.firebase.auth();\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let useremail = userDetails.userState.forgotemail;\n  console.log(userDetails);\n  let axiosresult = auth.sendPasswordResetEmail(useremail).then(function () {\n    result = {\n      isSuccess: \"true\",\n      message: \"\",\n      dataprops: {}\n    };\n    return result;\n  }).catch(function (error) {\n    alert(JSON.stringify(error));\n    let message = \"\";\n\n    if (error.message.includes(\"The email address is badly formatted\")) {\n      message = \"Invalid Email\";\n    }\n\n    if (error.message.includes(\"There is no user\")) {\n      message = \"No Email found\";\n    }\n\n    result = {\n      isSuccess: \"false\",\n      message: message,\n      dataprops: {}\n    };\n    return result;\n  }); // let axiosresult = await axios\n  //   .post(\n  //     firebaseAuthResetPasswordURL,\n  //     {\n  //       requestType: \"PASSWORD_RESET\",\n  //       email: useremail,\n  //     },\n  //     {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //   .then((response) => {\n  //     console.log(response);\n  //     result = {\n  //       isSuccess: \"true\",\n  //       message: \"reset email sent\",\n  //       dataprops: response.data,\n  //     };\n  //     return result;\n  //   })\n  //   .catch((error) => {\n  //     console.log(error.response);\n  //     result = {\n  //       isSuccess: \"false\",\n  //       message: error.response.data.error.message,\n  //       dataprops: {},\n  //     };\n  //     return result;\n  //   });\n  // result = axiosresult;\n  // console.log(result);\n\n  return axiosresult;\n}\nexport function forgetPasswordFirebase() {\n  let result = {};\n  return result;\n}\nexport function isUserAlreadyExistsFirebase() {\n  let result = {};\n  return result;\n}\nexport function changePasswordFirebase(userDetails) {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let useremail = userDetails.username;\n  let password = userDetails.password;\n  let idToken = userDetails.idToken;\n  axios.post(firebaseAuthChangePasswordURL, {\n    idToken: idToken,\n    password: password,\n    returnSecureToken: true\n  }, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response);\n    result = {\n      isSuccess: \"true\",\n      message: \"password changed\",\n      dataprops: response.data\n    }; //  this.getUserData();\n  }).catch(error => {\n    console.log(error.response);\n    result = {\n      isSuccess: \"false\",\n      message: error.response.data.error.message,\n      dataprops: {}\n    };\n  });\n}\nexport async function signInwithGoogleFirebase(userDetails) {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  }; // let useremail = userDetails.username;\n  // let password = userDetails.password;\n  // let idToken = userDetails.idToken;\n\n  var provider = new window.firebase.auth.GoogleAuthProvider();\n  provider.addScope(\"profile\");\n  provider.addScope(\"email\");\n  let axiosresult = await window.firebase.auth().signInWithPopup(provider).then(result => {\n    // This gives you a Google Access Token.\n    console.log(result);\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user;\n    console.log(JSON.stringify(user));\n    console.log(user.email);\n    console.log(token);\n    console.log(user.refreshToken);\n    result = {\n      isSuccess: \"true\",\n      message: \"user loggedin\",\n      dataprops: {\n        email: user.email,\n        expiresIn: 3600,\n        idToken: token,\n        refreshToken: user.refreshToken,\n        emailVerified: user.emailVerified\n      }\n    };\n    return result; // axios\n    //   .post(\n    //     firebaseAuthgetProviderslURL,\n    //     {\n    //       identifier: user.email,\n    //       continueUri: \"http://localhost:3000/\",\n    //     },\n    //     {\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //     }\n    //   )\n    //   .then((response) => {\n    //     console.log(response);\n    //\n    //   })\n    //   .catch((error) => {\n    //     console.log(error.response);\n    //     result = {\n    //       isSuccess: \"false\",\n    //       message: error.response.data.error.message,\n    //       dataprops: {},\n    //     };\n    //   });\n  });\n  console.log(axiosresult);\n  return axiosresult;\n}\nexport function signInwithFacebookFirebase(userDetails) {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  }; // let useremail = userDetails.username;\n  // let password = userDetails.password;\n  // let idToken = userDetails.idToken;\n\n  var provider = new window.firebase.auth.FacebookAuthProvider(); //provider.addScope(\"profile\");\n  //provider.addScope(\"email\");\n\n  provider.addScope(\"user_birthday\"); // firebase.auth().languageCode = \"fr_FR\";\n\n  provider.setCustomParameters({\n    display: \"popup\"\n  });\n  window.firebase.auth().signInWithPopup(provider).then(function (result) {\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    var token = result.credential.accessToken; // The signed-in user info.\n\n    var user = result.user; // ...\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  });\n}\nexport async function isAuthenticatedUserFirebase(userDetails) {\n  let result = {};\n  let userIdtoken = await sessionStorage.getItem(\"orgidToken\");\n\n  try {\n    let axiosresult = await axios.post(firebaseAuthGetAllUsersURL, {\n      idToken: userIdtoken\n    }).then(response => {\n      console.log(response.data.users[0]); //this.setState({ userData: response.data.users[0] });\n\n      if (!response.data.users[0].emailVerified) {\n        result = {\n          isSuccess: \"false\",\n          message: \"please click on verification link in email to proceed\",\n          dataprops: {}\n        };\n        return result;\n      } else {\n        result = {\n          isSuccess: \"true\",\n          message: \"\",\n          dataprops: {}\n        };\n        return result;\n      }\n    }).catch(e => {\n      console.error(e);\n      result = {\n        isSuccess: \"false\",\n        message: JSON.stringify(e),\n        dataprops: {}\n      };\n      return result;\n    });\n    result = axiosresult;\n  } catch (err) {\n    result = {\n      isSuccess: \"false\",\n      message: JSON.stringify(err),\n      dataprops: {}\n    };\n  }\n\n  return result;\n}\nexport async function getUserProfileFirebase(userDetails) {\n  var user = new window.firebase.auth().currentUser;\n  console.log(JSON.stringify(user));\n  let result = {\n    isSuccess: \"true\",\n    message: \"\",\n    dataprops: {\n      name: user.displayName,\n      phone: user.phoneNumber\n    }\n  }; // let userIdtoken = await sessionStorage.getItem(\"orgidToken\");\n  // if (!userIdtoken) {\n  //   userIdtoken = userDetails.idToken;\n  // }\n  // alert(userIdtoken);\n  // try {\n  //   axios\n  //     .post(firebaseAuthGetAllUsersURL, {\n  //       idToken: userIdtoken,\n  //     })\n  //     .then((response) => {\n  //       console.log(response.data.users[0]);\n  //       //this.setState({ userData: response.data.users[0] });\n  //       if (!response.data.users[0].emailVerified) {\n  //         result = {\n  //           isSuccess: \"false\",\n  //           message: \"please click on verification link in email to proceed\",\n  //           dataprops: {},\n  //         };\n  //       } else {\n  //         result = {\n  //           isSuccess: \"true\",\n  //           message: \"\",\n  //           dataprops: {},\n  //         };\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       console.error(e);\n  //       result = {\n  //         isSuccess: \"false\",\n  //         message: JSON.stringify(e),\n  //         dataprops: {},\n  //       };\n  //     });\n  // } catch (err) {\n  //   result = {\n  //     isSuccess: \"false\",\n  //     message: JSON.stringify(err),\n  //     dataprops: {},\n  //   };\n  // }\n\n  console.log(result);\n  return result;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/auth/firebase.js"],"names":["axios","errMessage","firebaseWebApiKey","firebaseAuthSignupURL","firebaseAuthSigninURL","firebaseAuthrefreshTokenURL","firebaseAuthGetAllUsersURL","firebaseAuthChangePasswordURL","firebaseAuthResetPasswordURL","firebaseAuthVeifyEmailURL","firebaseAuthgetProviderslURL","signinFirebase","userDetails","console","log","result","isSuccess","message","dataprops","useremail","username","password","axiosresult","post","email","returnSecureToken","headers","then","response","data","catch","error","refreshTokenFirebase","refreshtoken","grant_type","refresh_token","signupFirebase","userState","registeremail","registerpassword","registerfirstname","registerlastname","registerphone","displayName","phoneNumber","axiosemailresult","requestType","idToken","resetPasswordFirebase","auth","window","firebase","forgotemail","sendPasswordResetEmail","alert","JSON","stringify","includes","forgetPasswordFirebase","isUserAlreadyExistsFirebase","changePasswordFirebase","signInwithGoogleFirebase","provider","GoogleAuthProvider","addScope","signInWithPopup","token","credential","accessToken","user","refreshToken","expiresIn","emailVerified","signInwithFacebookFirebase","FacebookAuthProvider","setCustomParameters","display","errorCode","code","errorMessage","isAuthenticatedUserFirebase","userIdtoken","sessionStorage","getItem","users","e","err","getUserProfileFirebase","currentUser","name","phone"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n//import React from \"react\";\n\n//var firebase = require(\"firebase\");\n//var firebaseui = require(\"firebaseui\");\n\n// Initialize Firebase\n//window.firebase.initializeApp(firebaseConfig);\n\nlet errMessage = \"\";\nlet firebaseWebApiKey = \"AIzaSyAwsbEv9dvu2aDeOf4bpMZ2byvwLUgqIDo\";\nlet firebaseAuthSignupURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthSigninURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthrefreshTokenURL =\n  \"https://securetoken.googleapis.com/v1/token?key=\" + firebaseWebApiKey;\nlet firebaseAuthGetAllUsersURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthChangePasswordURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthResetPasswordURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthVeifyEmailURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=\" +\n  firebaseWebApiKey;\nlet firebaseAuthgetProviderslURL =\n  \"https://identitytoolkit.googleapis.com/v1/accounts:createAuthUri?key=\" +\n  firebaseWebApiKey;\n\nexport async function signinFirebase(userDetails) {\n  console.log(userDetails);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let useremail = userDetails.username;\n  let password = userDetails.password;\n  console.log(useremail);\n  console.log(password);\n\n  let axiosresult = await axios\n    .post(\n      firebaseAuthSigninURL,\n      {\n        email: useremail,\n        password: password,\n        returnSecureToken: true,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      result = {\n        isSuccess: \"false\",\n        message: error.response.data.error.message,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function refreshTokenFirebase(userDetails) {\n  console.log(userDetails);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  // let useremail = userDetails.username;\n  // let password = userDetails.password;\n  let refreshtoken = userDetails.refreshtoken;\n  // console.log(useremail);\n  console.log(refreshtoken);\n\n  let axiosresult = await axios\n    .post(\n      firebaseAuthrefreshTokenURL,\n      {\n        grant_type: \"refresh_token\",\n        refresh_token: refreshtoken,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      result = {\n        isSuccess: \"false\",\n        message: error.response.data.error.message,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function signupFirebase(userDetails) {\n  console.log(userDetails);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let useremail = userDetails.userState.registeremail;\n  let password = userDetails.userState.registerpassword;\n  let registerfirstname = userDetails.userState.registerfirstname;\n  let registerlastname = userDetails.userState.registerlastname;\n  let registerphone = userDetails.userState.registerphone;\n\n  let axiosresult = await axios\n    .post(\n      firebaseAuthSignupURL,\n      {\n        email: useremail,\n        password: password,\n        displayName: registerfirstname + \" \" + registerlastname,\n        phoneNumber: registerphone,\n        returnSecureToken: true,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    .then(async (response) => {\n      let axiosemailresult = await axios\n        .post(\n          firebaseAuthVeifyEmailURL,\n          {\n            requestType: \"VERIFY_EMAIL\",\n            idToken: response.data.idToken,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response);\n          result = {\n            isSuccess: \"true\",\n            message: \"Please Signin to Access\",\n            dataprops: response.data,\n          };\n          console.log(result);\n          return result;\n        })\n        .catch((error) => {\n          result = {\n            isSuccess: \"false\",\n            message: error.response.data.error.message,\n            dataprops: {},\n          };\n          return result;\n        });\n      return axiosemailresult;\n    })\n    .catch((error) => {\n      result = {\n        isSuccess: \"false\",\n        message: error.response.data.error.message,\n        dataprops: {},\n      };\n      return result;\n    });\n  console.log(axiosresult);\n  result = axiosresult;\n\n  return result;\n}\n\nexport async function resetPasswordFirebase(userDetails) {\n  var auth = window.firebase.auth();\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let useremail = userDetails.userState.forgotemail;\n  console.log(userDetails);\n\n  let axiosresult = auth\n    .sendPasswordResetEmail(useremail)\n    .then(function () {\n      result = { isSuccess: \"true\", message: \"\", dataprops: {} };\n      return result;\n    })\n    .catch(function (error) {\n      alert(JSON.stringify(error));\n      let message = \"\";\n      if (error.message.includes(\"The email address is badly formatted\")) {\n        message = \"Invalid Email\";\n      }\n      if (error.message.includes(\"There is no user\")) {\n        message = \"No Email found\";\n      }\n      result = {\n        isSuccess: \"false\",\n        message: message,\n        dataprops: {},\n      };\n      return result;\n    });\n\n  // let axiosresult = await axios\n  //   .post(\n  //     firebaseAuthResetPasswordURL,\n  //     {\n  //       requestType: \"PASSWORD_RESET\",\n  //       email: useremail,\n  //     },\n  //     {\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //   .then((response) => {\n  //     console.log(response);\n  //     result = {\n  //       isSuccess: \"true\",\n  //       message: \"reset email sent\",\n  //       dataprops: response.data,\n  //     };\n  //     return result;\n  //   })\n  //   .catch((error) => {\n  //     console.log(error.response);\n  //     result = {\n  //       isSuccess: \"false\",\n  //       message: error.response.data.error.message,\n  //       dataprops: {},\n  //     };\n  //     return result;\n  //   });\n  // result = axiosresult;\n  // console.log(result);\n  return axiosresult;\n}\n\nexport function forgetPasswordFirebase() {\n  let result = {};\n  return result;\n}\n\nexport function isUserAlreadyExistsFirebase() {\n  let result = {};\n  return result;\n}\n\nexport function changePasswordFirebase(userDetails) {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  let useremail = userDetails.username;\n  let password = userDetails.password;\n  let idToken = userDetails.idToken;\n\n  axios\n    .post(\n      firebaseAuthChangePasswordURL,\n      {\n        idToken: idToken,\n        password: password,\n        returnSecureToken: true,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"password changed\",\n        dataprops: response.data,\n      };\n      //  this.getUserData();\n    })\n    .catch((error) => {\n      console.log(error.response);\n      result = {\n        isSuccess: \"false\",\n        message: error.response.data.error.message,\n        dataprops: {},\n      };\n    });\n}\n\nexport async function signInwithGoogleFirebase(userDetails) {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  // let useremail = userDetails.username;\n  // let password = userDetails.password;\n  // let idToken = userDetails.idToken;\n\n  var provider = new window.firebase.auth.GoogleAuthProvider();\n  provider.addScope(\"profile\");\n  provider.addScope(\"email\");\n  let axiosresult = await window.firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      // This gives you a Google Access Token.\n      console.log(result);\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(JSON.stringify(user));\n      console.log(user.email);\n      console.log(token);\n      console.log(user.refreshToken);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: {\n          email: user.email,\n          expiresIn: 3600,\n          idToken: token,\n          refreshToken: user.refreshToken,\n          emailVerified: user.emailVerified,\n        },\n      };\n      return result;\n      // axios\n      //   .post(\n      //     firebaseAuthgetProviderslURL,\n      //     {\n      //       identifier: user.email,\n      //       continueUri: \"http://localhost:3000/\",\n      //     },\n      //     {\n      //       headers: {\n      //         \"Content-Type\": \"application/json\",\n      //       },\n      //     }\n      //   )\n      //   .then((response) => {\n      //     console.log(response);\n\n      //\n      //   })\n      //   .catch((error) => {\n      //     console.log(error.response);\n      //     result = {\n      //       isSuccess: \"false\",\n      //       message: error.response.data.error.message,\n      //       dataprops: {},\n      //     };\n      //   });\n    });\n\n  console.log(axiosresult);\n  return axiosresult;\n}\nexport function signInwithFacebookFirebase(userDetails) {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  // let useremail = userDetails.username;\n  // let password = userDetails.password;\n  // let idToken = userDetails.idToken;\n\n  var provider = new window.firebase.auth.FacebookAuthProvider();\n  //provider.addScope(\"profile\");\n  //provider.addScope(\"email\");\n  provider.addScope(\"user_birthday\");\n  // firebase.auth().languageCode = \"fr_FR\";\n  provider.setCustomParameters({\n    display: \"popup\",\n  });\n  window.firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(function (result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n    })\n    .catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n}\n\nexport async function isAuthenticatedUserFirebase(userDetails) {\n  let result = {};\n  let userIdtoken = await sessionStorage.getItem(\"orgidToken\");\n  try {\n    let axiosresult = await axios\n      .post(firebaseAuthGetAllUsersURL, {\n        idToken: userIdtoken,\n      })\n      .then((response) => {\n        console.log(response.data.users[0]);\n        //this.setState({ userData: response.data.users[0] });\n        if (!response.data.users[0].emailVerified) {\n          result = {\n            isSuccess: \"false\",\n            message: \"please click on verification link in email to proceed\",\n            dataprops: {},\n          };\n          return result;\n        } else {\n          result = {\n            isSuccess: \"true\",\n            message: \"\",\n            dataprops: {},\n          };\n          return result;\n        }\n      })\n      .catch((e) => {\n        console.error(e);\n        result = {\n          isSuccess: \"false\",\n          message: JSON.stringify(e),\n          dataprops: {},\n        };\n        return result;\n      });\n    result = axiosresult;\n  } catch (err) {\n    result = {\n      isSuccess: \"false\",\n      message: JSON.stringify(err),\n      dataprops: {},\n    };\n  }\n\n  return result;\n}\nexport async function getUserProfileFirebase(userDetails) {\n  var user = new window.firebase.auth().currentUser;\n\n  console.log(JSON.stringify(user));\n\n  let result = {\n    isSuccess: \"true\",\n    message: \"\",\n    dataprops: { name: user.displayName, phone: user.phoneNumber },\n  };\n\n  // let userIdtoken = await sessionStorage.getItem(\"orgidToken\");\n  // if (!userIdtoken) {\n  //   userIdtoken = userDetails.idToken;\n  // }\n  // alert(userIdtoken);\n  // try {\n  //   axios\n  //     .post(firebaseAuthGetAllUsersURL, {\n  //       idToken: userIdtoken,\n  //     })\n  //     .then((response) => {\n  //       console.log(response.data.users[0]);\n  //       //this.setState({ userData: response.data.users[0] });\n  //       if (!response.data.users[0].emailVerified) {\n  //         result = {\n  //           isSuccess: \"false\",\n  //           message: \"please click on verification link in email to proceed\",\n  //           dataprops: {},\n  //         };\n  //       } else {\n  //         result = {\n  //           isSuccess: \"true\",\n  //           message: \"\",\n  //           dataprops: {},\n  //         };\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       console.error(e);\n  //       result = {\n  //         isSuccess: \"false\",\n  //         message: JSON.stringify(e),\n  //         dataprops: {},\n  //       };\n  //     });\n  // } catch (err) {\n  //   result = {\n  //     isSuccess: \"false\",\n  //     message: JSON.stringify(err),\n  //     dataprops: {},\n  //   };\n  // }\n  console.log(result);\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}