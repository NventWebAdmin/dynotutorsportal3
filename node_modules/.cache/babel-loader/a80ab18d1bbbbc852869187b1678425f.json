{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/mail.js\";\nimport React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport Mailnewaction from \"./mailnewaction\";\nimport Mailviewaction from \"./mailviewaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.componentDidUpdate = prevProps => {\n      let {\n        isConnectedtoWebsocketServer,\n        currentuserid,\n        serverMessage,\n        serverMessageArray\n      } = this.state;\n      let newlocalParentProps = this.props.localParentProps;\n      console.log(newlocalParentProps);\n\n      if (JSON.stringify(serverMessage) != JSON.stringify(newlocalParentProps.serverMessage)) {\n        console.log(JSON.stringify(serverMessage));\n        console.log(JSON.stringify(newlocalParentProps.serverMessage));\n        serverMessageArray.push(newlocalParentProps.serverMessage);\n        alert();\n        this.setState({\n          serverMessage: newlocalParentProps.serverMessage,\n          serverMessageArray: serverMessageArray\n        });\n      }\n    };\n\n    this.backHandler = () => {\n      this.setState({\n        compType: \"list\"\n      });\n    };\n\n    this.onmailsent = props => {\n      let {\n        msgObj\n      } = props;\n      console.log(msgObj);\n      msgObj.utilityname = \"mail\";\n      this.props.localParentMethod({\n        methodname: \"openwebsocketconnection\",\n        props: {}\n      });\n      this.props.localParentMethod({\n        methodname: \"sendmessage\",\n        methodprops: msgObj\n      });\n      this.setState({\n        compType: \"list\"\n      });\n      let {\n        orgname,\n        userprofileid,\n        userid,\n        tablename,\n        datadisplaytype,\n        viewname,\n        datasortparambeginswith\n      } = this.props.compprops;\n      this.getRecordListMetadataAndDatafromServer({\n        orgname: orgname,\n        userProfileId: userprofileid,\n        userId: userid,\n        tableName: tablename,\n        datasortparambeginswith: datasortparambeginswith,\n        datasortparamequalsto: \"\",\n        action: \"\",\n        viewName: viewname,\n        datadisplaytype: datadisplaytype\n      });\n    };\n\n    this.resetMailBox = () => {};\n\n    this.newMail = () => {\n      this.setState({\n        compType: \"new\"\n      });\n    };\n\n    this.viewMail = props => {\n      let {\n        viewMailData\n      } = props;\n      this.setState({\n        compType: \"view\",\n        viewMailData: viewMailData\n      });\n    };\n\n    this.state = {\n      compType: \"list\",\n      viewMailData: {},\n      serverMessage: {},\n      serverMessageArray: [],\n      mailArray: []\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n      datasortparambeginswith\n    } = this.props.compprops;\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: datasortparambeginswith,\n      datasortparamequalsto: \"\",\n      action: \"\",\n      viewName: viewname,\n      datadisplaytype: datadisplaytype\n    });\n  }\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      orgname,\n      userProfileId,\n      userId,\n      tableName,\n      datasortparambeginswith,\n      datasortparamequalsto,\n      action,\n      viewName,\n      datadisplaytype\n    } = props;\n    let {\n      mainPanelHtmlObj\n    } = this.state;\n    let dataParams = {\n      objectName: tableName,\n      objectData: {},\n      keyConditions: [{\n        field: \"orgname\",\n        value: orgname,\n        expression: \"=\"\n      }, {\n        field: \"id\",\n        value: datasortparambeginswith + \"-\" + userId,\n        expression: \"beginswith\"\n      }],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\"\n    };\n    let dataresult = await getRecorddata(dataParams);\n\n    if (dataresult.isSuccess === \"false\") {\n      alert(\"data\" + dataresult.message);\n    } else {\n      console.log(dataresult.dataprops.Items);\n      this.setState({\n        mailArray: dataresult.dataprops.Items\n      });\n    }\n  }\n\n  render() {\n    let {\n      serverMessageArray,\n      mailArray,\n      viewMailData\n    } = this.state;\n    console.log(this.props);\n    console.log(serverMessageArray);\n    let {\n      compType\n    } = this.state;\n    let sidebarHtml = [];\n    sidebarHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" org-cdivv-sp org-cdivleft-sp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-\",\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Important\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Drafts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Outbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Sent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this));\n    let emailActionsHtml = [];\n    emailActionsHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.newMail,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this));\n    let emailrowhtml = [];\n    let emailarrayHtml = [];\n\n    for (let i = 0; i < mailArray.length; i++) {\n      emailarrayHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-cdivv-sp\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fai-c org-bluebg\",\n          style: {\n            border: \"1px solid grey\",\n            margin: \"0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              paddingRight: \"50px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GetGoogleIcon, {\n              name: \"label\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              paddingRight: \"100px\"\n            },\n            onClick: () => {\n              this.viewMail({\n                viewMailData: mailArray[i]\n              });\n            },\n            children: mailArray[i].from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              this.viewMail({\n                viewMailData: mailArray[i]\n              });\n            },\n            children: mailArray[i].subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this));\n    } // //for (let i = 0; i < 10; i++) {\n    // emailarrayHtml.push({emailrowhtml}</div>);\n    // // }\n\n\n    let mainpanelHtml = [];\n    mainpanelHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emailActionsHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 24\n    }, this));\n    mainpanelHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: emailarrayHtml\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 24\n    }, this));\n    let newmailHtml = [];\n    newmailHtml.push( /*#__PURE__*/_jsxDEV(Mailnewaction, { ...this.props,\n      onmailsent: this.onmailsent,\n      backHandler: this.backHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this));\n    let viewmailHtml = [];\n    viewmailHtml.push( /*#__PURE__*/_jsxDEV(Mailviewaction, { ...this.props,\n      viewMailData: viewMailData,\n      backHandler: this.backHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [compType == \"list\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p \",\n          children: sidebarHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p \",\n          children: mainpanelHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : [], compType == \"new\" ? newmailHtml : [], compType == \"view\" ? viewmailHtml : []]\n    }, void 0, true);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/mail.js"],"names":["React","Component","getRecorddata","createRecord","bulkcreateRecord","GetLocalIcon","GetGoogleIcon","Mailnewaction","Mailviewaction","F","constructor","props","componentDidUpdate","prevProps","isConnectedtoWebsocketServer","currentuserid","serverMessage","serverMessageArray","state","newlocalParentProps","localParentProps","console","log","JSON","stringify","push","alert","setState","backHandler","compType","onmailsent","msgObj","utilityname","localParentMethod","methodname","methodprops","orgname","userprofileid","userid","tablename","datadisplaytype","viewname","datasortparambeginswith","compprops","getRecordListMetadataAndDatafromServer","userProfileId","userId","tableName","datasortparamequalsto","action","viewName","resetMailBox","newMail","viewMail","viewMailData","mailArray","componentDidMount","mainPanelHtmlObj","dataParams","objectName","objectData","keyConditions","field","value","expression","filterConditions","pageSize","limit","exclusiveStartKey","dataresult","isSuccess","message","dataprops","Items","render","sidebarHtml","emailActionsHtml","emailrowhtml","emailarrayHtml","i","length","border","margin","paddingRight","from","subject","mainpanelHtml","newmailHtml","viewmailHtml"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport Mailnewaction from \"./mailnewaction\";\nimport Mailviewaction from \"./mailviewaction\";\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      compType: \"list\",\n      viewMailData: {},\n      serverMessage: {},\n      serverMessageArray: [],\n      mailArray: [],\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n      datasortparambeginswith,\n    } = this.props.compprops;\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: datasortparambeginswith,\n      datasortparamequalsto: \"\",\n      action: \"\",\n      viewName: viewname,\n      datadisplaytype: datadisplaytype,\n    });\n  }\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      orgname,\n      userProfileId,\n      userId,\n      tableName,\n      datasortparambeginswith,\n      datasortparamequalsto,\n      action,\n      viewName,\n      datadisplaytype,\n    } = props;\n    let { mainPanelHtmlObj } = this.state;\n\n    let dataParams = {\n      objectName: tableName,\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: datasortparambeginswith + \"-\" + userId,\n          expression: \"beginswith\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    let dataresult = await getRecorddata(dataParams);\n    if (dataresult.isSuccess === \"false\") {\n      alert(\"data\" + dataresult.message);\n    } else {\n      console.log(dataresult.dataprops.Items);\n      this.setState({ mailArray: dataresult.dataprops.Items });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    let {\n      isConnectedtoWebsocketServer,\n      currentuserid,\n      serverMessage,\n      serverMessageArray,\n    } = this.state;\n    let newlocalParentProps = this.props.localParentProps;\n    console.log(newlocalParentProps);\n    if (\n      JSON.stringify(serverMessage) !=\n      JSON.stringify(newlocalParentProps.serverMessage)\n    ) {\n      console.log(JSON.stringify(serverMessage));\n      console.log(JSON.stringify(newlocalParentProps.serverMessage));\n      serverMessageArray.push(newlocalParentProps.serverMessage);\n      alert();\n      this.setState({\n        serverMessage: newlocalParentProps.serverMessage,\n        serverMessageArray: serverMessageArray,\n      });\n    }\n  };\n\n  backHandler = () => {\n    this.setState({ compType: \"list\" });\n  };\n  onmailsent = (props) => {\n    let { msgObj } = props;\n    console.log(msgObj);\n    msgObj.utilityname = \"mail\";\n    this.props.localParentMethod({\n      methodname: \"openwebsocketconnection\",\n      props: {},\n    });\n    this.props.localParentMethod({\n      methodname: \"sendmessage\",\n      methodprops: msgObj,\n    });\n    this.setState({ compType: \"list\" });\n\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n      datasortparambeginswith,\n    } = this.props.compprops;\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: datasortparambeginswith,\n      datasortparamequalsto: \"\",\n      action: \"\",\n      viewName: viewname,\n      datadisplaytype: datadisplaytype,\n    });\n  };\n\n  resetMailBox = () => {};\n\n  newMail = () => {\n    this.setState({ compType: \"new\" });\n  };\n\n  viewMail = (props) => {\n    let { viewMailData } = props;\n    this.setState({ compType: \"view\", viewMailData: viewMailData });\n  };\n\n  render() {\n    let { serverMessageArray, mailArray, viewMailData } = this.state;\n\n    console.log(this.props);\n    console.log(serverMessageArray);\n    let { compType } = this.state;\n    let sidebarHtml = [];\n    sidebarHtml.push(\n      <div\n        className=\"\n      org-cdivv-sp org-cdivleft-sp\"\n      >\n        <div className=\"org-\">Inbox</div>\n        <div>Important</div>\n        <div>Drafts</div>\n        <div>Outbox</div>\n        <div>Sent</div>\n        <div>Custom</div>\n        <div>Deleted</div>\n      </div>\n    );\n\n    let emailActionsHtml = [];\n    emailActionsHtml.push(\n      <div>\n        <button onClick={this.newMail}>New</button>\n        <button>Delete</button>\n      </div>\n    );\n\n    let emailrowhtml = [];\n    let emailarrayHtml = [];\n    for (let i = 0; i < mailArray.length; i++) {\n      emailarrayHtml.push(\n        <div className=\"org-cdivv-sp\">\n          <div\n            className=\"org-fr org-fai-c org-bluebg\"\n            style={{ border: \"1px solid grey\", margin: \"0px\" }}\n          >\n            <span style={{ paddingRight: \"50px\" }}>\n              <input type=\"checkbox\" />\n              <GetGoogleIcon name=\"label\" />\n            </span>\n            <span\n              style={{ paddingRight: \"100px\" }}\n              onClick={() => {\n                this.viewMail({ viewMailData: mailArray[i] });\n              }}\n            >\n              {mailArray[i].from}\n            </span>\n            <span\n              onClick={() => {\n                this.viewMail({ viewMailData: mailArray[i] });\n              }}\n            >\n              {mailArray[i].subject}\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    // //for (let i = 0; i < 10; i++) {\n    // emailarrayHtml.push({emailrowhtml}</div>);\n    // // }\n\n    let mainpanelHtml = [];\n    mainpanelHtml.push(<div>{emailActionsHtml}</div>);\n    mainpanelHtml.push(<div>{emailarrayHtml}</div>);\n\n    let newmailHtml = [];\n    newmailHtml.push(\n      <Mailnewaction\n        {...this.props}\n        onmailsent={this.onmailsent}\n        backHandler={this.backHandler}\n      />\n    );\n\n    let viewmailHtml = [];\n    viewmailHtml.push(\n      <Mailviewaction\n        {...this.props}\n        viewMailData={viewMailData}\n        backHandler={this.backHandler}\n      />\n    );\n\n    return (\n      <>\n        {compType == \"list\" ? (\n          <div className=\"org-fr \">\n            <div className=\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p \">\n              {sidebarHtml}\n            </div>\n            <div className=\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p \">\n              {mainpanelHtml}\n            </div>\n          </div>\n        ) : (\n          []\n        )}\n        {compType == \"new\" ? newmailHtml : []}\n        {compType == \"view\" ? viewmailHtml : []}\n      </>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}