{"ast":null,"code":"import { getRecordsAWS, getRecordAWS, createRecordAWS, updateRecordAWS, deleteRecordAWS } from \"./aws\";\nimport { getRecordsFirebase, getRecordFirebase, createRecordFirebase, updateRecordFirebase, deleteRecordFirebase } from \"./firebase\";\nimport { configdata } from \"../config\";\nexport function getImageRecordsStorage(dataprops) {\n  let recArray;\n\n  if (configdata().imagestoragevendor == \"aws\") {\n    recArray = getRecordsAWS(dataprops);\n  }\n\n  if (configdata().imagestoragevendor == \"firebase\") {\n    recArray = getRecordsFirebase(dataprops);\n  }\n\n  return recArray;\n}\nexport function getImageRecordStorage(dataprops) {\n  let rec;\n\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function createImageRecordStorage(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function updateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n\n  return rec;\n}\nexport function deleteRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n\n  return rec;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/imagestorage/index.js"],"names":["getRecordsAWS","getRecordAWS","createRecordAWS","updateRecordAWS","deleteRecordAWS","getRecordsFirebase","getRecordFirebase","createRecordFirebase","updateRecordFirebase","deleteRecordFirebase","configdata","getImageRecordsStorage","dataprops","recArray","imagestoragevendor","getImageRecordStorage","rec","createImageRecordStorage","console","log","updateRecord","deleteRecord"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,OANP;AAOA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,QAMO,YANP;AAQA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA2C;AAChD,MAAIC,QAAJ;;AACA,MAAIH,UAAU,GAAGI,kBAAb,IAAmC,KAAvC,EAA8C;AAC5CD,IAAAA,QAAQ,GAAGb,aAAa,CAACY,SAAD,CAAxB;AACD;;AACD,MAAIF,UAAU,GAAGI,kBAAb,IAAmC,UAAvC,EAAmD;AACjDD,IAAAA,QAAQ,GAAGR,kBAAkB,CAACO,SAAD,CAA7B;AACD;;AAED,SAAOC,QAAP;AACD;AAED,OAAO,SAASE,qBAAT,CAA+BH,SAA/B,EAA0C;AAC/C,MAAII,GAAJ;;AACA,MAAIN,UAAU,GAAGI,kBAAb,IAAmC,KAAvC,EAA8C;AAC5CE,IAAAA,GAAG,GAAGf,YAAY,CAACW,SAAD,CAAlB;AACD;;AACD,MAAIF,UAAU,GAAGI,kBAAb,IAAmC,UAAvC,EAAmD;AACjDE,IAAAA,GAAG,GAAGV,iBAAiB,CAACM,SAAD,CAAvB;AACD;;AACD,SAAOI,GAAP;AACD;AAED,OAAO,SAASC,wBAAT,CAAkCL,SAAlC,EAA6C;AAClDM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,MAAII,GAAJ;;AACA,MAAIN,UAAU,GAAGI,kBAAb,IAAmC,KAAvC,EAA8C;AAC5CE,IAAAA,GAAG,GAAGd,eAAe,CAACU,SAAD,CAArB;AACD;;AACD,MAAIF,UAAU,GAAGI,kBAAb,IAAmC,UAAvC,EAAmD;AACjDE,IAAAA,GAAG,GAAGT,oBAAoB,CAACK,SAAD,CAA1B;AACD;;AACD,SAAOI,GAAP;AACD;AAED,OAAO,SAASI,YAAT,CAAsBR,SAAtB,EAAiC;AACtCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,MAAII,GAAJ;;AACA,MAAIN,UAAU,GAAGI,kBAAb,IAAmC,KAAvC,EAA8C;AAC5CE,IAAAA,GAAG,GAAGb,eAAe,CAACS,SAAD,CAArB;AACD;;AACD,MAAIF,UAAU,GAAGI,kBAAb,IAAmC,UAAvC,EAAmD;AACjDE,IAAAA,GAAG,GAAGR,oBAAoB,CAACI,SAAD,CAA1B;AACD;;AACD,SAAOI,GAAP;AACD;AAED,OAAO,SAASK,YAAT,CAAsBT,SAAtB,EAAiC;AACtCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACA,MAAII,GAAJ;;AACA,MAAIN,UAAU,GAAGI,kBAAb,IAAmC,KAAvC,EAA8C;AAC5CE,IAAAA,GAAG,GAAGZ,eAAe,CAACQ,SAAD,CAArB;AACD;;AACD,MAAIF,UAAU,GAAGI,kBAAb,IAAmC,UAAvC,EAAmD;AACjDE,IAAAA,GAAG,GAAGP,oBAAoB,CAACG,SAAD,CAA1B;AACD;;AACD,SAAOI,GAAP;AACD","sourcesContent":["import {\n  getRecordsAWS,\n  getRecordAWS,\n  createRecordAWS,\n  updateRecordAWS,\n  deleteRecordAWS,\n} from \"./aws\";\nimport {\n  getRecordsFirebase,\n  getRecordFirebase,\n  createRecordFirebase,\n  updateRecordFirebase,\n  deleteRecordFirebase,\n} from \"./firebase\";\n\nimport { configdata } from \"../config\";\n\nexport function getImageRecordsStorage(dataprops) {\n  let recArray;\n  if (configdata().imagestoragevendor == \"aws\") {\n    recArray = getRecordsAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    recArray = getRecordsFirebase(dataprops);\n  }\n\n  return recArray;\n}\n\nexport function getImageRecordStorage(dataprops) {\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function createImageRecordStorage(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function updateRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n  return rec;\n}\n\nexport function deleteRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().imagestoragevendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n  if (configdata().imagestoragevendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n  return rec;\n}\n"]},"metadata":{},"sourceType":"module"}