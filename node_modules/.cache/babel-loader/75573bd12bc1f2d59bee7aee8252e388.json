{"ast":null,"code":"import _classCallCheck from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{sortArray,fieldTypeHtmltoDBmapping}from\"../js/index\";import Htmlform from\"./htmlformnew\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var F=/*#__PURE__*/function(_Component){_inherits(F,_Component);var _super=_createSuper(F);function F(props){var _this;_classCallCheck(this,F);_this=_super.call(this,props);_this.tableActionBtnClick=function(e){console.log(e.target.dataset);var itemListData=[];var recordDataTemp=_this.state.recordDataTemp;if(e.target.dataset.name==\"upload\"||e.target.dataset.name==\"download\"){var tableCheckBoxElements=document.querySelectorAll(\".tablecompinputcheckbox\");console.log(tableCheckBoxElements);for(var i=0;i<tableCheckBoxElements.length;i++){for(var j=0;j<recordDataTemp.length;j++){if(tableCheckBoxElements[i].dataset.rowhtmlid1==recordDataTemp[j][_this.props.rowhtmlid1]&&tableCheckBoxElements[i].checked){itemListData.push(recordDataTemp[j]);}}}console.log(itemListData);if(e.target.dataset.name==\"upload\"){_this.props.tableOnclick({itemLabel:\"\",itemName:e.target.dataset.name,itemType:\"tablebutton\",itemData:\"\",itemListData:itemListData});}if(e.target.dataset.name==\"download\"){_this.setState({downloadTableasCSV:true});}}else{_this.props.tableOnclick({itemLabel:\"\",itemName:e.target.dataset.name,itemType:e.target.dataset.actiontype,itemId:e.target.dataset.actionid,actionid:e.target.dataset.actionid,itemData:\"\",itemListData:itemListData});}};_this.state={mainpanelHtml:[],recordData:[],recordDataTemp:[],selectedrecordData:[],updaterecorddatafromstate:[],morerecorddatafromstate:[]};return _this;}_createClass(F,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.recordData){var totalRows=this.props.recordData.length;this.setState({totalRows:totalRows,recordData:this.props.recordData,recordDataTemp:this.props.recordData,selectedColumn:\"\"});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){console.log(this.props.morerecorddata);var _this$state=this.state,recordData=_this$state.recordData,recordDataTemp=_this$state.recordDataTemp,updaterecorddatafromstate=_this$state.updaterecorddatafromstate,morerecorddatafromstate=_this$state.morerecorddatafromstate;var _this$props=this.props,morerecorddata=_this$props.morerecorddata,updaterecorddata=_this$props.updaterecorddata;var prevmorerecorddata=prevProps.prevmorerecorddata,prevupdaterecorddata=prevProps.prevupdaterecorddata;if(JSON.stringify(morerecorddatafromstate)!=JSON.stringify(morerecorddata)){for(var i in morerecorddata){recordDataTemp.push(morerecorddata[i]);}this.setState({recordDataTemp:recordDataTemp,recordData:recordData,morerecorddatafromstate:morerecorddata});}if(JSON.stringify(updaterecorddatafromstate)!=JSON.stringify(updaterecorddata)){for(var _i in recordDataTemp){for(var j in updaterecorddata){if(recordDataTemp[_i].id==updaterecorddata[j].id){recordDataTemp[_i]=Object.assign(recordDataTemp[_i],updaterecorddata[j]);}}for(var _i2 in recordData){for(var _j in updaterecorddata){if(recordData[_i2].id==updaterecorddata[_j].id){recordData[_i2]=Object.assign(recordData[_i2],updaterecorddata[_j]);}}}this.setState({recordDataTemp:recordDataTemp,recordData:recordData,updaterecorddatafromstate:updaterecorddata});}}}},{key:\"updateComponentData\",value:function updateComponentData(){}},{key:\"render\",value:function render(){var _this$props2=this.props,columnMetadata=_this$props2.columnMetadata,activeTableviewName=_this$props2.activeTableviewName,listrecordcompsperrow=_this$props2.listrecordcompsperrow;var recordData=this.state.recordData;var mainpanelHtml=[];var activeColumnMetadata=columnMetadata[activeTableviewName];console.log(activeColumnMetadata);// buttons\nvar activeButtons=activeColumnMetadata.buttons;var buttonsArray=[];var buttonsArraySorted=[];var buttonsArrayHtml=[];for(var i in activeButtons){buttonsArray.push(activeButtons[i]);}buttonsArraySorted=sortArray(buttonsArray,\"order\",\"integer\");for(var _i3 in buttonsArraySorted){buttonsArrayHtml.push(/*#__PURE__*/_jsx(\"button\",{children:buttonsArraySorted[_i3].label}));}mainpanelHtml.push(buttonsArrayHtml);// dropdown\nvar dropdownOptionsHtml=[];var dropdownArray=[];var dropdownArraySorted=[];for(var _i4 in columnMetadata){dropdownArray.push(columnMetadata[_i4]);}dropdownArraySorted=sortArray(dropdownArray,\"order\",\"integer\");for(var _i5 in dropdownArraySorted){dropdownOptionsHtml.push(/*#__PURE__*/_jsx(\"option\",{children:dropdownArraySorted[_i5].label}));}mainpanelHtml.push(/*#__PURE__*/_jsxs(\"select\",{children:[dropdownOptionsHtml,\" \"]}));// datapanel\nvar dataHtml=[];var dataprops=[];var columnsArray=[];var columnsArraySorted=[];for(var _i6 in activeColumnMetadata.columns){columnsArray.push(activeColumnMetadata.columns[_i6]);}columnsArraySorted=sortArray(columnsArray,\"order\",\"integer\");for(var _i7 in recordData){var fieldDataprops=[];for(var j in columnsArraySorted){fieldDataprops.push({label:columnsArraySorted[j].label,name:\"\",type:fieldTypeHtmltoDBmapping({fieldType:columnsArraySorted[j].type,inputOrOutput:\"output\"}),width:columnsArraySorted[j]?columnsArraySorted[j].width:\"50%\",height:columnsArraySorted[j]?columnsArraySorted[j].height:\"50%\",hidelabel:columnsArraySorted[j].hidelabel,direction:columnsArraySorted[j].direction,placeholder:\"\",required:\"false\",readonly:\"true\",defaultvalue:recordData[_i7][columnsArraySorted[j].name],clientstatename:\"\",clientstatetype:\"\"});}var listrecordcompsperrowpercentage=100/listrecordcompsperrow+\"%\";console.log(listrecordcompsperrowpercentage);dataHtml.push(/*#__PURE__*/_jsx(Htmlform,{style:{width:listrecordcompsperrowpercentage},inputChanged:\"\",clkHandler:this.clickHandler,inputKeyUp:\"\",dataprops:fieldDataprops,bgcolor:\"\"}));}mainpanelHtml.push(/*#__PURE__*/_jsx(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p org-bb org-fr org-fjc-sb org-fai-s \",style:{backgroundColor:\"#F2F2F2\"},children:dataHtml}));console.log(columnMetadata);console.log(this.props);return/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:mainpanelHtml}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:this.tableActionBtnClick,\"data-name\":\"\",\"data-actionid\":\"\",\"data-actiontype\":\"morerecordsbutton\",children:\"More\"})})]})]});}}]);return F;}(Component);export default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/listtable.js"],"names":["React","Component","sortArray","fieldTypeHtmltoDBmapping","Htmlform","F","props","tableActionBtnClick","e","console","log","target","dataset","itemListData","recordDataTemp","state","name","tableCheckBoxElements","document","querySelectorAll","i","length","j","rowhtmlid1","checked","push","tableOnclick","itemLabel","itemName","itemType","itemData","setState","downloadTableasCSV","actiontype","itemId","actionid","mainpanelHtml","recordData","selectedrecordData","updaterecorddatafromstate","morerecorddatafromstate","totalRows","selectedColumn","prevProps","morerecorddata","updaterecorddata","prevmorerecorddata","prevupdaterecorddata","JSON","stringify","id","Object","assign","columnMetadata","activeTableviewName","listrecordcompsperrow","activeColumnMetadata","activeButtons","buttons","buttonsArray","buttonsArraySorted","buttonsArrayHtml","label","dropdownOptionsHtml","dropdownArray","dropdownArraySorted","dataHtml","dataprops","columnsArray","columnsArraySorted","columns","fieldDataprops","type","fieldType","inputOrOutput","width","height","hidelabel","direction","placeholder","required","readonly","defaultvalue","clientstatename","clientstatetype","listrecordcompsperrowpercentage","clickHandler","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { sortArray, fieldTypeHtmltoDBmapping } from \"../js/index\";\nimport Htmlform from \"./htmlformnew\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainpanelHtml: [],\n      recordData: [],\n      recordDataTemp: [],\n      selectedrecordData: [],\n      updaterecorddatafromstate: [],\n      morerecorddatafromstate: [],\n    };\n  }\n  componentDidMount() {\n    if (this.props.recordData) {\n      let totalRows = this.props.recordData.length;\n      this.setState({\n        totalRows: totalRows,\n        recordData: this.props.recordData,\n        recordDataTemp: this.props.recordData,\n        selectedColumn: \"\",\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.morerecorddata);\n    let {\n      recordData,\n      recordDataTemp,\n      updaterecorddatafromstate,\n      morerecorddatafromstate,\n    } = this.state;\n    let { morerecorddata, updaterecorddata } = this.props;\n    let { prevmorerecorddata, prevupdaterecorddata } = prevProps;\n    if (\n      JSON.stringify(morerecorddatafromstate) != JSON.stringify(morerecorddata)\n    ) {\n      for (let i in morerecorddata) {\n        recordDataTemp.push(morerecorddata[i]);\n      }\n      this.setState({\n        recordDataTemp: recordDataTemp,\n        recordData: recordData,\n        morerecorddatafromstate: morerecorddata,\n      });\n    }\n\n    if (\n      JSON.stringify(updaterecorddatafromstate) !=\n      JSON.stringify(updaterecorddata)\n    ) {\n      for (let i in recordDataTemp) {\n        for (let j in updaterecorddata) {\n          if (recordDataTemp[i].id == updaterecorddata[j].id) {\n            recordDataTemp[i] = Object.assign(\n              recordDataTemp[i],\n              updaterecorddata[j]\n            );\n          }\n        }\n\n        for (let i in recordData) {\n          for (let j in updaterecorddata) {\n            if (recordData[i].id == updaterecorddata[j].id) {\n              recordData[i] = Object.assign(recordData[i], updaterecorddata[j]);\n            }\n          }\n        }\n\n        this.setState({\n          recordDataTemp: recordDataTemp,\n          recordData: recordData,\n          updaterecorddatafromstate: updaterecorddata,\n        });\n      }\n    }\n  }\n\n  tableActionBtnClick = (e) => {\n    console.log(e.target.dataset);\n    let itemListData = [];\n    let { recordDataTemp } = this.state;\n    if (\n      e.target.dataset.name == \"upload\" ||\n      e.target.dataset.name == \"download\"\n    ) {\n      let tableCheckBoxElements = document.querySelectorAll(\n        \".tablecompinputcheckbox\"\n      );\n      console.log(tableCheckBoxElements);\n      for (let i = 0; i < tableCheckBoxElements.length; i++) {\n        for (let j = 0; j < recordDataTemp.length; j++) {\n          if (\n            tableCheckBoxElements[i].dataset.rowhtmlid1 ==\n              recordDataTemp[j][this.props.rowhtmlid1] &&\n            tableCheckBoxElements[i].checked\n          ) {\n            itemListData.push(recordDataTemp[j]);\n          }\n        }\n      }\n      console.log(itemListData);\n      if (e.target.dataset.name == \"upload\") {\n        this.props.tableOnclick({\n          itemLabel: \"\",\n          itemName: e.target.dataset.name,\n          itemType: \"tablebutton\",\n          itemData: \"\",\n          itemListData: itemListData,\n        });\n      }\n\n      if (e.target.dataset.name == \"download\") {\n        this.setState({ downloadTableasCSV: true });\n      }\n    } else {\n      this.props.tableOnclick({\n        itemLabel: \"\",\n        itemName: e.target.dataset.name,\n        itemType: e.target.dataset.actiontype,\n        itemId: e.target.dataset.actionid,\n        actionid: e.target.dataset.actionid,\n        itemData: \"\",\n        itemListData: itemListData,\n      });\n    }\n  };\n\n  updateComponentData() {}\n\n  render() {\n    let {\n      columnMetadata,\n\n      activeTableviewName,\n      listrecordcompsperrow,\n    } = this.props;\n    let { recordData } = this.state;\n    let mainpanelHtml = [];\n\n    let activeColumnMetadata = columnMetadata[activeTableviewName];\n    console.log(activeColumnMetadata);\n\n    // buttons\n    let activeButtons = activeColumnMetadata.buttons;\n    let buttonsArray = [];\n    let buttonsArraySorted = [];\n    let buttonsArrayHtml = [];\n    for (let i in activeButtons) {\n      buttonsArray.push(activeButtons[i]);\n    }\n    buttonsArraySorted = sortArray(buttonsArray, \"order\", \"integer\");\n    for (let i in buttonsArraySorted) {\n      buttonsArrayHtml.push(<button>{buttonsArraySorted[i].label}</button>);\n    }\n    mainpanelHtml.push(buttonsArrayHtml);\n\n    // dropdown\n    let dropdownOptionsHtml = [];\n    let dropdownArray = [];\n    let dropdownArraySorted = [];\n\n    for (let i in columnMetadata) {\n      dropdownArray.push(columnMetadata[i]);\n    }\n    dropdownArraySorted = sortArray(dropdownArray, \"order\", \"integer\");\n    for (let i in dropdownArraySorted) {\n      dropdownOptionsHtml.push(<option>{dropdownArraySorted[i].label}</option>);\n    }\n    mainpanelHtml.push(<select>{dropdownOptionsHtml} </select>);\n\n    // datapanel\n    let dataHtml = [];\n    let dataprops = [];\n    let columnsArray = [];\n    let columnsArraySorted = [];\n\n    for (let i in activeColumnMetadata.columns) {\n      columnsArray.push(activeColumnMetadata.columns[i]);\n    }\n    columnsArraySorted = sortArray(columnsArray, \"order\", \"integer\");\n    for (let i in recordData) {\n      let fieldDataprops = [];\n      for (let j in columnsArraySorted) {\n        fieldDataprops.push({\n          label: columnsArraySorted[j].label,\n          name: \"\",\n\n          type: fieldTypeHtmltoDBmapping({\n            fieldType: columnsArraySorted[j].type,\n            inputOrOutput: \"output\",\n          }),\n\n          width: columnsArraySorted[j] ? columnsArraySorted[j].width : \"50%\",\n\n          height: columnsArraySorted[j] ? columnsArraySorted[j].height : \"50%\",\n          hidelabel: columnsArraySorted[j].hidelabel,\n          direction: columnsArraySorted[j].direction,\n          placeholder: \"\",\n          required: \"false\",\n          readonly: \"true\",\n\n          defaultvalue: recordData[i][columnsArraySorted[j].name],\n\n          clientstatename: \"\",\n          clientstatetype: \"\",\n        });\n      }\n      let listrecordcompsperrowpercentage = 100 / listrecordcompsperrow + \"%\";\n      console.log(listrecordcompsperrowpercentage);\n      dataHtml.push(\n        <Htmlform\n          style={{ width: listrecordcompsperrowpercentage }}\n          inputChanged=\"\"\n          clkHandler={this.clickHandler}\n          inputKeyUp=\"\"\n          dataprops={fieldDataprops}\n          bgcolor=\"\"\n        />\n      );\n    }\n\n    mainpanelHtml.push(\n      <div\n        className=\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p org-bb org-fr org-fjc-sb org-fai-s \"\n        style={{\n          backgroundColor: \"#F2F2F2\",\n        }}\n      >\n        {dataHtml}\n      </div>\n    );\n\n    console.log(columnMetadata);\n\n    console.log(this.props);\n\n    return (\n      <div className=\"org-fr\">\n        <div>\n          <input />\n        </div>\n        <div>\n          <div>{mainpanelHtml}</div>\n          <div>\n            <button\n              onClick={this.tableActionBtnClick}\n              data-name=\"\"\n              data-actionid=\"\"\n              data-actiontype=\"morerecordsbutton\"\n            >\n              More\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}