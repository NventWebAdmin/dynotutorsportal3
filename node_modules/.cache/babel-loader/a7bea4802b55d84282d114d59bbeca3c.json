{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddataeditview2.js\";\nimport React, { Component } from \"react\";\nimport { getRecorddata, createRecord, updateRecord // bulkcreateRecord,\n, deleteRecord } from \"../db/index\";\nimport { sortArray, getLocalData, getDynamicCompPropsData, dataReplaceHandler } from \"../js/index\";\nimport Htmlform from \"./htmlformnew\";\nimport Calender from \"./calender\";\nimport Note from \"./notepadlist\"; //import { GetLocalIcon, GetGoogleIcon } from \"./icons\";\n\nimport Recorddatarelatedlist from \"./recorddatarelatedlist2\";\n/*\n \n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getServerData = async props => {\n      console.log(props);\n      let {\n        layoutid,\n        tablename,\n        recordid\n      } = props;\n      let localdata = getLocalData(this.props); // if (recordid != \"\") {\n      //   localdata.recordid = recordid;\n      // }\n\n      let layoutdataParams = {\n        objectName: \"tablelayout\",\n        objectData: {},\n        keyConditions: [{\n          field: \"orgname\",\n          value: localdata.orgname,\n          expression: \"=\"\n        }, {\n          field: \"id\",\n          value: layoutid,\n          expression: \"beginswith\"\n        }],\n        filterConditions: [],\n        pageSize: \"\",\n        limit: \"\",\n        exclusiveStartKey: \"\"\n      };\n      console.log(layoutdataParams);\n      let layoutdataresult = await getRecorddata(layoutdataParams);\n\n      if (layoutdataresult.isSuccess === \"false\") {\n        alert(\"data\" + layoutdataresult.message);\n      } else {\n        let layoutrecordDataList = layoutdataresult.dataprops.Items;\n        console.log(layoutrecordDataList);\n\n        if (recordid === \"\") {\n          this.setState({\n            showUI: false\n          }, () => {\n            this.setState({\n              layoutrecordData: layoutrecordDataList[0],\n              recordData: {},\n              showUI: true\n            });\n          });\n        } else {\n          let dataParams = {\n            objectName: tablename,\n            objectData: {},\n            keyConditions: [{\n              field: \"orgname\",\n              value: localdata.orgname,\n              expression: \"=\"\n            }, {\n              field: \"id\",\n              value: recordid,\n              expression: \"=\"\n            }],\n            filterConditions: [],\n            pageSize: \"\",\n            limit: \"\",\n            exclusiveStartKey: \"\"\n          };\n          console.log(dataParams);\n          let dataresult = await getRecorddata(dataParams);\n\n          if (dataresult.isSuccess === \"false\") {\n            alert(\"data\" + dataresult.message);\n          } else {\n            let recordDataList = dataresult.dataprops.Items;\n            console.log(recordDataList);\n\n            if (recordDataList.length > 0) {\n              this.setState({\n                showUI: false\n              }, () => {\n                this.setState({\n                  layoutrecordData: layoutrecordDataList[0],\n                  recordData: recordDataList[0],\n                  showUI: true\n                });\n              });\n            }\n          }\n        }\n      }\n    };\n\n    this.saveRecord = async (e, props) => {\n      let {\n        viewlayoutid,\n        editlayoutid,\n        tablename,\n        recordid //   defaultdatafilter,\n\n      } = this.props.compprops;\n      let {\n        layoutbuttonresult\n      } = props;\n      let {\n        recordData\n      } = this.state; // let result = await updateRecord({\n      //   objectName: tablename,\n      //   objectData: recordData,\n      // });\n      // if (result.isSuccess === \"false\") {\n      //   alert(result.message);\n      // } else {\n      //   let props = {};\n      //   props.tablename = tablename;\n      //   props.layoutid = viewlayoutid;\n      //   props.recordid = recordData.id;\n      //   // await this.getServerData(props);\n      //   this.props.clickHandler(e, { recordid: recordData.id });\n      // }\n\n      let objectPrimaryKeyValue = {\n        orgname: recordData.orgname,\n        id: recordData.id\n      };\n      const target = {};\n      let recordDataUpdating = Object.assign(target, layoutbuttonresult.recordData);\n      delete recordDataUpdating.orgname;\n      delete recordDataUpdating.id; // console.log(defaultdatafilter);\n      // if (defaultdatafilter && Object.keys(defaultdatafilter).length > 0) {\n      //   for (let i in defaultdatafilter) {\n      //     recordDataUpdating[i] = defaultdatafilter[i];\n      //   }\n      // }\n\n      console.log(recordDataUpdating);\n      let result = await updateRecord({\n        objectName: tablename,\n        objectPrimaryKeyValue: objectPrimaryKeyValue,\n        objectData: recordDataUpdating\n      });\n\n      if (result.isSuccess === \"false\") {\n        alert(result.message);\n      } else {\n        let props = {};\n        props.tablename = tablename;\n        props.layoutid = viewlayoutid;\n        props.recordid = recordData.id;\n        this.props.clickHandler(e, {\n          recordid: recordData.id\n        });\n      }\n    };\n\n    this.deleteRecord = async () => {\n      let {\n        viewlayoutid,\n        editlayoutid,\n        tablename,\n        recordid\n      } = this.props.compprops;\n      let {\n        recordData\n      } = this.state;\n      let localdata = getLocalData(this.props);\n      let result = await deleteRecord({\n        objectName: tablename,\n        objectPrimaryKeyValue: {\n          id: recordData.id,\n          orgname: localdata.orgname\n        }\n      });\n\n      if (result.isSuccess === \"false\") {\n        alert(result.message);\n      } else {\n        window.location.reload();\n      }\n    };\n\n    this.editRecord = async () => {\n      let {\n        recordData\n      } = this.state;\n      let {\n        viewlayoutid,\n        editlayoutid,\n        tablename,\n        recordid\n      } = this.props.compprops;\n      let props = {};\n      props.tablename = tablename;\n      props.layoutid = editlayoutid;\n      props.recordid = recordData.id;\n      await this.getServerData(props);\n    };\n\n    this.createRecord = async (e, props) => {\n      let localdata = getLocalData(this.props);\n      let {\n        viewlayoutid,\n        editlayoutid,\n        tablename,\n        recordid // defaultdatafilter,\n\n      } = this.props.compprops;\n      let {\n        layoutbuttonresult\n      } = props;\n      let {\n        recordData\n      } = this.state; // console.log(recordData);\n      // recordData.orgname = localdata.orgname;\n      // let n = new Date();\n      // recordData.id = idbeginswith + \"-\" + localdata.userid + \"-\" + n.getTime();\n      // if (Object.keys(defaultdatafilter).length > 0) {\n      //   for (let i in defaultdatafilter) {\n      //     recordData[i] = defaultdatafilter[i];\n      //   }\n      // }\n      // alert();\n\n      let result = await createRecord({\n        objectName: tablename,\n        objectData: layoutbuttonresult.recordData\n      });\n\n      if (result.isSuccess === \"false\") {\n        alert(result.message);\n      } else {\n        let props = {};\n        props.tablename = tablename;\n        props.layoutid = viewlayoutid;\n        props.recordid = recordData.id; //  await this.getServerData(props);\n\n        this.props.clickHandler(e, {\n          recordid: recordData.id\n        });\n      }\n    };\n\n    this.cancelEdit = async () => {\n      let {\n        recordData\n      } = this.state;\n      let {\n        viewlayoutid,\n        editlayoutid,\n        tablename,\n        recordid\n      } = this.props.compprops;\n      let props = {};\n      props.tablename = tablename;\n      props.layoutid = viewlayoutid;\n      props.recordid = recordData.id;\n      await this.getServerData(props);\n    };\n\n    this.changeHanlder = (e, props) => {\n      let {\n        inputLabel,\n        inputName,\n        inputType,\n        clientstatename,\n        clientstatetype,\n        inputValue\n      } = props;\n      console.log(inputName);\n      let {\n        recordData\n      } = this.state;\n\n      if (inputName.includes(\".\")) {\n        let fieldnamearray = inputName.split(\".\");\n\n        if (recordData[fieldnamearray[0]]) {\n          recordData[fieldnamearray[0]][fieldnamearray[1]] = inputValue;\n        } else {\n          let fieldvalueobj = {};\n          fieldvalueobj[fieldnamearray[1]] = inputValue;\n          recordData[fieldnamearray[0]] = fieldvalueobj;\n        }\n      } else {\n        recordData[inputName] = inputValue;\n      }\n\n      this.setState({\n        recordData: recordData\n      });\n    };\n\n    this.layoutButtonHandler = async props => {\n      console.log(this.props);\n      console.log(this.props); // let { defaultdatafilter } = this.props.compprops;\n\n      let {\n        buttonProps\n      } = props;\n      let {\n        recordData,\n        layoutrecordData\n      } = this.state;\n      let localdata = getLocalData(this.props);\n      let buttons = layoutrecordData.compprops.buttons;\n      let error = \"\";\n\n      for (let i in buttons) {\n        if (buttons[i].name === buttonProps.name) {\n          console.log(buttons[i]);\n          let validations = buttons[i].action.validations;\n          let datareplaceparams = buttons[i].action.datareplaceparams;\n          let redirection = buttons[i].action.redirection;\n          console.log(datareplaceparams);\n\n          if (datareplaceparams && Object.keys(datareplaceparams).length > 0) {\n            recordData = await dataReplaceHandler({\n              localdata: localdata,\n              recorddata: recordData,\n              datareplaceparams: datareplaceparams,\n              //   defaultdatafilter: defaultdatafilter,\n              compprops: this.props.compprops\n            });\n          }\n\n          if (validations && Object.keys(validations).length > 0) {\n            error = this.validateHandler({\n              recorddata: recordData,\n              validations: validations\n            });\n          }\n        }\n      }\n\n      console.log(recordData);\n      let resultProps = {\n        error: error,\n        recordData: recordData\n      };\n      return resultProps;\n    };\n\n    this.clickHandler = async e => {\n      let {\n        recordData\n      } = this.state;\n      let dataset = e.target.dataset;\n\n      if (dataset.name === \"new-cancel\") {\n        window.location.reload();\n      }\n\n      if (dataset.name === \"new-create\") {\n        let layoutbuttonresult = await this.layoutButtonHandler({\n          buttonProps: {\n            name: \"new-create\"\n          }\n        });\n\n        if (layoutbuttonresult.error === \"\") {\n          this.createRecord(e, {\n            layoutbuttonresult: layoutbuttonresult\n          });\n        }\n      }\n\n      if (dataset.name === \"edit-cancel\") {\n        this.cancelEdit();\n      }\n\n      if (dataset.name === \"edit-save\") {\n        let layoutbuttonresult = await this.layoutButtonHandler({\n          buttonProps: {\n            name: \"edit-save\"\n          }\n        });\n\n        if (layoutbuttonresult.error === \"\") {\n          this.saveRecord(e, {\n            layoutbuttonresult: layoutbuttonresult\n          });\n        }\n      }\n\n      if (dataset.name === \"view-delete\") {\n        this.deleteRecord();\n      }\n\n      if (dataset.name === \"view-edit\") {\n        this.editRecord();\n      }\n\n      if (dataset.type === \"mainpaneltab\") {\n        // let url = new URL(document.location);\n        // let newurl = new URL(\n        //   url.pathname + \"?id=\" + recordData.id + \"&mainpaneltab=\" + dataset.name,\n        //   url.origin\n        // );\n        // window.location.assign(newurl);\n        this.setState({\n          showUI: false\n        }, () => {\n          this.setState({\n            activeTabName: dataset.name,\n            showUI: true\n          });\n        });\n      }\n    };\n\n    this.validateHandler = props => {\n      let error = \"\";\n      let {\n        recorddata,\n        validations\n      } = props;\n      console.log(props);\n      let requiredfields = validations.requiredfields;\n\n      if (Object.keys(requiredfields).length > 0) {\n        for (let i in requiredfields) {\n          if (recorddata[i] == \"\" || recorddata[i] == undefined) {\n            error = error + \"  \" + requiredfields[i] + \", \";\n          }\n        }\n      }\n\n      if (error !== \"\") {\n        alert(error + \"is required\");\n      }\n\n      return error;\n    };\n\n    this.state = {\n      layoutrecordData: {},\n      recordData: {},\n      showUI: false,\n      activeTabName: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      newlayoutid,\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n      action\n    } = this.props.compprops;\n    console.log(editlayoutid);\n    let props = {};\n    props.tablename = tablename;\n\n    if (action === \"view\") {\n      props.layoutid = viewlayoutid;\n      props.recordid = recordid;\n      await this.getServerData(props);\n    }\n\n    if (action === \"new\") {\n      props.layoutid = newlayoutid;\n      props.recordid = \"\";\n      await this.getServerData(props);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    let localdata = getLocalData(this.props);\n    let url = new URL(document.location); // var searchParams = new URLSearchParams(url.search);\n\n    let {\n      action,\n      recordid\n    } = this.props.compprops;\n    let {\n      layoutrecordData,\n      recordData,\n      showUI,\n      activeTabName\n    } = this.state;\n    let highlightpanel, tabs, relatedlist, buttons, mainpanelwidth, relatedlistwidth, mainpanelclass, relatedlistclass, defaultmainpaneltab;\n    console.log(layoutrecordData);\n    console.log(recordData);\n\n    if (Object.keys(layoutrecordData).length > 0) {\n      console.log(layoutrecordData.compprops);\n      console.log(layoutrecordData.compprops.highlightpanel);\n      buttons = layoutrecordData.compprops.buttons;\n      highlightpanel = layoutrecordData.compprops.highlightpanel;\n      tabs = layoutrecordData.compprops.mainpaneltabs;\n      defaultmainpaneltab = layoutrecordData.compprops.defaultmainpaneltab; //  if (searchParams.get(\"mainpaneltab\")) {\n      //    defaultmainpaneltab = searchParams.get(\"mainpaneltab\");\n      //  }\n\n      if (activeTabName != \"\") {\n        defaultmainpaneltab = activeTabName;\n      }\n\n      relatedlist = layoutrecordData.compprops.relatedlist;\n      mainpanelwidth = layoutrecordData.compprops.mainpanelwidth;\n      relatedlistwidth = layoutrecordData.compprops.relatedlistwidth;\n      mainpanelclass = \"org-flexbasis-100p org-mflexbasis-\" + mainpanelwidth + \" \" + \"org-lflexbasis-\" + mainpanelwidth;\n      relatedlistclass = \"org-flexbasis-100p org-mflexbasis-\" + relatedlistwidth + \" \" + \"org-lflexbasis-\" + relatedlistwidth;\n    }\n\n    let mainPanelHtml = [];\n    let introHtml = [];\n    let tabHtml = [];\n    let detailContentHtml = [];\n    let relatedContentHtml = [];\n    let relatedHtml = [];\n    let activetab = defaultmainpaneltab;\n    let highlightpanelColumnHtml = [];\n    let tabheaderHtml = []; // layout buttons\n\n    let buttonsArray = [];\n    let buttonsArraySorted = [];\n\n    if (buttons && Object.keys(buttons).length > 0) {\n      for (let i in buttons) {\n        buttonsArray.push(buttons[i]);\n      }\n\n      buttonsArraySorted = sortArray(buttonsArray, \"order\", \"integer\");\n    }\n\n    let buttonsHtml = [];\n\n    if (buttonsArraySorted.length > 0) {\n      for (let i = 0; i < buttonsArraySorted.length; i++) {\n        buttonsHtml.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-name\": buttonsArraySorted[i].name,\n          onClick: this.clickHandler,\n          children: buttonsArraySorted[i].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this));\n      }\n\n      detailContentHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: buttonsHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 30\n      }, this));\n    } // highlightpanel >>\n\n\n    if (highlightpanel && highlightpanel.fields) {\n      let nooffields = Object.keys(highlightpanel.fields).length;\n      let percentage = 100 / nooffields;\n\n      if (nooffields === 3) {\n        percentage = 33;\n      }\n\n      let percentageClass = \"org-flexbasis-100p org-mflexbasis-\" + percentage + \"p org-lflexbasis-\" + percentage + \"p\";\n      let highlightpanelfieldArray = [];\n      let highlightpanelfieldArraySorted = [];\n\n      if (highlightpanel.fields && Object.keys(highlightpanel.fields).length > 0) {\n        for (let i in highlightpanel.fields) {\n          highlightpanelfieldArray.push(highlightpanel.fields[i]);\n        }\n\n        highlightpanelfieldArraySorted = sortArray(highlightpanelfieldArray, \"order\", \"integer\");\n      }\n\n      for (let i = 0; i < highlightpanelfieldArraySorted.length; i++) {\n        highlightpanelColumnHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: percentageClass,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: highlightpanelfieldArraySorted[i].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: recordData[highlightpanelfieldArraySorted[i].name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this));\n      }\n\n      detailContentHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-fr \",\n        children: highlightpanelColumnHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this));\n    } // highlightpanel <<\n\n\n    console.log(tabs); // tab content >>\n\n    let tabsArray = [];\n    let tabsArraySorted = [];\n\n    if (tabs && Object.keys(tabs).length > 0) {\n      for (let i in tabs) {\n        tabsArray.push(tabs[i]);\n      }\n\n      tabsArraySorted = sortArray(tabsArray, \"order\", \"integer\");\n    }\n\n    if (tabsArraySorted.length > 0) {\n      if (tabsArraySorted.length > 1) {\n        for (let i = 0; i < tabsArraySorted.length; i++) {\n          if (activetab === tabsArraySorted[i].name) {\n            tabheaderHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sp org-lightgreybg\",\n              \"data-name\": tabsArraySorted[i].name,\n              \"data-type\": \"mainpaneltab\",\n              onClick: this.clickHandler,\n              children: tabsArraySorted[i].label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this));\n          } else {\n            tabheaderHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-name\": tabsArraySorted[i].name,\n              \"data-type\": \"mainpaneltab\",\n              className: \"sp\",\n              onClick: this.clickHandler,\n              children: tabsArraySorted[i].label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this));\n          }\n        }\n\n        detailContentHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr \",\n          children: tabheaderHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 32\n        }, this));\n      }\n\n      for (let i = 0; i < tabsArraySorted.length; i++) {\n        if (activetab === tabsArraySorted[i].name) {\n          let tabcontenthtml = [];\n\n          if (tabsArraySorted[i].sections && tabsArraySorted[i].type === \"recorddata\") {\n            for (let j in tabsArraySorted[i].sections) {\n              let sectionHtml = [];\n              let sectionHtml1 = [];\n              let dataprops = [];\n\n              for (let k in tabsArraySorted[i].sections[j].columns) {\n                let defaultvalue = \"\";\n                console.log(recordData);\n\n                if (action == \"view\") {\n                  // if name is object\n                  let fieldname = tabsArraySorted[i].sections[j].columns[k].name;\n\n                  if (fieldname.includes(\".\")) {\n                    let fieldnamearray = fieldname.split(\".\");\n                    defaultvalue = recordData[fieldnamearray[0]] ? recordData[fieldnamearray[0]][fieldnamearray[1]] : \"\";\n                  } else {\n                    defaultvalue = recordData[tabsArraySorted[i].sections[j].columns[k].name];\n                  }\n                } else {\n                  defaultvalue = tabsArraySorted[i].sections[j].columns[k].defaultvalue ? tabsArraySorted[i].sections[j].columns[k].defaultvalue : \"\";\n                }\n\n                dataprops.push({\n                  label: tabsArraySorted[i].sections[j].columns[k].label ? tabsArraySorted[i].sections[j].columns[k].label : \"\",\n                  name: tabsArraySorted[i].sections[j].columns[k].name ? tabsArraySorted[i].sections[j].columns[k].name : \"\",\n                  defaultvalue: defaultvalue,\n                  type: tabsArraySorted[i].sections[j].columns[k].type ? tabsArraySorted[i].sections[j].columns[k].type : \"\",\n                  clientstatename: tabsArraySorted[i].sections[j].columns[k].clientstatename ? tabsArraySorted[i].sections[j].columns[k].clientstatename : \"\",\n                  clientstatetype: tabsArraySorted[i].sections[j].columns[k].clientstatetype ? tabsArraySorted[i].sections[j].columns[k].clientstatetype : \"\",\n                  width: tabsArraySorted[i].sections[j].columns[k].width ? tabsArraySorted[i].sections[j].columns[k].width : \"\",\n                  height: tabsArraySorted[i].sections[j].columns[k].height ? tabsArraySorted[i].sections[j].columns[k].height : \"\",\n                  placeholder: tabsArraySorted[i].sections[j].columns[k].placeholder ? tabsArraySorted[i].sections[j].columns[k].placeholder : \"\",\n                  required: tabsArraySorted[i].sections[j].columns[k].required ? tabsArraySorted[i].sections[j].columns[k].required : \"\"\n                });\n              }\n\n              tabcontenthtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"org-fr\",\n                children: sectionHtml\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 35\n              }, this));\n              tabcontenthtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"org-fr\",\n                children: /*#__PURE__*/_jsxDEV(Htmlform, {\n                  inputChanged: this.changeHanlder,\n                  clkHandler: this.clkHandler,\n                  inputKeyUp: this.inputKeyUp,\n                  dataprops: dataprops,\n                  bgcolor: \"\",\n                  activeTabName: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 17\n              }, this));\n            }\n          }\n\n          if (tabsArraySorted[i].type === \"component\") {\n            let compprops = tabsArraySorted[i].compprops;\n            console.log(compprops); // let compprops2 = {\n            //   orgname: \"preply\",\n            //   userprofileid: \"guest\",\n            //   userid: \"usr-pradeep\",\n            //   tablename: \"event\",\n            //   datadisplaytype: \"\",\n            //   viewname: \"\",\n            //   defaultsortparam: \"evt\",\n            //   hidesidebar: \"true\",\n            //   hidedisplaytypepanel: \"true\",\n            //   enablelocaldbdata: \"true\",\n            //   defaultdatafilter: {\n            //     subject: \"maths\",\n            //     class: \"first\",\n            //   },\n            // };\n            // let compprops3 = {\n            //   orgname: { value: \"\", type: \"localdata\", name: \"orgname\" },\n            //   userprofileid: {\n            //     value: \"\",\n            //     type: \"localdata\",\n            //     name: \"userprofileid\",\n            //   },\n            //   userid: { value: \"\", type: \"localdata\", name: \"userid\" },\n            //   tablename: { value: \"event\", type: \"text\", name: \"\" },\n            //   datadisplaytype: { value: \"\", type: \"text\", name: \"\" },\n            //   viewname: { value: \"\", type: \"text\", name: \"\" },\n            //   defaultsortparam: { value: \"evt\", type: \"text\", name: \"\" },\n            //   hidesidebar: { value: \"true\", type: \"text\", name: \"\" },\n            //   hidedisplaytypepanel: { value: \"true\", type: \"text\", name: \"\" },\n            //   enablelocaldbdata: { value: \"true\", type: \"text\", name: \"\" },\n            //   defaultdatafilter: {\n            //     value: {\n            //       subject: \"maths\",\n            //       class: \"first\",\n            //     },\n            //     type: \"object\",\n            //     name: \"\",\n            //   },\n            // };\n\n            let finalcompprops = getDynamicCompPropsData({\n              compprops: compprops,\n              localdata: localdata,\n              recorddata: recordData\n            });\n            console.log(finalcompprops);\n            /*\n            let compprops =    {\n              orgname: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"orgname\"},\n              userprofileid: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"userprofileid\"},\n              userid: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"userid\"},\n              tablename: { \"value\" : \"event\" , \"type\":\"text\", \"name\":\"\"},\n              datadisplaytype: { \"value\" : \"\" , \"type\":\"text\", \"name\":\"\"},\n              viewname: { \"value\" : \"\" , \"type\":\"text\", \"name\":\"\"},\n              defaultsortparam: { \"value\" : \"evt\" , \"type\":\"text\", \"name\":\"\"},,\n              hidesidebar:{ \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},,\n              hidedisplaytypepanel: { \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},\n              enablelocaldbdata: { \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},\n              defaultdatafilter: { \"value\" : {\n                subject: \"maths\",\n                class: \"first\",\n              } , \"type\":\"object\", \"name\":\"\"} ,\n            };\n             */\n\n            if (tabsArraySorted[i].componentname === \"calender\") {\n              tabcontenthtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"org-lightgreybg\",\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Calender, { ...this.props,\n                  compprops: finalcompprops\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 17\n              }, this));\n            }\n\n            if (tabsArraySorted[i].componentname === \"note\") {\n              tabcontenthtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  overflow: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Note, { ...this.props,\n                  compprops: finalcompprops\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 17\n              }, this));\n            }\n          }\n\n          detailContentHtml.push(tabcontenthtml);\n        }\n      }\n    } // relatedlist >>\n\n\n    let relatedlistHtml = [];\n\n    if (relatedlist) {\n      for (let i in relatedlist) {\n        relatedlistHtml.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Recorddatarelatedlist, { ...this.props,\n            compprops: {\n              metadata: relatedlist[i]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this)\n        }, void 0, false));\n      }\n    } // relatedlist <<\n\n\n    mainPanelHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"org-fr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: mainpanelclass,\n        children: detailContentHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: relatedlistclass,\n        children: relatedlistHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this)); // tabpanel <<\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showUI === true ? mainPanelHtml : \"\"\n    }, void 0, false);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddataeditview2.js"],"names":["React","Component","getRecorddata","createRecord","updateRecord","deleteRecord","sortArray","getLocalData","getDynamicCompPropsData","dataReplaceHandler","Htmlform","Calender","Note","Recorddatarelatedlist","F","constructor","props","getServerData","console","log","layoutid","tablename","recordid","localdata","layoutdataParams","objectName","objectData","keyConditions","field","value","orgname","expression","filterConditions","pageSize","limit","exclusiveStartKey","layoutdataresult","isSuccess","alert","message","layoutrecordDataList","dataprops","Items","setState","showUI","layoutrecordData","recordData","dataParams","dataresult","recordDataList","length","saveRecord","e","viewlayoutid","editlayoutid","compprops","layoutbuttonresult","state","objectPrimaryKeyValue","id","target","recordDataUpdating","Object","assign","result","clickHandler","window","location","reload","editRecord","cancelEdit","changeHanlder","inputLabel","inputName","inputType","clientstatename","clientstatetype","inputValue","includes","fieldnamearray","split","fieldvalueobj","layoutButtonHandler","buttonProps","buttons","error","i","name","validations","action","datareplaceparams","redirection","keys","recorddata","validateHandler","resultProps","dataset","type","activeTabName","requiredfields","undefined","componentDidMount","newlayoutid","render","url","URL","document","highlightpanel","tabs","relatedlist","mainpanelwidth","relatedlistwidth","mainpanelclass","relatedlistclass","defaultmainpaneltab","mainpaneltabs","mainPanelHtml","introHtml","tabHtml","detailContentHtml","relatedContentHtml","relatedHtml","activetab","highlightpanelColumnHtml","tabheaderHtml","buttonsArray","buttonsArraySorted","push","buttonsHtml","label","fields","nooffields","percentage","percentageClass","highlightpanelfieldArray","highlightpanelfieldArraySorted","tabsArray","tabsArraySorted","tabcontenthtml","sections","j","sectionHtml","sectionHtml1","k","columns","defaultvalue","fieldname","width","height","placeholder","required","clkHandler","inputKeyUp","finalcompprops","componentname","overflow","relatedlistHtml","metadata"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  getRecorddata,\n  createRecord,\n  updateRecord,\n  // bulkcreateRecord,\n  deleteRecord,\n} from \"../db/index\";\nimport {\n  sortArray,\n  getLocalData,\n  getDynamicCompPropsData,\n  dataReplaceHandler,\n} from \"../js/index\";\nimport Htmlform from \"./htmlformnew\";\nimport Calender from \"./calender\";\nimport Note from \"./notepadlist\";\n//import { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport Recorddatarelatedlist from \"./recorddatarelatedlist2\";\n/*\n \n\n*/\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layoutrecordData: {},\n      recordData: {},\n      showUI: false,\n      activeTabName: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      newlayoutid,\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n      action,\n    } = this.props.compprops;\n    console.log(editlayoutid);\n    let props = {};\n    props.tablename = tablename;\n\n    if (action === \"view\") {\n      props.layoutid = viewlayoutid;\n      props.recordid = recordid;\n      await this.getServerData(props);\n    }\n    if (action === \"new\") {\n      props.layoutid = newlayoutid;\n      props.recordid = \"\";\n      await this.getServerData(props);\n    }\n  }\n  getServerData = async (props) => {\n    console.log(props);\n    let { layoutid, tablename, recordid } = props;\n    let localdata = getLocalData(this.props);\n    // if (recordid != \"\") {\n    //   localdata.recordid = recordid;\n    // }\n\n    let layoutdataParams = {\n      objectName: \"tablelayout\",\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: localdata.orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: layoutid,\n          expression: \"beginswith\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    console.log(layoutdataParams);\n    let layoutdataresult = await getRecorddata(layoutdataParams);\n    if (layoutdataresult.isSuccess === \"false\") {\n      alert(\"data\" + layoutdataresult.message);\n    } else {\n      let layoutrecordDataList = layoutdataresult.dataprops.Items;\n      console.log(layoutrecordDataList);\n\n      if (recordid === \"\") {\n        this.setState({ showUI: false }, () => {\n          this.setState({\n            layoutrecordData: layoutrecordDataList[0],\n            recordData: {},\n            showUI: true,\n          });\n        });\n      } else {\n        let dataParams = {\n          objectName: tablename,\n          objectData: {},\n          keyConditions: [\n            {\n              field: \"orgname\",\n              value: localdata.orgname,\n              expression: \"=\",\n            },\n            {\n              field: \"id\",\n              value: recordid,\n              expression: \"=\",\n            },\n          ],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\",\n        };\n        console.log(dataParams);\n        let dataresult = await getRecorddata(dataParams);\n        if (dataresult.isSuccess === \"false\") {\n          alert(\"data\" + dataresult.message);\n        } else {\n          let recordDataList = dataresult.dataprops.Items;\n          console.log(recordDataList);\n          if (recordDataList.length > 0) {\n            this.setState({ showUI: false }, () => {\n              this.setState({\n                layoutrecordData: layoutrecordDataList[0],\n                recordData: recordDataList[0],\n                showUI: true,\n              });\n            });\n          }\n        }\n      }\n    }\n  };\n\n  saveRecord = async (e, props) => {\n    let {\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n      //   defaultdatafilter,\n    } = this.props.compprops;\n    let { layoutbuttonresult } = props;\n\n    let { recordData } = this.state;\n    // let result = await updateRecord({\n    //   objectName: tablename,\n    //   objectData: recordData,\n    // });\n    // if (result.isSuccess === \"false\") {\n    //   alert(result.message);\n    // } else {\n    //   let props = {};\n    //   props.tablename = tablename;\n    //   props.layoutid = viewlayoutid;\n    //   props.recordid = recordData.id;\n    //   // await this.getServerData(props);\n    //   this.props.clickHandler(e, { recordid: recordData.id });\n    // }\n\n    let objectPrimaryKeyValue = {\n      orgname: recordData.orgname,\n      id: recordData.id,\n    };\n\n    const target = {};\n\n    let recordDataUpdating = Object.assign(\n      target,\n      layoutbuttonresult.recordData\n    );\n    delete recordDataUpdating.orgname;\n    delete recordDataUpdating.id;\n    // console.log(defaultdatafilter);\n    // if (defaultdatafilter && Object.keys(defaultdatafilter).length > 0) {\n    //   for (let i in defaultdatafilter) {\n    //     recordDataUpdating[i] = defaultdatafilter[i];\n    //   }\n    // }\n    console.log(recordDataUpdating);\n    let result = await updateRecord({\n      objectName: tablename,\n      objectPrimaryKeyValue: objectPrimaryKeyValue,\n      objectData: recordDataUpdating,\n    });\n    if (result.isSuccess === \"false\") {\n      alert(result.message);\n    } else {\n      let props = {};\n      props.tablename = tablename;\n      props.layoutid = viewlayoutid;\n      props.recordid = recordData.id;\n      this.props.clickHandler(e, { recordid: recordData.id });\n    }\n  };\n\n  deleteRecord = async () => {\n    let {\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n    } = this.props.compprops;\n    let { recordData } = this.state;\n    let localdata = getLocalData(this.props);\n\n    let result = await deleteRecord({\n      objectName: tablename,\n      objectPrimaryKeyValue: { id: recordData.id, orgname: localdata.orgname },\n    });\n    if (result.isSuccess === \"false\") {\n      alert(result.message);\n    } else {\n      window.location.reload();\n    }\n  };\n\n  editRecord = async () => {\n    let { recordData } = this.state;\n    let {\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n    } = this.props.compprops;\n    let props = {};\n    props.tablename = tablename;\n    props.layoutid = editlayoutid;\n    props.recordid = recordData.id;\n    await this.getServerData(props);\n  };\n\n  createRecord = async (e, props) => {\n    let localdata = getLocalData(this.props);\n    let {\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n      // defaultdatafilter,\n    } = this.props.compprops;\n    let { layoutbuttonresult } = props;\n\n    let { recordData } = this.state;\n    // console.log(recordData);\n    // recordData.orgname = localdata.orgname;\n    // let n = new Date();\n    // recordData.id = idbeginswith + \"-\" + localdata.userid + \"-\" + n.getTime();\n\n    // if (Object.keys(defaultdatafilter).length > 0) {\n    //   for (let i in defaultdatafilter) {\n    //     recordData[i] = defaultdatafilter[i];\n    //   }\n    // }\n    // alert();\n\n    let result = await createRecord({\n      objectName: tablename,\n      objectData: layoutbuttonresult.recordData,\n    });\n    if (result.isSuccess === \"false\") {\n      alert(result.message);\n    } else {\n      let props = {};\n      props.tablename = tablename;\n      props.layoutid = viewlayoutid;\n      props.recordid = recordData.id;\n      //  await this.getServerData(props);\n      this.props.clickHandler(e, { recordid: recordData.id });\n    }\n  };\n\n  cancelEdit = async () => {\n    let { recordData } = this.state;\n    let {\n      viewlayoutid,\n      editlayoutid,\n      tablename,\n      recordid,\n    } = this.props.compprops;\n    let props = {};\n    props.tablename = tablename;\n    props.layoutid = viewlayoutid;\n    props.recordid = recordData.id;\n    await this.getServerData(props);\n  };\n\n  // changeHanlder = (e) => {\n  //   let dataset = e.target.dataset;\n  //   let { recordData } = this.state;\n  //   recordData[dataset.name] = e.target.value;\n  //   console.log(recordData);\n  //   this.setState({ recordData: recordData });\n  // };\n\n  changeHanlder = (e, props) => {\n    let {\n      inputLabel,\n      inputName,\n      inputType,\n      clientstatename,\n      clientstatetype,\n      inputValue,\n    } = props;\n    console.log(inputName);\n    let { recordData } = this.state;\n    if (inputName.includes(\".\")) {\n      let fieldnamearray = inputName.split(\".\");\n      if (recordData[fieldnamearray[0]]) {\n        recordData[fieldnamearray[0]][fieldnamearray[1]] = inputValue;\n      } else {\n        let fieldvalueobj = {};\n        fieldvalueobj[fieldnamearray[1]] = inputValue;\n        recordData[fieldnamearray[0]] = fieldvalueobj;\n      }\n    } else {\n      recordData[inputName] = inputValue;\n    }\n    this.setState({ recordData: recordData });\n  };\n\n  layoutButtonHandler = async (props) => {\n    console.log(this.props);\n    console.log(this.props);\n    // let { defaultdatafilter } = this.props.compprops;\n    let { buttonProps } = props;\n    let { recordData, layoutrecordData } = this.state;\n    let localdata = getLocalData(this.props);\n    let buttons = layoutrecordData.compprops.buttons;\n    let error = \"\";\n    for (let i in buttons) {\n      if (buttons[i].name === buttonProps.name) {\n        console.log(buttons[i]);\n        let validations = buttons[i].action.validations;\n        let datareplaceparams = buttons[i].action.datareplaceparams;\n        let redirection = buttons[i].action.redirection;\n        console.log(datareplaceparams);\n        if (datareplaceparams && Object.keys(datareplaceparams).length > 0) {\n          recordData = await dataReplaceHandler({\n            localdata: localdata,\n            recorddata: recordData,\n            datareplaceparams: datareplaceparams,\n            //   defaultdatafilter: defaultdatafilter,\n            compprops: this.props.compprops,\n          });\n        }\n\n        if (validations && Object.keys(validations).length > 0) {\n          error = this.validateHandler({\n            recorddata: recordData,\n            validations: validations,\n          });\n        }\n      }\n    }\n    console.log(recordData);\n    let resultProps = { error: error, recordData: recordData };\n    return resultProps;\n  };\n\n  clickHandler = async (e) => {\n    let { recordData } = this.state;\n    let dataset = e.target.dataset;\n    if (dataset.name === \"new-cancel\") {\n      window.location.reload();\n    }\n    if (dataset.name === \"new-create\") {\n      let layoutbuttonresult = await this.layoutButtonHandler({\n        buttonProps: { name: \"new-create\" },\n      });\n      if (layoutbuttonresult.error === \"\") {\n        this.createRecord(e, { layoutbuttonresult: layoutbuttonresult });\n      }\n    }\n\n    if (dataset.name === \"edit-cancel\") {\n      this.cancelEdit();\n    }\n    if (dataset.name === \"edit-save\") {\n      let layoutbuttonresult = await this.layoutButtonHandler({\n        buttonProps: { name: \"edit-save\" },\n      });\n      if (layoutbuttonresult.error === \"\") {\n        this.saveRecord(e, { layoutbuttonresult: layoutbuttonresult });\n      }\n    }\n\n    if (dataset.name === \"view-delete\") {\n      this.deleteRecord();\n    }\n    if (dataset.name === \"view-edit\") {\n      this.editRecord();\n    }\n\n    if (dataset.type === \"mainpaneltab\") {\n      // let url = new URL(document.location);\n      // let newurl = new URL(\n      //   url.pathname + \"?id=\" + recordData.id + \"&mainpaneltab=\" + dataset.name,\n      //   url.origin\n      // );\n      // window.location.assign(newurl);\n\n      this.setState({ showUI: false }, () => {\n        this.setState({\n          activeTabName: dataset.name,\n          showUI: true,\n        });\n      });\n    }\n  };\n\n  // validate = () => {\n  //   let { layoutrecordData, recordData, showUI } = this.state;\n  //   let validations = layoutrecordData.compprops.validations;\n  //   return this.validateHandler({\n  //     recorddata: recordData,\n  //     validations: validations,\n  //   });\n  // };\n\n  validateHandler = (props) => {\n    let error = \"\";\n    let { recorddata, validations } = props;\n    console.log(props);\n    let requiredfields = validations.requiredfields;\n    if (Object.keys(requiredfields).length > 0) {\n      for (let i in requiredfields) {\n        if (recorddata[i] == \"\" || recorddata[i] == undefined) {\n          error = error + \"  \" + requiredfields[i] + \", \";\n        }\n      }\n    }\n    if (error !== \"\") {\n      alert(error + \"is required\");\n    }\n    return error;\n  };\n\n  render() {\n    console.log(this.props);\n\n    let localdata = getLocalData(this.props);\n    let url = new URL(document.location);\n    // var searchParams = new URLSearchParams(url.search);\n    let { action, recordid } = this.props.compprops;\n\n    let { layoutrecordData, recordData, showUI, activeTabName } = this.state;\n    let highlightpanel,\n      tabs,\n      relatedlist,\n      buttons,\n      mainpanelwidth,\n      relatedlistwidth,\n      mainpanelclass,\n      relatedlistclass,\n      defaultmainpaneltab;\n\n    console.log(layoutrecordData);\n    console.log(recordData);\n\n    if (Object.keys(layoutrecordData).length > 0) {\n      console.log(layoutrecordData.compprops);\n      console.log(layoutrecordData.compprops.highlightpanel);\n      buttons = layoutrecordData.compprops.buttons;\n      highlightpanel = layoutrecordData.compprops.highlightpanel;\n      tabs = layoutrecordData.compprops.mainpaneltabs;\n\n      defaultmainpaneltab = layoutrecordData.compprops.defaultmainpaneltab;\n      //  if (searchParams.get(\"mainpaneltab\")) {\n      //    defaultmainpaneltab = searchParams.get(\"mainpaneltab\");\n      //  }\n      if (activeTabName != \"\") {\n        defaultmainpaneltab = activeTabName;\n      }\n      relatedlist = layoutrecordData.compprops.relatedlist;\n      mainpanelwidth = layoutrecordData.compprops.mainpanelwidth;\n      relatedlistwidth = layoutrecordData.compprops.relatedlistwidth;\n\n      mainpanelclass =\n        \"org-flexbasis-100p org-mflexbasis-\" +\n        mainpanelwidth +\n        \" \" +\n        \"org-lflexbasis-\" +\n        mainpanelwidth;\n      relatedlistclass =\n        \"org-flexbasis-100p org-mflexbasis-\" +\n        relatedlistwidth +\n        \" \" +\n        \"org-lflexbasis-\" +\n        relatedlistwidth;\n    }\n\n    let mainPanelHtml = [];\n    let introHtml = [];\n    let tabHtml = [];\n    let detailContentHtml = [];\n    let relatedContentHtml = [];\n    let relatedHtml = [];\n    let activetab = defaultmainpaneltab;\n\n    let highlightpanelColumnHtml = [];\n    let tabheaderHtml = [];\n\n    // layout buttons\n    let buttonsArray = [];\n    let buttonsArraySorted = [];\n    if (buttons && Object.keys(buttons).length > 0) {\n      for (let i in buttons) {\n        buttonsArray.push(buttons[i]);\n      }\n      buttonsArraySorted = sortArray(buttonsArray, \"order\", \"integer\");\n    }\n\n    let buttonsHtml = [];\n    if (buttonsArraySorted.length > 0) {\n      for (let i = 0; i < buttonsArraySorted.length; i++) {\n        buttonsHtml.push(\n          <button\n            data-name={buttonsArraySorted[i].name}\n            onClick={this.clickHandler}\n          >\n            {buttonsArraySorted[i].label}\n          </button>\n        );\n      }\n      detailContentHtml.push(<div className=\" \">{buttonsHtml}</div>);\n    }\n\n    // highlightpanel >>\n    if (highlightpanel && highlightpanel.fields) {\n      let nooffields = Object.keys(highlightpanel.fields).length;\n      let percentage = 100 / nooffields;\n      if (nooffields === 3) {\n        percentage = 33;\n      }\n      let percentageClass =\n        \"org-flexbasis-100p org-mflexbasis-\" +\n        percentage +\n        \"p org-lflexbasis-\" +\n        percentage +\n        \"p\";\n\n      let highlightpanelfieldArray = [];\n      let highlightpanelfieldArraySorted = [];\n      if (\n        highlightpanel.fields &&\n        Object.keys(highlightpanel.fields).length > 0\n      ) {\n        for (let i in highlightpanel.fields) {\n          highlightpanelfieldArray.push(highlightpanel.fields[i]);\n        }\n        highlightpanelfieldArraySorted = sortArray(\n          highlightpanelfieldArray,\n          \"order\",\n          \"integer\"\n        );\n      }\n\n      for (let i = 0; i < highlightpanelfieldArraySorted.length; i++) {\n        highlightpanelColumnHtml.push(\n          <div className={percentageClass}>\n            <div>{highlightpanelfieldArraySorted[i].label}</div>\n            <div>{recordData[highlightpanelfieldArraySorted[i].name]}</div>\n          </div>\n        );\n      }\n      detailContentHtml.push(\n        <div className=\"org-fr \">{highlightpanelColumnHtml}</div>\n      );\n    }\n\n    // highlightpanel <<\n    console.log(tabs);\n    // tab content >>\n    let tabsArray = [];\n    let tabsArraySorted = [];\n    if (tabs && Object.keys(tabs).length > 0) {\n      for (let i in tabs) {\n        tabsArray.push(tabs[i]);\n      }\n      tabsArraySorted = sortArray(tabsArray, \"order\", \"integer\");\n    }\n\n    if (tabsArraySorted.length > 0) {\n      if (tabsArraySorted.length > 1) {\n        for (let i = 0; i < tabsArraySorted.length; i++) {\n          if (activetab === tabsArraySorted[i].name) {\n            tabheaderHtml.push(\n              <div\n                className=\"sp org-lightgreybg\"\n                data-name={tabsArraySorted[i].name}\n                data-type=\"mainpaneltab\"\n                onClick={this.clickHandler}\n              >\n                {tabsArraySorted[i].label}\n              </div>\n            );\n          } else {\n            tabheaderHtml.push(\n              <div\n                data-name={tabsArraySorted[i].name}\n                data-type=\"mainpaneltab\"\n                className=\"sp\"\n                onClick={this.clickHandler}\n              >\n                {tabsArraySorted[i].label}\n              </div>\n            );\n          }\n        }\n\n        detailContentHtml.push(<div className=\"org-fr \">{tabheaderHtml}</div>);\n      }\n      for (let i = 0; i < tabsArraySorted.length; i++) {\n        if (activetab === tabsArraySorted[i].name) {\n          let tabcontenthtml = [];\n\n          if (\n            tabsArraySorted[i].sections &&\n            tabsArraySorted[i].type === \"recorddata\"\n          ) {\n            for (let j in tabsArraySorted[i].sections) {\n              let sectionHtml = [];\n              let sectionHtml1 = [];\n              let dataprops = [];\n\n              for (let k in tabsArraySorted[i].sections[j].columns) {\n                let defaultvalue = \"\";\n                console.log(recordData);\n                if (action == \"view\") {\n                  // if name is object\n                  let fieldname =\n                    tabsArraySorted[i].sections[j].columns[k].name;\n                  if (fieldname.includes(\".\")) {\n                    let fieldnamearray = fieldname.split(\".\");\n                    defaultvalue = recordData[fieldnamearray[0]]\n                      ? recordData[fieldnamearray[0]][fieldnamearray[1]]\n                      : \"\";\n                  } else {\n                    defaultvalue =\n                      recordData[\n                        tabsArraySorted[i].sections[j].columns[k].name\n                      ];\n                  }\n                } else {\n                  defaultvalue = tabsArraySorted[i].sections[j].columns[k]\n                    .defaultvalue\n                    ? tabsArraySorted[i].sections[j].columns[k].defaultvalue\n                    : \"\";\n                }\n\n                dataprops.push({\n                  label: tabsArraySorted[i].sections[j].columns[k].label\n                    ? tabsArraySorted[i].sections[j].columns[k].label\n                    : \"\",\n                  name: tabsArraySorted[i].sections[j].columns[k].name\n                    ? tabsArraySorted[i].sections[j].columns[k].name\n                    : \"\",\n                  defaultvalue: defaultvalue,\n\n                  type: tabsArraySorted[i].sections[j].columns[k].type\n                    ? tabsArraySorted[i].sections[j].columns[k].type\n                    : \"\",\n                  clientstatename: tabsArraySorted[i].sections[j].columns[k]\n                    .clientstatename\n                    ? tabsArraySorted[i].sections[j].columns[k].clientstatename\n                    : \"\",\n                  clientstatetype: tabsArraySorted[i].sections[j].columns[k]\n                    .clientstatetype\n                    ? tabsArraySorted[i].sections[j].columns[k].clientstatetype\n                    : \"\",\n                  width: tabsArraySorted[i].sections[j].columns[k].width\n                    ? tabsArraySorted[i].sections[j].columns[k].width\n                    : \"\",\n                  height: tabsArraySorted[i].sections[j].columns[k].height\n                    ? tabsArraySorted[i].sections[j].columns[k].height\n                    : \"\",\n                  placeholder: tabsArraySorted[i].sections[j].columns[k]\n                    .placeholder\n                    ? tabsArraySorted[i].sections[j].columns[k].placeholder\n                    : \"\",\n                  required: tabsArraySorted[i].sections[j].columns[k].required\n                    ? tabsArraySorted[i].sections[j].columns[k].required\n                    : \"\",\n                });\n              }\n\n              tabcontenthtml.push(<div className=\"org-fr\">{sectionHtml}</div>);\n              tabcontenthtml.push(\n                <div className=\"org-fr\">\n                  <Htmlform\n                    inputChanged={this.changeHanlder}\n                    clkHandler={this.clkHandler}\n                    inputKeyUp={this.inputKeyUp}\n                    dataprops={dataprops}\n                    bgcolor=\"\"\n                    activeTabName=\"1\"\n                  />\n                </div>\n              );\n            }\n          }\n          if (tabsArraySorted[i].type === \"component\") {\n            let compprops = tabsArraySorted[i].compprops;\n            console.log(compprops);\n            // let compprops2 = {\n            //   orgname: \"preply\",\n            //   userprofileid: \"guest\",\n            //   userid: \"usr-pradeep\",\n            //   tablename: \"event\",\n            //   datadisplaytype: \"\",\n            //   viewname: \"\",\n            //   defaultsortparam: \"evt\",\n            //   hidesidebar: \"true\",\n            //   hidedisplaytypepanel: \"true\",\n            //   enablelocaldbdata: \"true\",\n            //   defaultdatafilter: {\n            //     subject: \"maths\",\n            //     class: \"first\",\n            //   },\n            // };\n            // let compprops3 = {\n            //   orgname: { value: \"\", type: \"localdata\", name: \"orgname\" },\n            //   userprofileid: {\n            //     value: \"\",\n            //     type: \"localdata\",\n            //     name: \"userprofileid\",\n            //   },\n            //   userid: { value: \"\", type: \"localdata\", name: \"userid\" },\n            //   tablename: { value: \"event\", type: \"text\", name: \"\" },\n            //   datadisplaytype: { value: \"\", type: \"text\", name: \"\" },\n            //   viewname: { value: \"\", type: \"text\", name: \"\" },\n            //   defaultsortparam: { value: \"evt\", type: \"text\", name: \"\" },\n            //   hidesidebar: { value: \"true\", type: \"text\", name: \"\" },\n            //   hidedisplaytypepanel: { value: \"true\", type: \"text\", name: \"\" },\n            //   enablelocaldbdata: { value: \"true\", type: \"text\", name: \"\" },\n            //   defaultdatafilter: {\n            //     value: {\n            //       subject: \"maths\",\n            //       class: \"first\",\n            //     },\n            //     type: \"object\",\n            //     name: \"\",\n            //   },\n            // };\n\n            let finalcompprops = getDynamicCompPropsData({\n              compprops: compprops,\n              localdata: localdata,\n              recorddata: recordData,\n            });\n            console.log(finalcompprops);\n            /*\n            let compprops =    {\n              orgname: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"orgname\"},\n              userprofileid: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"userprofileid\"},\n              userid: { \"value\" : \"\" , \"type\":\"localdata\", \"name\":\"userid\"},\n              tablename: { \"value\" : \"event\" , \"type\":\"text\", \"name\":\"\"},\n              datadisplaytype: { \"value\" : \"\" , \"type\":\"text\", \"name\":\"\"},\n              viewname: { \"value\" : \"\" , \"type\":\"text\", \"name\":\"\"},\n              defaultsortparam: { \"value\" : \"evt\" , \"type\":\"text\", \"name\":\"\"},,\n              hidesidebar:{ \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},,\n              hidedisplaytypepanel: { \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},\n              enablelocaldbdata: { \"value\" : \"true\" , \"type\":\"text\", \"name\":\"\"},\n              defaultdatafilter: { \"value\" : {\n                subject: \"maths\",\n                class: \"first\",\n              } , \"type\":\"object\", \"name\":\"\"} ,\n            };\n\n            */\n\n            if (tabsArraySorted[i].componentname === \"calender\") {\n              tabcontenthtml.push(\n                <div className=\"org-lightgreybg\" style={{ width: \"100%\" }}>\n                  <Calender {...this.props} compprops={finalcompprops} />\n                </div>\n              );\n            }\n\n            if (tabsArraySorted[i].componentname === \"note\") {\n              tabcontenthtml.push(\n                <div style={{ width: \"100%\", overflow: \"auto\" }}>\n                  <Note {...this.props} compprops={finalcompprops} />\n                </div>\n              );\n            }\n          }\n          detailContentHtml.push(tabcontenthtml);\n        }\n      }\n    }\n    // relatedlist >>\n    let relatedlistHtml = [];\n    if (relatedlist) {\n      for (let i in relatedlist) {\n        relatedlistHtml.push(\n          <>\n            <Recorddatarelatedlist\n              {...this.props}\n              compprops={{ metadata: relatedlist[i] }}\n            />\n          </>\n        );\n      }\n    }\n    // relatedlist <<\n\n    mainPanelHtml.push(\n      <div className=\"org-fr\">\n        <div className={mainpanelclass}>{detailContentHtml}</div>\n        <div className={relatedlistclass}>{relatedlistHtml}</div>\n      </div>\n    );\n    // tabpanel <<\n\n    return <>{showUI === true ? mainPanelHtml : \"\"}</>;\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}