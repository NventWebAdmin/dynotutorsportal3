{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport { getImagefromData, getVideofromData, getPDFfromData } from \"../js/getMultiMediafromData\";\nlet createAPIUrl = \"https://1e4loh865h.execute-api.us-east-2.amazonaws.com/DEV\";\nvar albumBucketName = \"imageuploadpr\";\nvar bucketRegion = \"us-east-2\";\nvar IdentityPoolId = \"us-east-2:2f0b38a1-03d4-4622-aa8a-7465bd2fea18\";\nwindow.AWS.config.update({\n  region: bucketRegion,\n  credentials: new window.AWS.CognitoIdentityCredentials({\n    IdentityPoolId: IdentityPoolId\n  })\n});\nvar s3 = new window.AWS.S3({\n  apiVersion: \"2006-03-01\",\n  params: {\n    Bucket: albumBucketName\n  }\n});\n/*\n// load image\n getImageRecordStorage({\n      folderUrl: \"student\",\n      fileName: \"sri\",\n      fileEvent: \"\",\n      callback: (result) => {\n        console.log(result);\n        if (result.isSuccess == \"true\") {\n          let imageTest = document.getElementById(\"inputfileitemimg\");\n          imageTest.src = result.dataprops.data;\n        } else {\n          this.props.reduxprops.setnotificationCompdata({\n            showNotification: \"true\",\n            notificationMessages: [\n              {\n                name: \"message1\",\n                message: result.message,\n                type: \"error\",\n              },\n            ],\n          });\n        }\n      },\n    });\n\n   \n    // uploadimage\n    let result = await createImageRecordStorages({\n      folderUrl: \"student\",\n      fileName: \"sri\",\n      fileEvent: e,\n      callback: (result) => {\n        console.log(result);\n        if (result.isSuccess == \"true\") {\n          let imageTest = document.getElementById(\"inputfileitemimg\");\n          imageTest.src = result.dataprops.Location;\n        } else {\n          this.props.reduxprops.setnotificationCompdata({\n            showNotification: \"true\",\n            notificationMessages: [\n              {\n                name: \"message1\",\n                message: result.message,\n                type: \"error\",\n              },\n            ],\n          });\n        }\n      },\n    });\n\n*/\n\nfunction getHtml(template) {\n  return template.join(\"\\n\");\n}\n\nexport let getRecordsAWS = async dataprops => {\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let folderUrl = dataprops.folderUrl;\n  let recArray = [\"test\", \"test2\"];\n  let prefix = folderUrl; // prefix = \"gouthama/student/ST-PREK-jovi\";\n\n  s3.listObjects({\n    Delimiter: \"\",\n    Prefix: prefix\n  }, function (err, data) {\n    if (err) {\n      console.log(err);\n      result = {\n        isSuccess: \"true\",\n        message: \"error retriving file from storage\",\n        dataprops: {}\n      };\n      dataprops.callback(result);\n      return alert(\"There was an error listing your albums: \" + err.message);\n    } else {\n      console.log(data);\n      console.log(JSON.stringify(data));\n      let fileNames = [];\n      var albums = data.Contents.map(function (content) {\n        console.log(content.Key.replace(data.Prefix + \"/\", \"\"));\n        let filname = content.Key.replace(data.Prefix + \"/\", \"\");\n        let timenumber = content.LastModified.getTime();\n        fileNames.push({\n          name: filname,\n          label: filname,\n          lastmodified: content.LastModified,\n          timenumber: timenumber\n        }); // var prefix = content.Key;\n        // var folderUrl = decodeURIComponent(prefix.replace(\"/\", \"\"));\n        // console.log(folderUrl);\n        // return getHtml([\n        //   \"<li>\",\n        //   \"<span onclick=\\\"deleteAlbum('\" + folderUrl + \"')\\\">X</span>\",\n        //   \"<span onclick=\\\"viewAlbum('\" + folderUrl + \"')\\\">\",\n        //   folderUrl,\n        //   \"</span>\",\n        //   \"</li>\",\n        // ]);\n      });\n      result = {\n        isSuccess: \"true\",\n        message: \" retrieved file names from storage\",\n        dataprops: {\n          fileNames: fileNames\n        }\n      };\n      dataprops.callback(result); // var message = albums.length\n      //   ? getHtml([\n      //       \"<p>Click on an album name to view it.</p>\",\n      //       \"<p>Click on the X to delete the album.</p>\",\n      //     ])\n      //   : \"<p>You do not have any albums. Please Create album.\";\n      // var htmlTemplate = [\n      //   \"<h2>Albums</h2>\",\n      //   message,\n      //   \"<ul>\",\n      //   getHtml(albums),\n      //   \"</ul>\",\n      //   \"<button onclick=\\\"createAlbum(prompt('Enter Album Name:'))\\\">\",\n      //   \"Create New Album\",\n      //   \"</button>\",\n      // ];\n      // document.getElementById(\"appss\").innerHTML = getHtml(htmlTemplate);\n    }\n  });\n  return recArray;\n};\n\nfunction encode(data) {\n  let buf = Buffer.from(data);\n  console.log(buf);\n  let base64 = buf.toString(\"base64\");\n  return base64;\n}\n\nexport async function getRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName;\n  let pdfpageNumber = dataprops.pdfpageNumber;\n  let keyParam = folderUrl + \"/\" + fileName;\n  var params = {\n    Bucket: albumBucketName,\n    Key: keyParam\n  };\n  s3.getObject(params, function (err, data) {\n    if (err) console.log(err, err.stack); // an error occurred\n    else {\n        /////////\n        // The Base64 string of a simple PDF file\n        var b64 = \"\";\n        b64 = encode(data.Body);\n        let datacontentType = data.ContentType; // Decode Base64 to binary and show some information about the PDF file (note that I skipped all checks)\n\n        var bin = atob(b64);\n        console.log(data);\n        console.log(data.Body);\n        console.log(encode(data.Body));\n        console.log(bin);\n        console.log(\"File Size:\", Math.round(bin.length / 1024), \"KB\"); // Embed the PDF into the HTML page and show it to the user\n        ////////////\n\n        if (datacontentType.toLowerCase().includes(\"pdf\")) {\n          result = {\n            isSuccess: \"true\",\n            message: \"photo retrieved\",\n            dataprops: {\n              imgtag: \"\",\n              pdftag: getPDFfromData(data.Body, dataprops),\n              sourcetype: \"PDF\"\n            }\n          };\n        } else if (datacontentType.toLowerCase().includes(\"jpg\") || datacontentType.toLowerCase().includes(\"jpeg\") || datacontentType.toLowerCase().includes(\"png\")) {\n          result = {\n            isSuccess: \"true\",\n            message: \"photo retrieved\",\n            dataprops: {\n              imgtag: \"\",\n              imgsrc: getImagefromData(data.Body, dataprops),\n              pdftag: \"\",\n              sourcetype: \"IMG\"\n            }\n          };\n        } else if (datacontentType.toLowerCase().includes(\"webm\") || datacontentType.toLowerCase().includes(\"flv\") || datacontentType.toLowerCase().includes(\"mpg\") || datacontentType.toLowerCase().includes(\"mpeg\") || datacontentType.toLowerCase().includes(\"3gp\") || datacontentType.toLowerCase().includes(\"flv\") || datacontentType.toLowerCase().includes(\"mp4\")) {\n          result = {\n            isSuccess: \"true\",\n            message: \"photo retrieved\",\n            dataprops: {\n              imgtag: \"\",\n              imgsrc: \"\",\n              vidsrc: getVideofromData(data.Body, dataprops),\n              pdftag: \"\",\n              sourcetype: \"VID\"\n            }\n          };\n        } else {\n          result = {\n            isSuccess: \"true\",\n            message: \"photo retrieved\",\n            dataprops: {\n              imgtag: \"\",\n              imgsrc: getImagefromData(data.Body, dataprops),\n              pdftag: \"\",\n              sourcetype: \"IMG\"\n            }\n          };\n        }\n\n        dataprops.callback(result);\n      } // successful response\n\n    /*\n     data = {\n      AcceptRanges: \"bytes\", \n      ContentLength: 3191, \n      ContentType: \"image/jpeg\", \n      ETag: \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\", \n      LastModified: <Date Representation>, \n      Metadata: {\n      }, \n      TagCount: 2, \n      VersionId: \"null\"\n     }\n     */\n  });\n  return result;\n}\n\nfunction b64toBlob(b64Data, contentType, sliceSize) {\n  contentType = contentType || \"\";\n  sliceSize = sliceSize || 512;\n  var byteCharacters = atob(b64Data);\n  var byteArrays = [];\n\n  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    var slice = byteCharacters.slice(offset, offset + sliceSize);\n    var byteNumbers = new Array(slice.length);\n\n    for (var i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    var byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  var blob = new Blob(byteArrays, {\n    type: contentType\n  });\n  return blob;\n}\n\nexport async function createRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName;\n  let fileEvent = dataprops.fileEvent;\n  var files, file, fileSuffix;\n  fileSuffix = \"\";\n\n  if (fileEvent != \"\") {\n    files = fileEvent.target.files;\n\n    if (!files || !files.length) {\n      return alert(\"Please choose a file to upload first.\");\n    }\n\n    file = files[0];\n  } else {\n    //file = dataprops.fileSrc.file;\n    let dataUrl = document.getElementById(dataprops.filehtmlId).src.split(\",\");\n    let base64 = dataUrl[1];\n    let mime = dataUrl[0].match(/:(.*?);/)[1];\n    let bin = atob(base64);\n    let length = bin.length; // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n    // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n    let buf = new ArrayBuffer(length);\n    let arr = new Uint8Array(buf);\n    bin.split(\"\").forEach((e, i) => arr[i] = e.charCodeAt(0));\n    console.log(mime);\n\n    if (mime.toLowerCase().includes(\"jpg\")) {\n      fileSuffix = \"jpg\";\n    } else if (mime.toLowerCase().includes(\"jpeg\")) {\n      fileSuffix = \"jpeg\";\n    } else if (mime.toLowerCase().includes(\"png\")) {\n      fileSuffix = \"png\";\n    } else {\n      fileSuffix = \"jpeg\";\n    }\n\n    let f = new File([buf], \"filename\", {\n      type: mime\n    }); // note: [buf]\n\n    let blobUrl = URL.createObjectURL(f);\n    file = f; // let link = document.createElement(\"a\");\n    // link.href = blobUrl;\n    // link.download = \"filename\";\n    // link.innerHTML = \"Download file.\";\n    // document.getElementById(\"url1\").appendChild(link);\n  }\n\n  console.log(file);\n  var albumPhotosKey = folderUrl + \"/\";\n  var photoKey = albumPhotosKey + fileName + \".\" + fileSuffix; //  photoKey = \"/a/b/c\";\n\n  var upload = new window.AWS.S3.ManagedUpload({\n    params: {\n      Bucket: albumBucketName,\n      Key: photoKey,\n      Body: file,\n      ACL: \"public-read\"\n    }\n  });\n  var promise = upload.promise();\n  promise.then(function (data) {\n    console.log(data);\n    result = {\n      isSuccess: \"true\",\n      message: \"Successfully uploaded photo.\",\n      dataprops: data\n    };\n    dataprops.callback(result); //     viewAlbum(folderUrl);\n  }, function (err) {\n    result = {\n      isSuccess: \"false\",\n      message: \"There was an error uploading\" + err.message,\n      dataprops: {}\n    };\n    dataprops.callback(result); // return alert(\"There was an error uploading your photo: \", err.message);\n  });\n  return result;\n}\nexport async function updateRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/update\";\n  console.log(endurl);\n  let fieldProps = dataprops.objectData;\n  let objectData = dataprops.objectData;\n  let UpdateExpression = \"set \";\n  let ExpressionAttributeNames = {};\n  let ExpressionAttributeValues = {};\n  let index = 0;\n  let lastIndex = Object.keys(fieldProps).length - 1;\n\n  for (let i in fieldProps) {\n    console.log();\n    let keyindex = \"#a\" + index;\n    ExpressionAttributeNames[keyindex] = i;\n    let valueindex = \":x\" + index;\n    ExpressionAttributeValues[valueindex] = fieldProps[i];\n\n    if (index < lastIndex) {\n      UpdateExpression = UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" , \";\n    } else {\n      UpdateExpression = UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" \";\n    }\n\n    index = index + 1;\n  }\n\n  console.log(ExpressionAttributeValues);\n  objectData = {\n    Key: dataprops.objectPrimaryKeyValue,\n    UpdateExpression: UpdateExpression,\n    ExpressionAttributeNames: ExpressionAttributeNames,\n    ExpressionAttributeValues: ExpressionAttributeValues\n  };\n  let axiosresult = await axios.post(endurl, objectData, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response);\n    result = {\n      isSuccess: \"true\",\n      message: \"user loggedin\",\n      dataprops: response.data\n    };\n    return result;\n  }).catch(error => {\n    console.log(error.response);\n    let errormessage = \"\";\n\n    if (error.response) {\n      errormessage = error.response.data.message;\n    } else {\n      errormessage = JSON.stringify(error);\n    }\n\n    result = {\n      isSuccess: \"false\",\n      message: errormessage,\n      dataprops: {}\n    };\n    return result;\n  });\n  result = axiosresult;\n  console.log(result);\n  return result;\n}\nexport async function deleteRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/delete\";\n  console.log(endurl);\n  let objectData = {\n    Key: dataprops.objectPrimaryKeyValue\n  };\n  let axiosresult = await axios.post(endurl, objectData, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response);\n    result = {\n      isSuccess: \"true\",\n      message: \"user loggedin\",\n      dataprops: response.data\n    };\n    return result;\n  }).catch(error => {\n    console.log(error.response);\n    let errormessage = \"\";\n\n    if (error.response) {\n      errormessage = error.response.data.message;\n    } else {\n      errormessage = JSON.stringify(error);\n    }\n\n    result = {\n      isSuccess: \"false\",\n      message: errormessage,\n      dataprops: {}\n    };\n    return result;\n  });\n  result = axiosresult;\n  console.log(result);\n  return result;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/videostorage/aws.js"],"names":["React","axios","getImagefromData","getVideofromData","getPDFfromData","createAPIUrl","albumBucketName","bucketRegion","IdentityPoolId","window","AWS","config","update","region","credentials","CognitoIdentityCredentials","s3","S3","apiVersion","params","Bucket","getHtml","template","join","getRecordsAWS","dataprops","result","isSuccess","message","folderUrl","recArray","prefix","listObjects","Delimiter","Prefix","err","data","console","log","callback","alert","JSON","stringify","fileNames","albums","Contents","map","content","Key","replace","filname","timenumber","LastModified","getTime","push","name","label","lastmodified","encode","buf","Buffer","from","base64","toString","getRecordAWS","fileName","pdfpageNumber","keyParam","getObject","stack","b64","Body","datacontentType","ContentType","bin","atob","Math","round","length","toLowerCase","includes","imgtag","pdftag","sourcetype","imgsrc","vidsrc","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","createRecordAWS","fileEvent","files","file","fileSuffix","target","dataUrl","document","getElementById","filehtmlId","src","split","mime","match","ArrayBuffer","arr","forEach","e","f","File","blobUrl","URL","createObjectURL","albumPhotosKey","photoKey","upload","ManagedUpload","ACL","promise","then","updateRecordAWS","endurl","objectName","fieldProps","objectData","UpdateExpression","ExpressionAttributeNames","ExpressionAttributeValues","index","lastIndex","Object","keys","keyindex","valueindex","objectPrimaryKeyValue","axiosresult","post","headers","response","catch","error","errormessage","deleteRecordAWS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {\n  getImagefromData,\n  getVideofromData,\n  getPDFfromData,\n} from \"../js/getMultiMediafromData\";\n\nlet createAPIUrl = \"https://1e4loh865h.execute-api.us-east-2.amazonaws.com/DEV\";\n\nvar albumBucketName = \"imageuploadpr\";\nvar bucketRegion = \"us-east-2\";\nvar IdentityPoolId = \"us-east-2:2f0b38a1-03d4-4622-aa8a-7465bd2fea18\";\n\nwindow.AWS.config.update({\n  region: bucketRegion,\n  credentials: new window.AWS.CognitoIdentityCredentials({\n    IdentityPoolId: IdentityPoolId,\n  }),\n});\n\nvar s3 = new window.AWS.S3({\n  apiVersion: \"2006-03-01\",\n  params: { Bucket: albumBucketName },\n});\n\n/*\n// load image\n getImageRecordStorage({\n      folderUrl: \"student\",\n      fileName: \"sri\",\n      fileEvent: \"\",\n      callback: (result) => {\n        console.log(result);\n        if (result.isSuccess == \"true\") {\n          let imageTest = document.getElementById(\"inputfileitemimg\");\n          imageTest.src = result.dataprops.data;\n        } else {\n          this.props.reduxprops.setnotificationCompdata({\n            showNotification: \"true\",\n            notificationMessages: [\n              {\n                name: \"message1\",\n                message: result.message,\n                type: \"error\",\n              },\n            ],\n          });\n        }\n      },\n    });\n\n   \n    // uploadimage\n    let result = await createImageRecordStorages({\n      folderUrl: \"student\",\n      fileName: \"sri\",\n      fileEvent: e,\n      callback: (result) => {\n        console.log(result);\n        if (result.isSuccess == \"true\") {\n          let imageTest = document.getElementById(\"inputfileitemimg\");\n          imageTest.src = result.dataprops.Location;\n        } else {\n          this.props.reduxprops.setnotificationCompdata({\n            showNotification: \"true\",\n            notificationMessages: [\n              {\n                name: \"message1\",\n                message: result.message,\n                type: \"error\",\n              },\n            ],\n          });\n        }\n      },\n    });\n\n*/\n\nfunction getHtml(template) {\n  return template.join(\"\\n\");\n}\n\nexport let getRecordsAWS = async (dataprops) => {\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let folderUrl = dataprops.folderUrl;\n  let recArray = [\"test\", \"test2\"];\n  let prefix = folderUrl;\n  // prefix = \"gouthama/student/ST-PREK-jovi\";\n  s3.listObjects({ Delimiter: \"\", Prefix: prefix }, function (err, data) {\n    if (err) {\n      console.log(err);\n      result = {\n        isSuccess: \"true\",\n        message: \"error retriving file from storage\",\n        dataprops: {},\n      };\n      dataprops.callback(result);\n      return alert(\"There was an error listing your albums: \" + err.message);\n    } else {\n      console.log(data);\n      console.log(JSON.stringify(data));\n      let fileNames = [];\n      var albums = data.Contents.map(function (content) {\n        console.log(content.Key.replace(data.Prefix + \"/\", \"\"));\n        let filname = content.Key.replace(data.Prefix + \"/\", \"\");\n        let timenumber = content.LastModified.getTime();\n        fileNames.push({\n          name: filname,\n          label: filname,\n          lastmodified: content.LastModified,\n          timenumber: timenumber,\n        });\n        // var prefix = content.Key;\n        // var folderUrl = decodeURIComponent(prefix.replace(\"/\", \"\"));\n        // console.log(folderUrl);\n        // return getHtml([\n        //   \"<li>\",\n        //   \"<span onclick=\\\"deleteAlbum('\" + folderUrl + \"')\\\">X</span>\",\n        //   \"<span onclick=\\\"viewAlbum('\" + folderUrl + \"')\\\">\",\n        //   folderUrl,\n        //   \"</span>\",\n        //   \"</li>\",\n        // ]);\n      });\n      result = {\n        isSuccess: \"true\",\n        message: \" retrieved file names from storage\",\n        dataprops: {\n          fileNames: fileNames,\n        },\n      };\n      dataprops.callback(result);\n      // var message = albums.length\n      //   ? getHtml([\n      //       \"<p>Click on an album name to view it.</p>\",\n      //       \"<p>Click on the X to delete the album.</p>\",\n      //     ])\n      //   : \"<p>You do not have any albums. Please Create album.\";\n      // var htmlTemplate = [\n      //   \"<h2>Albums</h2>\",\n      //   message,\n      //   \"<ul>\",\n      //   getHtml(albums),\n      //   \"</ul>\",\n      //   \"<button onclick=\\\"createAlbum(prompt('Enter Album Name:'))\\\">\",\n      //   \"Create New Album\",\n      //   \"</button>\",\n      // ];\n      // document.getElementById(\"appss\").innerHTML = getHtml(htmlTemplate);\n    }\n  });\n\n  return recArray;\n};\n\nfunction encode(data) {\n  let buf = Buffer.from(data);\n  console.log(buf);\n  let base64 = buf.toString(\"base64\");\n  return base64;\n}\n\nexport async function getRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName;\n  let pdfpageNumber = dataprops.pdfpageNumber;\n  let keyParam = folderUrl + \"/\" + fileName;\n  var params = {\n    Bucket: albumBucketName,\n    Key: keyParam,\n  };\n  s3.getObject(params, function (err, data) {\n    if (err) console.log(err, err.stack);\n    // an error occurred\n    else {\n      /////////\n      // The Base64 string of a simple PDF file\n      var b64 = \"\";\n\n      b64 = encode(data.Body);\n      let datacontentType = data.ContentType;\n      // Decode Base64 to binary and show some information about the PDF file (note that I skipped all checks)\n      var bin = atob(b64);\n      console.log(data);\n      console.log(data.Body);\n      console.log(encode(data.Body));\n\n      console.log(bin);\n      console.log(\"File Size:\", Math.round(bin.length / 1024), \"KB\");\n\n      // Embed the PDF into the HTML page and show it to the user\n      ////////////\n      if (datacontentType.toLowerCase().includes(\"pdf\")) {\n        result = {\n          isSuccess: \"true\",\n          message: \"photo retrieved\",\n          dataprops: {\n            imgtag: \"\",\n            pdftag: getPDFfromData(data.Body, dataprops),\n            sourcetype: \"PDF\",\n          },\n        };\n      } else if (\n        datacontentType.toLowerCase().includes(\"jpg\") ||\n        datacontentType.toLowerCase().includes(\"jpeg\") ||\n        datacontentType.toLowerCase().includes(\"png\")\n      ) {\n        result = {\n          isSuccess: \"true\",\n          message: \"photo retrieved\",\n          dataprops: {\n            imgtag: \"\",\n            imgsrc: getImagefromData(data.Body, dataprops),\n            pdftag: \"\",\n            sourcetype: \"IMG\",\n          },\n        };\n      } else if (\n        datacontentType.toLowerCase().includes(\"webm\") ||\n        datacontentType.toLowerCase().includes(\"flv\") ||\n        datacontentType.toLowerCase().includes(\"mpg\") ||\n        datacontentType.toLowerCase().includes(\"mpeg\") ||\n        datacontentType.toLowerCase().includes(\"3gp\") ||\n        datacontentType.toLowerCase().includes(\"flv\") ||\n        datacontentType.toLowerCase().includes(\"mp4\")\n      ) {\n        result = {\n          isSuccess: \"true\",\n          message: \"photo retrieved\",\n          dataprops: {\n            imgtag: \"\",\n            imgsrc: \"\",\n            vidsrc: getVideofromData(data.Body, dataprops),\n            pdftag: \"\",\n            sourcetype: \"VID\",\n          },\n        };\n      } else {\n        result = {\n          isSuccess: \"true\",\n          message: \"photo retrieved\",\n          dataprops: {\n            imgtag: \"\",\n            imgsrc: getImagefromData(data.Body, dataprops),\n            pdftag: \"\",\n            sourcetype: \"IMG\",\n          },\n        };\n      }\n\n      dataprops.callback(result);\n    } // successful response\n    /*\n     data = {\n      AcceptRanges: \"bytes\", \n      ContentLength: 3191, \n      ContentType: \"image/jpeg\", \n      ETag: \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\", \n      LastModified: <Date Representation>, \n      Metadata: {\n      }, \n      TagCount: 2, \n      VersionId: \"null\"\n     }\n     */\n  });\n  return result;\n}\n\nfunction b64toBlob(b64Data, contentType, sliceSize) {\n  contentType = contentType || \"\";\n  sliceSize = sliceSize || 512;\n\n  var byteCharacters = atob(b64Data);\n  var byteArrays = [];\n\n  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    var byteNumbers = new Array(slice.length);\n    for (var i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    var byteArray = new Uint8Array(byteNumbers);\n\n    byteArrays.push(byteArray);\n  }\n\n  var blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n}\n\nexport async function createRecordAWS(dataprops) {\n  console.log(dataprops);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName;\n  let fileEvent = dataprops.fileEvent;\n  var files, file, fileSuffix;\n  fileSuffix = \"\";\n  if (fileEvent != \"\") {\n    files = fileEvent.target.files;\n    if (!files || !files.length) {\n      return alert(\"Please choose a file to upload first.\");\n    }\n    file = files[0];\n  } else {\n    //file = dataprops.fileSrc.file;\n\n    let dataUrl = document.getElementById(dataprops.filehtmlId).src.split(\",\");\n    let base64 = dataUrl[1];\n    let mime = dataUrl[0].match(/:(.*?);/)[1];\n    let bin = atob(base64);\n    let length = bin.length;\n    // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n    // encode-decode-image-with-base64-breaks-image (2013-04-21)\n    let buf = new ArrayBuffer(length);\n    let arr = new Uint8Array(buf);\n    bin.split(\"\").forEach((e, i) => (arr[i] = e.charCodeAt(0)));\n    console.log(mime);\n    if (mime.toLowerCase().includes(\"jpg\")) {\n      fileSuffix = \"jpg\";\n    } else if (mime.toLowerCase().includes(\"jpeg\")) {\n      fileSuffix = \"jpeg\";\n    } else if (mime.toLowerCase().includes(\"png\")) {\n      fileSuffix = \"png\";\n    } else {\n      fileSuffix = \"jpeg\";\n    }\n    let f = new File([buf], \"filename\", { type: mime }); // note: [buf]\n    let blobUrl = URL.createObjectURL(f);\n    file = f;\n    // let link = document.createElement(\"a\");\n    // link.href = blobUrl;\n    // link.download = \"filename\";\n    // link.innerHTML = \"Download file.\";\n    // document.getElementById(\"url1\").appendChild(link);\n  }\n  console.log(file);\n\n  var albumPhotosKey = folderUrl + \"/\";\n  var photoKey = albumPhotosKey + fileName + \".\" + fileSuffix;\n  //  photoKey = \"/a/b/c\";\n  var upload = new window.AWS.S3.ManagedUpload({\n    params: {\n      Bucket: albumBucketName,\n      Key: photoKey,\n      Body: file,\n      ACL: \"public-read\",\n    },\n  });\n  var promise = upload.promise();\n  promise.then(\n    function (data) {\n      console.log(data);\n      result = {\n        isSuccess: \"true\",\n        message: \"Successfully uploaded photo.\",\n        dataprops: data,\n      };\n      dataprops.callback(result);\n      //     viewAlbum(folderUrl);\n    },\n    function (err) {\n      result = {\n        isSuccess: \"false\",\n        message: \"There was an error uploading\" + err.message,\n        dataprops: {},\n      };\n      dataprops.callback(result);\n      // return alert(\"There was an error uploading your photo: \", err.message);\n    }\n  );\n\n  return result;\n}\n\nexport async function updateRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/update\";\n  console.log(endurl);\n\n  let fieldProps = dataprops.objectData;\n\n  let objectData = dataprops.objectData;\n  let UpdateExpression = \"set \";\n  let ExpressionAttributeNames = {};\n  let ExpressionAttributeValues = {};\n  let index = 0;\n  let lastIndex = Object.keys(fieldProps).length - 1;\n  for (let i in fieldProps) {\n    console.log();\n    let keyindex = \"#a\" + index;\n    ExpressionAttributeNames[keyindex] = i;\n    let valueindex = \":x\" + index;\n    ExpressionAttributeValues[valueindex] = fieldProps[i];\n    if (index < lastIndex) {\n      UpdateExpression =\n        UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" , \";\n    } else {\n      UpdateExpression =\n        UpdateExpression + \"#a\" + index + \" = :\" + \"x\" + index + \" \";\n    }\n    index = index + 1;\n  }\n\n  console.log(ExpressionAttributeValues);\n  objectData = {\n    Key: dataprops.objectPrimaryKeyValue,\n    UpdateExpression: UpdateExpression,\n    ExpressionAttributeNames: ExpressionAttributeNames,\n    ExpressionAttributeValues: ExpressionAttributeValues,\n  };\n  let axiosresult = await axios\n    .post(endurl, objectData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error.response);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function deleteRecordAWS(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let endurl = createAPIUrl + \"/\" + dataprops.objectName + \"/delete\";\n  console.log(endurl);\n\n  let objectData = {\n    Key: dataprops.objectPrimaryKeyValue,\n  };\n  let axiosresult = await axios\n    .post(endurl, objectData, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => {\n      console.log(response);\n      result = {\n        isSuccess: \"true\",\n        message: \"user loggedin\",\n        dataprops: response.data,\n      };\n      return result;\n    })\n    .catch((error) => {\n      console.log(error.response);\n      let errormessage = \"\";\n      if (error.response) {\n        errormessage = error.response.data.message;\n      } else {\n        errormessage = JSON.stringify(error);\n      }\n      result = {\n        isSuccess: \"false\",\n        message: errormessage,\n        dataprops: {},\n      };\n      return result;\n    });\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}