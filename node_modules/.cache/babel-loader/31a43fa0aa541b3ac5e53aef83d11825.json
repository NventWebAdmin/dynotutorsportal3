{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/htmlformnew.js\";\nimport React, { Component } from \"react\";\nimport Tabpanel from \"./tabpanel\";\nimport Tablecomp from \"./tablecomp2\";\nimport Htmlforminputoutputimage from \"./htmlforminputoutputimage\";\nimport Htmlforminputoutputvideo from \"./htmlforminputoutputvideo\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport { getDateDigitalDisplay, getMonthDigitalDisplay } from \"../js/index\"; //import { sortArray, fieldTypeHtmltoDBmapping } from \"../../js/index\";\n//var htmlinputimagecanvas = document.createElement(\"CANVAS\");\n// let htmlfromprops = [\n//   {\n//     label: \"First Name\",\n//     name: \"firstname\",\n//     type: \"inputtext\",\n//     placeholder: \"First Name\",\n//   },\n//   {\n//     label: \"Last Name\",\n//     name: \"lastname\",\n//     type: \"inputtext\",\n//     placeholder: \"Last Name\",\n//   },\n//   { label: \"Address\", name: \"address\", type: \"inputtextarea\", placeholder: \"\" },\n//   {\n//     label: \"Country\",\n//     name: \"country\",\n//     type: \"inputselect\",\n//     placeholder: \"\",\n//     options: [{ label: \"India\" }, { label: \"USA\" }],\n//   },\n//   {\n//     label: \"zipcode\",\n//     name: \"zipcode\",\n//     type: \"inputdatalist\",\n//     placeholder: \"\",\n//     options: [\n//       { label: \"75206\" },\n//       { label: \"94538\" },\n//       { label: \"39523\" },\n//       { label: \"75206\" },\n//       { label: \"94538\" },\n//       { label: \"39523\" },\n//     ],\n//   },\n// ];\n// <Svgcomp\n// dataprops={htmlfromprops}\n// style={{ width: \"50%\" }}\n// inputChanged={(e) => {\n//   console.log(e.target.dataset.name + \"===\" + e.target.value);\n// }}\n// />\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.validate = () => {};\n\n    this.btnclkHandler = e => {\n      // let errorelements = document.querySelectorAll(\" .htmlforminputitemerror\");\n      // for (let j = 0; j < errorelements.length; j++) {\n      //   errorelements[j].style.display = \"none\";\n      // }\n      // console.log(e.target);\n      // console.log(e.target.dataset);\n      let validationpanelsections = e.target.dataset.validationpanel;\n      let isValid = true; // if (validationpanelsections) {\n      //   let validationpanelsectionsArray = validationpanelsections.split(\"-\");\n      //   console.log(validationpanelsectionsArray);\n      //   for (let i in validationpanelsectionsArray) {\n      //     let htmlsections = document.querySelectorAll(\n      //       \".\" + validationpanelsectionsArray[i] + \" .htmlforminputitem\"\n      //     );\n      //     console.log(validationpanelsectionsArray[i]);\n      //     console.log(htmlsections);\n      //     for (let j = 0; j < htmlsections.length; j++) {\n      //       console.log(htmlsections[j]);\n      //       if (this.inputElementValidate(htmlsections[j]) === false) {\n      //         isValid = false;\n      //       }\n      //     }\n      //   }\n      // }\n\n      console.log(isValid);\n\n      if (isValid === true) {\n        this.props.clkHandler({\n          buttonLabel: e.target.dataset.label,\n          buttonName: e.target.dataset.name,\n          buttonType: e.target.dataset.type,\n          itemLabel: \"\",\n          itemName: e.target.dataset.name,\n          itemType: e.target.dataset.actiontype,\n          actionid: e.target.dataset.actionid,\n          itemData: \"\",\n          recordid: e.target.dataset.recordid\n        });\n      }\n    };\n\n    this.sectionclkHanlder = e => {\n      let errorelements = document.querySelectorAll(\" .htmlforminputitemerror\");\n\n      for (let j = 0; j < errorelements.length; j++) {\n        errorelements[j].style.display = \"none\";\n      }\n\n      console.log(e.target);\n      console.log(e.target.dataset);\n      let validationpanelsections = e.target.dataset.validationpanel;\n      let isValid = true;\n\n      if (validationpanelsections) {\n        let validationpanelsectionsArray = validationpanelsections.split(\"-\");\n        console.log(validationpanelsectionsArray);\n\n        for (let i in validationpanelsectionsArray) {\n          let htmlsections = document.querySelectorAll(\".\" + validationpanelsectionsArray[i] + \" .htmlforminputitem\");\n          console.log(validationpanelsectionsArray[i]);\n          console.log(htmlsections);\n\n          for (let j = 0; j < htmlsections.length; j++) {\n            console.log(htmlsections[j]);\n\n            if (this.inputElementValidate(htmlsections[j]) === false) {\n              isValid = false;\n            }\n          }\n        }\n      }\n\n      console.log(isValid);\n\n      if (isValid === true) {// this.props.clkHandler({\n        //   buttonLabel: e.target.dataset.label,\n        //   buttonName: e.target.dataset.name,\n        //   buttonType: e.target.dataset.type,\n        // });\n      }\n    };\n\n    this.inputElementValidate = htmllement => {\n      let isValid = true;\n\n      if (htmllement && htmllement.required) {\n        if (htmllement.value.trim() === \"\" || htmllement.value === undefined) {\n          htmllement.style.borderBottomColor = \"red\";\n          htmllement.style.borderBottomWidth = \"2px\";\n          var newDiv = document.createElement(\"div\");\n          var newContent = document.createTextNode(\"This is required\");\n          newDiv.setAttribute(\"class\", \"htmlforminputitemerror\");\n          newDiv.appendChild(newContent);\n          htmllement.insertAdjacentElement(\"afterend\", newDiv);\n          isValid = false;\n        } else {\n          htmllement.style.borderBottomColor = htmllement.style.borderRightColor;\n          htmllement.style.borderBottomWidth = htmllement.style.borderRightWidth;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.tabclkHandler = props => {\n      let {\n        tabLabel,\n        tabName,\n        tabType\n      } = props;\n      console.log(props);\n\n      if (tabType === \"recorddata\") {\n        //  this.setState({ activeTabNamefromState: tabName });\n        this.props.clkHandler({\n          tabLabel: tabLabel,\n          tabName: tabName,\n          tabType: tabType\n        });\n      } else if (tabType === \"recordlistdata\") {} else if (tabType === \"recordrelatedlistdata\") {\n        this.props.clkHandler({\n          tabLabel: tabLabel,\n          tabName: tabName,\n          tabType: tabType\n        });\n      } else {}\n    };\n\n    this.inputchngHandler = e => {\n      let updatedinputvalue = \"\";\n\n      if (e.target.dataset.type === \"inputdatetime\") {\n        let locald = new Date(e.target.value);\n        updatedinputvalue = locald.toISOString();\n      } else if (e.target.dataset.type === \"inputdate\") {\n        let locald = new Date(e.target.value);\n        let localISOd = new Date(locald.getUTCFullYear(), locald.getUTCMonth(), locald.getUTCDate(), 0, 0, 0);\n        console.log(localISOd);\n        updatedinputvalue = localISOd.toISOString();\n      } else if (e.target.dataset.type === \"inputcheckbox\") {\n        updatedinputvalue = String(e.target.checked);\n      } else {\n        updatedinputvalue = e.target.value;\n      }\n\n      console.log(e.target.value);\n      console.log(updatedinputvalue);\n      this.props.inputChanged(e, {\n        inputLabel: e.target.dataset.label,\n        inputName: e.target.dataset.name,\n        inputType: e.target.dataset.type,\n        clientstatename: e.target.dataset.clientstatename,\n        clientstatetype: e.target.dataset.clientstatetype,\n        inputValue: updatedinputvalue\n      });\n    };\n\n    this.handleExcelFiles = async e => {\n      let clientstatename = e.target.dataset.clientstatename;\n      let clientstatetype = e.target.dataset.clientstatetype;\n      let f = e.target.files[0];\n\n      if (f) {\n        var r = new FileReader();\n\n        r.onload = async e => {\n          var bytes = new Uint8Array(e.target.result);\n          console.log(bytes);\n          var contents = JSON.parse(this.processExcel(e.target.result));\n          console.log(contents);\n          let tablecompcolumnmetadata = {};\n          let tablecompcolumndata = [];\n          let excelHeaderColumnArray = [];\n          let sheettoprocess = 0;\n\n          for (let i in contents) {\n            console.log(i);\n\n            if (sheettoprocess === 0) {\n              let excelSheetItemData = contents[i];\n\n              for (let j = 0; j < excelSheetItemData.length; j++) {\n                if (j === 0) {\n                  // excel sheet header row\n                  let excelSheetItemRowData = excelSheetItemData[0];\n\n                  for (let k = 0; k < excelSheetItemRowData.length; k++) {\n                    excelHeaderColumnArray.push(excelSheetItemRowData[k]);\n                    tablecompcolumnmetadata[excelSheetItemRowData[k]] = {\n                      label: excelSheetItemRowData[k],\n                      name: excelSheetItemRowData[k],\n                      order: k\n                    };\n                  }\n                }\n              }\n\n              console.log(tablecompcolumnmetadata);\n              console.log(excelHeaderColumnArray);\n\n              for (let j = 0; j < excelSheetItemData.length; j++) {\n                if (j != 0) {\n                  // excel sheet header row\n                  let excelSheetItemRowData = excelSheetItemData[j];\n                  let tablecompcolumndataItem = {};\n\n                  for (let k = 0; k < excelSheetItemRowData.length; k++) {\n                    tablecompcolumndataItem[excelHeaderColumnArray[k]] = excelSheetItemRowData[k];\n                  }\n\n                  console.log(tablecompcolumndataItem);\n                  tablecompcolumndata.push(tablecompcolumndataItem);\n                }\n              }\n            }\n\n            sheettoprocess = sheettoprocess + 1;\n          }\n\n          console.log(tablecompcolumnmetadata);\n          console.log(tablecompcolumndata);\n          let metadata = {\n            student: {\n              label: \"Students\",\n              name: \"student\",\n              buttons: {},\n              columns: tablecompcolumnmetadata,\n              idsortparam: \"\",\n              order: \"0\"\n            }\n          };\n          let datahtml = [];\n          datahtml.push( /*#__PURE__*/_jsxDEV(Tablecomp, {\n            dataProps: {\n              name: \"meganavpanel-list-content-recordname\",\n              type: \"meganavpanel-list-content-recordname\"\n            },\n            columnMetadata: metadata,\n            tableOnclick: \"\",\n            tableOnChange: this.inputExcelChangeHandler,\n            recordData: tablecompcolumndata,\n            activeTableviewName: \"student\",\n            tableName: \"student\",\n            tablehtmlid: \"student\" + \"upload\",\n            rowhtmlid1: \"firstname\",\n            rowhtmlid2: \"lastname\",\n            clientstatename: clientstatename,\n            clientstatetype: clientstatetype\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this));\n          this.setState({\n            inputexcelbody: datahtml\n          });\n        };\n\n        r.readAsBinaryString(f);\n      } else {\n        console.log(\"Failed to load file\");\n      }\n    };\n\n    this.processExcel = data => {\n      var workbook = window.XLSX.read(data, {\n        type: \"binary\"\n      });\n      var firstSheet = workbook.SheetNames[0];\n      var data = this.to_json(workbook);\n      return data;\n    };\n\n    this.to_json = workbook => {\n      var result = {};\n      workbook.SheetNames.forEach(function (sheetName) {\n        var roa = window.XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n          header: 1\n        });\n        if (roa.length) result[sheetName] = roa;\n      });\n      return JSON.stringify(result, 2, 2);\n    };\n\n    this.inputselectchngHandler = e => {\n      console.log(e.target.value);\n      this.props.inputChanged(e, {\n        inputLabel: e.target.dataset.label,\n        inputName: e.target.value,\n        inputType: e.target.dataset.type,\n        inputValue: e.target.value\n      });\n    };\n\n    this.inputExcelChangeHandler = (e, props) => {\n      console.log(props);\n      this.props.inputChanged(e, props);\n    };\n\n    this.state = {\n      activeTabNamefromState: \"\",\n      inputexcelbody: [],\n      activeTabNamefromState: \"\",\n      activeSectionNamefromState: \"\",\n      activeSubsectionNamefromState: \"\"\n    };\n  }\n\n  componentDidMount() {// getImageRecordStorage({\n    //   folderUrl: \"gouthama\" + \"/\" + \"student\",\n    //   fileName: \"IMG_0037.JPG\",\n    //   pdfpageNumber: 1,\n    //   htmlId: \"theCanvas\",\n    //   fileEvent: \"\",\n    //   callback: (result) => {\n    //     console.log(result);\n    //     if (result.isSuccess === \"true\") {\n    //       console.log(result.dataprops.imgsrc);\n    //       // document.getElementById(imghtmlid).src = result.dataprops.imgsrc;\n    //     } else {\n    //     }\n    //   },\n    // });\n  }\n\n  getHtmlFormItem(htmlFormItem, sectionName) {\n    let htmlFormArray = [];\n\n    if (htmlFormItem.type === \"tabpanel\") {\n      console.log(htmlFormItem.tabarrayprops);\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" org-fr org-fai-c org-fjc-c\",\n          children: /*#__PURE__*/_jsxDEV(Tabpanel, {\n            bgcolor: \"\",\n            onTabOpen: this.tabclkHandler,\n            activeTabName: htmlFormItem.tabarrayprops.activeTabName,\n            dataprops: htmlFormItem.tabarrayprops.tabObjectArray,\n            type: \"mainpanelsectiontab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"buttonpanel\") {\n      console.log(htmlFormItem.buttonarrayprops);\n      let buttonPanelItemshtml = [];\n\n      for (let buttonPanelItem in htmlFormItem.buttonarrayprops) {\n        buttonPanelItemshtml.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-name\": htmlFormItem.buttonarrayprops[buttonPanelItem].name,\n          \"data-label\": htmlFormItem.buttonarrayprops[buttonPanelItem].label,\n          \"data-type\": htmlFormItem.buttonarrayprops[buttonPanelItem].type,\n          \"data-actionid\": htmlFormItem.buttonarrayprops[buttonPanelItem].action.id,\n          \"data-actiontype\": htmlFormItem.buttonarrayprops[buttonPanelItem].action.type // data-validationpanel={\n          //   htmlFormItem.buttonarrayprops[buttonPanelItem].action\n          //     .validationpanel\n          // }\n          ,\n          onClick: this.btnclkHandler,\n          className: \"org-databutton esm\",\n          children: htmlFormItem.buttonarrayprops[buttonPanelItem].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this));\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fai-c org-fjc-c\",\n          children: buttonPanelItemshtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"headertext\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel mf\",\n          children: htmlFormItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"subheadertext\") {\n      let subheaderclass = \"org-datainputlabel mf esp\";\n      console.log(htmlFormItem.validationpanel);\n      let subheadervalidationarray = htmlFormItem.validationpanel.split(\"-\");\n\n      for (let subheadervalidationarrayitem in subheadervalidationarray) {\n        subheaderclass = subheaderclass + \" \" + subheadervalidationarray[subheadervalidationarrayitem];\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: subheaderclass,\n          style: {\n            backgroundColor: \"#717171\",\n            opacity: \"0.5\"\n          },\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-validationpanel\": htmlFormItem.validationpanel,\n          onClick: this.sectionclkHanlder,\n          children: [/*#__PURE__*/_jsxDEV(GetGoogleIcon, {\n            name: \"expand_less\",\n            \"data-name\": sectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"ouputlabel\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          children: htmlFormItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"link\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          href: \"#\",\n          className: \"org-datainput org-cursor\",\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          onClick: this.btnclkHandler,\n          children: htmlFormItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputexcel\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"org-datainput htmlforminputitem\",\n            placeholder: htmlFormItem.placeholder,\n            \"data-name\": htmlFormItem.name,\n            \"data-label\": htmlFormItem.label,\n            \"data-type\": htmlFormItem.type,\n            \"data-clientstatename\": htmlFormItem.clientstatename,\n            \"data-clientstatetype\": htmlFormItem.clientstatetype,\n            defaultValue: htmlFormItem.defaultvalue,\n            onChange: this.handleExcelFiles,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), this.state.inputexcelbody]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.handleExcelFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputimage\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Htmlforminputoutputimage, {\n            radiogroupname: \"testrg\",\n            previewImageHtmlId: \"testimg\",\n            previewVideoHtmlId: \"testvideo\",\n            imageHtmlId: \"testimg\",\n            videoHtmlId: \"\",\n            folderUrl: \"gouthama/student\",\n            fileName: \"profilepic\",\n            isInputnotOuptut: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Htmlforminputoutputimage, {\n          radiogroupname: \"testrg\",\n          previewImageHtmlId: \"testimg\",\n          previewVideoHtmlId: \"testvideo\",\n          imageHtmlId: \"testimg\",\n          videoHtmlId: \"testvideo\",\n          folderUrl: \"gouthama/student\",\n          fileName: \"profilepic\",\n          isInputnotOuptut: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputimage\") {\n      console.log(htmlFormItem);\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Htmlforminputoutputimage, {\n          radiogroupname: \"testrg\",\n          previewImageHtmlId: \"testimg\",\n          previewVideoHtmlId: \"testvideo\",\n          imageHtmlId: \"testimg\",\n          videoHtmlId: \"\",\n          folderUrl: \"gouthama/student\",\n          fileName: \"profilepic\",\n          isInputnotOuptut: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputvideo\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Htmlforminputoutputvideo, {\n            radiogroupname: \"testrg\",\n            previewImageHtmlId: \"testimg\",\n            previewVideoHtmlId: \"testvideo\",\n            imageHtmlId: \"testimg\",\n            videoHtmlId: \"\",\n            folderUrl: \"gouthama/student\",\n            fileName: \"profilepic\",\n            isInputnotOuptut: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Htmlforminputoutputvideo, {\n          radiogroupname: \"testrg\",\n          previewImageHtmlId: \"testimg\",\n          previewVideoHtmlId: \"testvideo\",\n          imageHtmlId: \"testimg\",\n          videoHtmlId: \"testvideo\",\n          folderUrl: \"gouthama/student\",\n          fileName: \"profilepic\",\n          isInputnotOuptut: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputvideo\") {\n      console.log(htmlFormItem);\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Htmlforminputoutputvideo, {\n          radiogroupname: \"testrg\",\n          previewImageHtmlId: \"testimg\",\n          previewVideoHtmlId: \"testvideo\",\n          imageHtmlId: \"testimg\",\n          videoHtmlId: \"\",\n          folderUrl: \"gouthama/student\",\n          fileName: \"profilepic\",\n          isInputnotOuptut: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputtext\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputhtml\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputurl\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputcheckbox\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \" htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultChecked: htmlFormItem.defaultvalue === \"true\",\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \" htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputdatetime\") {\n      let defaultDatestring = \"\";\n\n      if (htmlFormItem.defaultvalue) {\n        let dated = new Date(htmlFormItem.defaultvalue);\n        defaultDatestring = dated.getFullYear() + \"-\" + getMonthDigitalDisplay({\n          monthIndex: dated.getMonth()\n        }) + \"-\" + getDateDigitalDisplay({\n          dateIndex: dated.getDate()\n        }) + \"T\" + getDateDigitalDisplay({\n          dateIndex: dated.getHours()\n        }) + \":\" + getDateDigitalDisplay({\n          dateIndex: dated.getMinutes()\n        });\n      }\n\n      let dated = new Date();\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: defaultDatestring,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputdate\") {\n      let defaultDatestring = \"\";\n\n      if (htmlFormItem.defaultvalue) {\n        let dated = new Date(htmlFormItem.defaultvalue);\n        defaultDatestring = dated.getFullYear() + \"-\" + getMonthDigitalDisplay({\n          monthIndex: dated.getMonth()\n        }) + \"-\" + getDateDigitalDisplay({\n          dateIndex: dated.getDate()\n        });\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? defaultDatestring : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: defaultDatestring,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          defaultValue: htmlFormItem.defaultvalue,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputnumber\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputemail\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputtext\") {\n      console.log(htmlFormItem);\n      let directionClass = \"\";\n\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: directionClass,\n          children: [htmlFormItem.hidelabel === \"true\" ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel sf \",\n            children: htmlFormItem.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel mf\",\n            children: htmlFormItem.defaultvalue ? htmlFormItem.defaultvalue : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputdatetime\") {\n      console.log(htmlFormItem);\n      let outputvalue = new Date(htmlFormItem.defaultvalue);\n      let directionClass = \"\";\n\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: directionClass,\n          children: [htmlFormItem.hidelabel === \"true\" ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel sf \",\n            children: htmlFormItem.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel mf\",\n            children: htmlFormItem.defaultvalue ? outputvalue.toLocaleString() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputdate\") {\n      console.log(htmlFormItem);\n      let outputvalue = new Date(htmlFormItem.defaultvalue);\n      let directionClass = \"\";\n\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: directionClass,\n          children: [htmlFormItem.hidelabel === \"true\" ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel sf \",\n            children: htmlFormItem.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel mf\",\n            children: htmlFormItem.defaultvalue ? outputvalue.toLocaleDateString() : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputcheckbox\") {\n      let directionClass = \"\";\n\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: directionClass,\n          children: [htmlFormItem.hidelabel === \"true\" ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel sf \",\n            children: htmlFormItem.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-datainputlabel mf\",\n            children: htmlFormItem.defaultvalue ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              readOnly: true,\n              checked: htmlFormItem.defaultvalue === \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1342,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputpassword\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1381,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputtextarea\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: htmlFormItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          elementtype: \"textareainput\",\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          elementtype: \"textareainput\",\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputselect\") {\n      let optionshtml = [];\n      optionshtml.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"select value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 24\n      }, this));\n\n      for (let i = 0; i < htmlFormItem.options.length; i++) {\n        console.log(htmlFormItem.options[i].label);\n        console.log(htmlFormItem.options[i]);\n        optionshtml.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: htmlFormItem.options[i].name,\n          children: htmlFormItem.options[i].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 11\n        }, this));\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection esp\",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          defaultValue: htmlFormItem.defaultvalue,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          required: true,\n          children: optionshtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"org-datainput htmlforminputitem\",\n          placeholder: htmlFormItem.placeholder,\n          defaultValue: htmlFormItem.defaultvalue,\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          \"data-clientstatename\": htmlFormItem.clientstatename,\n          \"data-clientstatetype\": htmlFormItem.clientstatetype,\n          onChange: this.inputchngHandler,\n          onKeyUp: this.props.inputKeyUp,\n          children: optionshtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"inputdatalist\") {\n      let optionshtml = [];\n\n      for (let i = 0; i < htmlFormItem.options.length; i++) {\n        optionshtml.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: htmlFormItem.options[i].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1536,\n          columnNumber: 26\n        }, this));\n      }\n\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"org-datainputsection \",\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.hidelabel === true ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: [htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"org-redc\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 17\n          }, this) : \"\", htmlFormItem.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 13\n        }, this), htmlFormItem.readonly === \"true\" ? htmlFormItem.defaultvalue : htmlFormItem.required === \"true\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"org-datainput htmlforminputitem\",\n            placeholder: htmlFormItem.placeholder,\n            list: \"datalistid\",\n            \"data-name\": htmlFormItem.name,\n            \"data-label\": htmlFormItem.label,\n            \"data-type\": htmlFormItem.type,\n            \"data-clientstatename\": htmlFormItem.clientstatename,\n            \"data-clientstatetype\": htmlFormItem.clientstatetype,\n            onChange: this.inputchngHandler,\n            onKeyUp: this.props.inputKeyUp,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"datalistid\",\n            children: [\" \", optionshtml]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"org-datainput htmlforminputitem\",\n            placeholder: htmlFormItem.placeholder,\n            list: \"datalistid\",\n            \"data-name\": htmlFormItem.name,\n            \"data-label\": htmlFormItem.label,\n            \"data-type\": htmlFormItem.type,\n            \"data-clientstatename\": htmlFormItem.clientstatename,\n            \"data-clientstatetype\": htmlFormItem.clientstatetype,\n            onChange: this.inputchngHandler,\n            onKeyUp: this.props.inputKeyUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"datalistid\",\n            children: [\" \", optionshtml]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"button\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\",\n            textAlign: \"center\",\n            backgroundColor: \"#0070D2\",\n            color: \"white\"\n          },\n          \"data-name\": htmlFormItem.name,\n          \"data-label\": htmlFormItem.label,\n          \"data-type\": htmlFormItem.type,\n          onClick: this.btnclkHandler,\n          className: \"org-datainput\",\n          children: htmlFormItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1608,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputhtml\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.label, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: htmlFormItem.defaultvalue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (htmlFormItem.type === \"outputurl\") {\n      htmlFormArray.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: htmlFormItem.width,\n          height: htmlFormItem.height,\n          display: \"inline-block\"\n        },\n        children: [htmlFormItem.label, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-datainputlabel\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: htmlFormItem.defaultvalue,\n            target: \"_blank\",\n            children: htmlFormItem.defaultvalue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1644,\n        columnNumber: 9\n      }, this));\n    }\n\n    return htmlFormArray;\n  }\n\n  render() {\n    console.log(this.props);\n    let htmlContent = [];\n\n    for (let i = 0; i < this.props.dataprops.length; i++) {\n      htmlContent.push(this.getHtmlFormItem(this.props.dataprops[i], i));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...this.props.style,\n        color: \"black\",\n        // margin: \"auto\",\n        padding: \"10px\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"flex-start\",\n        backgroundColor: this.props.bgcolor === \"\" ? \"#F2F2F2\" : this.props.bgcolor,\n        width: \"100%\"\n      },\n      children: htmlContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1672,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/htmlformnew.js"],"names":["React","Component","Tabpanel","Tablecomp","Htmlforminputoutputimage","Htmlforminputoutputvideo","GetLocalIcon","GetGoogleIcon","getDateDigitalDisplay","getMonthDigitalDisplay","F","constructor","props","validate","btnclkHandler","e","validationpanelsections","target","dataset","validationpanel","isValid","console","log","clkHandler","buttonLabel","label","buttonName","name","buttonType","type","itemLabel","itemName","itemType","actiontype","actionid","itemData","recordid","sectionclkHanlder","errorelements","document","querySelectorAll","j","length","style","display","validationpanelsectionsArray","split","i","htmlsections","inputElementValidate","htmllement","required","value","trim","undefined","borderBottomColor","borderBottomWidth","newDiv","createElement","newContent","createTextNode","setAttribute","appendChild","insertAdjacentElement","borderRightColor","borderRightWidth","tabclkHandler","tabLabel","tabName","tabType","inputchngHandler","updatedinputvalue","locald","Date","toISOString","localISOd","getUTCFullYear","getUTCMonth","getUTCDate","String","checked","inputChanged","inputLabel","inputName","inputType","clientstatename","clientstatetype","inputValue","handleExcelFiles","f","files","r","FileReader","onload","bytes","Uint8Array","result","contents","JSON","parse","processExcel","tablecompcolumnmetadata","tablecompcolumndata","excelHeaderColumnArray","sheettoprocess","excelSheetItemData","excelSheetItemRowData","k","push","order","tablecompcolumndataItem","metadata","student","buttons","columns","idsortparam","datahtml","inputExcelChangeHandler","setState","inputexcelbody","readAsBinaryString","data","workbook","window","XLSX","read","firstSheet","SheetNames","to_json","forEach","sheetName","roa","utils","sheet_to_json","Sheets","header","stringify","inputselectchngHandler","state","activeTabNamefromState","activeSectionNamefromState","activeSubsectionNamefromState","componentDidMount","getHtmlFormItem","htmlFormItem","sectionName","htmlFormArray","tabarrayprops","width","activeTabName","tabObjectArray","buttonarrayprops","buttonPanelItemshtml","buttonPanelItem","action","id","height","subheaderclass","subheadervalidationarray","subheadervalidationarrayitem","backgroundColor","opacity","hidelabel","readonly","defaultvalue","placeholder","inputKeyUp","defaultDatestring","dated","getFullYear","monthIndex","getMonth","dateIndex","getDate","getHours","getMinutes","directionClass","direction","outputvalue","toLocaleString","toLocaleDateString","optionshtml","options","textAlign","color","render","htmlContent","dataprops","padding","flexWrap","alignItems","bgcolor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Tabpanel from \"./tabpanel\";\nimport Tablecomp from \"./tablecomp2\";\nimport Htmlforminputoutputimage from \"./htmlforminputoutputimage\";\nimport Htmlforminputoutputvideo from \"./htmlforminputoutputvideo\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport { getDateDigitalDisplay, getMonthDigitalDisplay } from \"../js/index\";\n//import { sortArray, fieldTypeHtmltoDBmapping } from \"../../js/index\";\n\n//var htmlinputimagecanvas = document.createElement(\"CANVAS\");\n\n// let htmlfromprops = [\n//   {\n//     label: \"First Name\",\n//     name: \"firstname\",\n//     type: \"inputtext\",\n//     placeholder: \"First Name\",\n//   },\n//   {\n//     label: \"Last Name\",\n//     name: \"lastname\",\n//     type: \"inputtext\",\n//     placeholder: \"Last Name\",\n//   },\n//   { label: \"Address\", name: \"address\", type: \"inputtextarea\", placeholder: \"\" },\n//   {\n//     label: \"Country\",\n//     name: \"country\",\n//     type: \"inputselect\",\n//     placeholder: \"\",\n//     options: [{ label: \"India\" }, { label: \"USA\" }],\n//   },\n//   {\n//     label: \"zipcode\",\n//     name: \"zipcode\",\n//     type: \"inputdatalist\",\n//     placeholder: \"\",\n//     options: [\n//       { label: \"75206\" },\n//       { label: \"94538\" },\n//       { label: \"39523\" },\n//       { label: \"75206\" },\n//       { label: \"94538\" },\n//       { label: \"39523\" },\n//     ],\n//   },\n// ];\n// <Svgcomp\n// dataprops={htmlfromprops}\n// style={{ width: \"50%\" }}\n// inputChanged={(e) => {\n//   console.log(e.target.dataset.name + \"===\" + e.target.value);\n// }}\n// />\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTabNamefromState: \"\",\n      inputexcelbody: [],\n      activeTabNamefromState: \"\",\n      activeSectionNamefromState: \"\",\n      activeSubsectionNamefromState: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // getImageRecordStorage({\n    //   folderUrl: \"gouthama\" + \"/\" + \"student\",\n    //   fileName: \"IMG_0037.JPG\",\n    //   pdfpageNumber: 1,\n    //   htmlId: \"theCanvas\",\n    //   fileEvent: \"\",\n    //   callback: (result) => {\n    //     console.log(result);\n    //     if (result.isSuccess === \"true\") {\n    //       console.log(result.dataprops.imgsrc);\n    //       // document.getElementById(imghtmlid).src = result.dataprops.imgsrc;\n    //     } else {\n    //     }\n    //   },\n    // });\n  }\n\n  validate = () => {};\n\n  btnclkHandler = (e) => {\n    // let errorelements = document.querySelectorAll(\" .htmlforminputitemerror\");\n    // for (let j = 0; j < errorelements.length; j++) {\n    //   errorelements[j].style.display = \"none\";\n    // }\n\n    // console.log(e.target);\n    // console.log(e.target.dataset);\n    let validationpanelsections = e.target.dataset.validationpanel;\n    let isValid = true;\n    // if (validationpanelsections) {\n    //   let validationpanelsectionsArray = validationpanelsections.split(\"-\");\n    //   console.log(validationpanelsectionsArray);\n    //   for (let i in validationpanelsectionsArray) {\n    //     let htmlsections = document.querySelectorAll(\n    //       \".\" + validationpanelsectionsArray[i] + \" .htmlforminputitem\"\n    //     );\n    //     console.log(validationpanelsectionsArray[i]);\n    //     console.log(htmlsections);\n\n    //     for (let j = 0; j < htmlsections.length; j++) {\n    //       console.log(htmlsections[j]);\n    //       if (this.inputElementValidate(htmlsections[j]) === false) {\n    //         isValid = false;\n    //       }\n    //     }\n    //   }\n    // }\n    console.log(isValid);\n    if (isValid === true) {\n      this.props.clkHandler({\n        buttonLabel: e.target.dataset.label,\n        buttonName: e.target.dataset.name,\n        buttonType: e.target.dataset.type,\n        itemLabel: \"\",\n        itemName: e.target.dataset.name,\n        itemType: e.target.dataset.actiontype,\n        actionid: e.target.dataset.actionid,\n        itemData: \"\",\n        recordid: e.target.dataset.recordid,\n      });\n    }\n  };\n\n  sectionclkHanlder = (e) => {\n    let errorelements = document.querySelectorAll(\" .htmlforminputitemerror\");\n    for (let j = 0; j < errorelements.length; j++) {\n      errorelements[j].style.display = \"none\";\n    }\n\n    console.log(e.target);\n    console.log(e.target.dataset);\n    let validationpanelsections = e.target.dataset.validationpanel;\n    let isValid = true;\n    if (validationpanelsections) {\n      let validationpanelsectionsArray = validationpanelsections.split(\"-\");\n      console.log(validationpanelsectionsArray);\n      for (let i in validationpanelsectionsArray) {\n        let htmlsections = document.querySelectorAll(\n          \".\" + validationpanelsectionsArray[i] + \" .htmlforminputitem\"\n        );\n        console.log(validationpanelsectionsArray[i]);\n        console.log(htmlsections);\n\n        for (let j = 0; j < htmlsections.length; j++) {\n          console.log(htmlsections[j]);\n          if (this.inputElementValidate(htmlsections[j]) === false) {\n            isValid = false;\n          }\n        }\n      }\n    }\n    console.log(isValid);\n    if (isValid === true) {\n      // this.props.clkHandler({\n      //   buttonLabel: e.target.dataset.label,\n      //   buttonName: e.target.dataset.name,\n      //   buttonType: e.target.dataset.type,\n      // });\n    }\n  };\n\n  inputElementValidate = (htmllement) => {\n    let isValid = true;\n    if (htmllement && htmllement.required) {\n      if (htmllement.value.trim() === \"\" || htmllement.value === undefined) {\n        htmllement.style.borderBottomColor = \"red\";\n        htmllement.style.borderBottomWidth = \"2px\";\n        var newDiv = document.createElement(\"div\");\n        var newContent = document.createTextNode(\"This is required\");\n        newDiv.setAttribute(\"class\", \"htmlforminputitemerror\");\n        newDiv.appendChild(newContent);\n        htmllement.insertAdjacentElement(\"afterend\", newDiv);\n        isValid = false;\n      } else {\n        htmllement.style.borderBottomColor = htmllement.style.borderRightColor;\n        htmllement.style.borderBottomWidth = htmllement.style.borderRightWidth;\n      }\n    }\n    return isValid;\n  };\n\n  tabclkHandler = (props) => {\n    let { tabLabel, tabName, tabType } = props;\n    console.log(props);\n    if (tabType === \"recorddata\") {\n      //  this.setState({ activeTabNamefromState: tabName });\n      this.props.clkHandler({\n        tabLabel: tabLabel,\n        tabName: tabName,\n        tabType: tabType,\n      });\n    } else if (tabType === \"recordlistdata\") {\n    } else if (tabType === \"recordrelatedlistdata\") {\n      this.props.clkHandler({\n        tabLabel: tabLabel,\n        tabName: tabName,\n        tabType: tabType,\n      });\n    } else {\n    }\n  };\n\n  inputchngHandler = (e) => {\n    let updatedinputvalue = \"\";\n    if (e.target.dataset.type === \"inputdatetime\") {\n      let locald = new Date(e.target.value);\n      updatedinputvalue = locald.toISOString();\n    } else if (e.target.dataset.type === \"inputdate\") {\n      let locald = new Date(e.target.value);\n      let localISOd = new Date(\n        locald.getUTCFullYear(),\n        locald.getUTCMonth(),\n        locald.getUTCDate(),\n        0,\n        0,\n        0\n      );\n      console.log(localISOd);\n      updatedinputvalue = localISOd.toISOString();\n    } else if (e.target.dataset.type === \"inputcheckbox\") {\n      updatedinputvalue = String(e.target.checked);\n    } else {\n      updatedinputvalue = e.target.value;\n    }\n\n    console.log(e.target.value);\n    console.log(updatedinputvalue);\n    this.props.inputChanged(e, {\n      inputLabel: e.target.dataset.label,\n      inputName: e.target.dataset.name,\n      inputType: e.target.dataset.type,\n      clientstatename: e.target.dataset.clientstatename,\n      clientstatetype: e.target.dataset.clientstatetype,\n      inputValue: updatedinputvalue,\n    });\n  };\n\n  handleExcelFiles = async (e) => {\n    let clientstatename = e.target.dataset.clientstatename;\n    let clientstatetype = e.target.dataset.clientstatetype;\n\n    let f = e.target.files[0];\n    if (f) {\n      var r = new FileReader();\n      r.onload = async (e) => {\n        var bytes = new Uint8Array(e.target.result);\n        console.log(bytes);\n        var contents = JSON.parse(this.processExcel(e.target.result));\n        console.log(contents);\n        let tablecompcolumnmetadata = {};\n        let tablecompcolumndata = [];\n        let excelHeaderColumnArray = [];\n        let sheettoprocess = 0;\n        for (let i in contents) {\n          console.log(i);\n          if (sheettoprocess === 0) {\n            let excelSheetItemData = contents[i];\n            for (let j = 0; j < excelSheetItemData.length; j++) {\n              if (j === 0) {\n                // excel sheet header row\n                let excelSheetItemRowData = excelSheetItemData[0];\n                for (let k = 0; k < excelSheetItemRowData.length; k++) {\n                  excelHeaderColumnArray.push(excelSheetItemRowData[k]);\n                  tablecompcolumnmetadata[excelSheetItemRowData[k]] = {\n                    label: excelSheetItemRowData[k],\n                    name: excelSheetItemRowData[k],\n                    order: k,\n                  };\n                }\n              }\n            }\n            console.log(tablecompcolumnmetadata);\n            console.log(excelHeaderColumnArray);\n            for (let j = 0; j < excelSheetItemData.length; j++) {\n              if (j != 0) {\n                // excel sheet header row\n                let excelSheetItemRowData = excelSheetItemData[j];\n                let tablecompcolumndataItem = {};\n\n                for (let k = 0; k < excelSheetItemRowData.length; k++) {\n                  tablecompcolumndataItem[excelHeaderColumnArray[k]] =\n                    excelSheetItemRowData[k];\n                }\n                console.log(tablecompcolumndataItem);\n                tablecompcolumndata.push(tablecompcolumndataItem);\n              }\n            }\n          }\n          sheettoprocess = sheettoprocess + 1;\n        }\n        console.log(tablecompcolumnmetadata);\n        console.log(tablecompcolumndata);\n\n        let metadata = {\n          student: {\n            label: \"Students\",\n            name: \"student\",\n            buttons: {},\n            columns: tablecompcolumnmetadata,\n            idsortparam: \"\",\n            order: \"0\",\n          },\n        };\n\n        let datahtml = [];\n\n        datahtml.push(\n          <Tablecomp\n            dataProps={{\n              name: \"meganavpanel-list-content-recordname\",\n              type: \"meganavpanel-list-content-recordname\",\n            }}\n            columnMetadata={metadata}\n            tableOnclick=\"\"\n            tableOnChange={this.inputExcelChangeHandler}\n            recordData={tablecompcolumndata}\n            activeTableviewName=\"student\"\n            tableName=\"student\"\n            tablehtmlid={\"student\" + \"upload\"}\n            rowhtmlid1=\"firstname\"\n            rowhtmlid2=\"lastname\"\n            clientstatename={clientstatename}\n            clientstatetype={clientstatetype}\n          />\n        );\n\n        this.setState({ inputexcelbody: datahtml });\n      };\n      r.readAsBinaryString(f);\n    } else {\n      console.log(\"Failed to load file\");\n    }\n  };\n\n  processExcel = (data) => {\n    var workbook = window.XLSX.read(data, {\n      type: \"binary\",\n    });\n\n    var firstSheet = workbook.SheetNames[0];\n    var data = this.to_json(workbook);\n    return data;\n  };\n\n  to_json = (workbook) => {\n    var result = {};\n    workbook.SheetNames.forEach(function (sheetName) {\n      var roa = window.XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n        header: 1,\n      });\n      if (roa.length) result[sheetName] = roa;\n    });\n    return JSON.stringify(result, 2, 2);\n  };\n\n  // mainpanelInputexcelTableButtonClkHanlder = (props) => {\n  //   let updatedProps = props;\n  //   updatedProps.itemType = \"mainpanelinputexceltablebutton\";\n  //   console.log(props);\n  //   this.props.clkHandler(updatedProps);\n  // };\n\n  inputselectchngHandler = (e) => {\n    console.log(e.target.value);\n    this.props.inputChanged(e, {\n      inputLabel: e.target.dataset.label,\n      inputName: e.target.value,\n      inputType: e.target.dataset.type,\n      inputValue: e.target.value,\n    });\n  };\n\n  inputExcelChangeHandler = (e, props) => {\n    console.log(props);\n    this.props.inputChanged(e, props);\n  };\n\n  getHtmlFormItem(htmlFormItem, sectionName) {\n    let htmlFormArray = [];\n    if (htmlFormItem.type === \"tabpanel\") {\n      console.log(htmlFormItem.tabarrayprops);\n\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            display: \"inline-block\",\n          }}\n        >\n          <div className=\" org-fr org-fai-c org-fjc-c\">\n            <Tabpanel\n              bgcolor=\"\"\n              onTabOpen={this.tabclkHandler}\n              activeTabName={htmlFormItem.tabarrayprops.activeTabName}\n              dataprops={htmlFormItem.tabarrayprops.tabObjectArray}\n              type=\"mainpanelsectiontab\"\n            />\n          </div>\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"buttonpanel\") {\n      console.log(htmlFormItem.buttonarrayprops);\n      let buttonPanelItemshtml = [];\n      for (let buttonPanelItem in htmlFormItem.buttonarrayprops) {\n        buttonPanelItemshtml.push(\n          <button\n            data-name={htmlFormItem.buttonarrayprops[buttonPanelItem].name}\n            data-label={htmlFormItem.buttonarrayprops[buttonPanelItem].label}\n            data-type={htmlFormItem.buttonarrayprops[buttonPanelItem].type}\n            data-actionid={\n              htmlFormItem.buttonarrayprops[buttonPanelItem].action.id\n            }\n            data-actiontype={\n              htmlFormItem.buttonarrayprops[buttonPanelItem].action.type\n            }\n            // data-validationpanel={\n            //   htmlFormItem.buttonarrayprops[buttonPanelItem].action\n            //     .validationpanel\n            // }\n            onClick={this.btnclkHandler}\n            className=\"org-databutton esm\"\n          >\n            {htmlFormItem.buttonarrayprops[buttonPanelItem].label}\n          </button>\n        );\n      }\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div className=\"org-fr org-fai-c org-fjc-c\">\n            {buttonPanelItemshtml}\n          </div>\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"headertext\") {\n      htmlFormArray.push(\n        <div style={{ width: htmlFormItem.width, height: htmlFormItem.height }}>\n          <div className=\"org-datainputlabel mf\">{htmlFormItem.label}</div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"subheadertext\") {\n      let subheaderclass = \"org-datainputlabel mf esp\";\n\n      console.log(htmlFormItem.validationpanel);\n      let subheadervalidationarray = htmlFormItem.validationpanel.split(\"-\");\n      for (let subheadervalidationarrayitem in subheadervalidationarray) {\n        subheaderclass =\n          subheaderclass +\n          \" \" +\n          subheadervalidationarray[subheadervalidationarrayitem];\n      }\n      htmlFormArray.push(\n        <div style={{ width: htmlFormItem.width }}>\n          <div\n            className={subheaderclass}\n            style={{ backgroundColor: \"#717171\", opacity: \"0.5\" }}\n            data-name={htmlFormItem.name}\n            data-label={htmlFormItem.label}\n            data-type={htmlFormItem.type}\n            data-validationpanel={htmlFormItem.validationpanel}\n            onClick={this.sectionclkHanlder}\n          >\n            <GetGoogleIcon name=\"expand_less\" data-name={sectionName} />\n            {htmlFormItem.label}\n          </div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"ouputlabel\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div\n            className=\"org-datainputlabel\"\n            data-name={htmlFormItem.name}\n            data-label={htmlFormItem.label}\n            data-type={htmlFormItem.type}\n          >\n            {htmlFormItem.label}\n          </div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"link\") {\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div\n            href=\"#\"\n            className=\"org-datainput org-cursor\"\n            data-name={htmlFormItem.name}\n            data-label={htmlFormItem.label}\n            data-type={htmlFormItem.type}\n            onClick={this.btnclkHandler}\n          >\n            {htmlFormItem.label}\n          </div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputexcel\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <>\n              <input\n                type=\"file\"\n                className=\"org-datainput htmlforminputitem\"\n                placeholder={htmlFormItem.placeholder}\n                data-name={htmlFormItem.name}\n                data-label={htmlFormItem.label}\n                data-type={htmlFormItem.type}\n                data-clientstatename={htmlFormItem.clientstatename}\n                data-clientstatetype={htmlFormItem.clientstatetype}\n                defaultValue={htmlFormItem.defaultvalue}\n                onChange={this.handleExcelFiles}\n                required\n              />\n              {this.state.inputexcelbody}\n            </>\n          ) : (\n            <input\n              type=\"file\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.handleExcelFiles}\n            />\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputimage\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <>\n              <Htmlforminputoutputimage\n                radiogroupname=\"testrg\"\n                previewImageHtmlId=\"testimg\"\n                previewVideoHtmlId=\"testvideo\"\n                imageHtmlId=\"testimg\"\n                videoHtmlId=\"\"\n                folderUrl=\"gouthama/student\"\n                fileName=\"profilepic\"\n                isInputnotOuptut=\"true\"\n              />\n            </>\n          ) : (\n            <Htmlforminputoutputimage\n              radiogroupname=\"testrg\"\n              previewImageHtmlId=\"testimg\"\n              previewVideoHtmlId=\"testvideo\"\n              imageHtmlId=\"testimg\"\n              videoHtmlId=\"testvideo\"\n              folderUrl=\"gouthama/student\"\n              fileName=\"profilepic\"\n              isInputnotOuptut=\"true\"\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"outputimage\") {\n      console.log(htmlFormItem);\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <Htmlforminputoutputimage\n            radiogroupname=\"testrg\"\n            previewImageHtmlId=\"testimg\"\n            previewVideoHtmlId=\"testvideo\"\n            imageHtmlId=\"testimg\"\n            videoHtmlId=\"\"\n            folderUrl=\"gouthama/student\"\n            fileName=\"profilepic\"\n            isInputnotOuptut=\"false\"\n          />\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputvideo\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <>\n              <Htmlforminputoutputvideo\n                radiogroupname=\"testrg\"\n                previewImageHtmlId=\"testimg\"\n                previewVideoHtmlId=\"testvideo\"\n                imageHtmlId=\"testimg\"\n                videoHtmlId=\"\"\n                folderUrl=\"gouthama/student\"\n                fileName=\"profilepic\"\n                isInputnotOuptut=\"true\"\n              />\n            </>\n          ) : (\n            <Htmlforminputoutputvideo\n              radiogroupname=\"testrg\"\n              previewImageHtmlId=\"testimg\"\n              previewVideoHtmlId=\"testvideo\"\n              imageHtmlId=\"testimg\"\n              videoHtmlId=\"testvideo\"\n              folderUrl=\"gouthama/student\"\n              fileName=\"profilepic\"\n              isInputnotOuptut=\"true\"\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"outputvideo\") {\n      console.log(htmlFormItem);\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <Htmlforminputoutputvideo\n            radiogroupname=\"testrg\"\n            previewImageHtmlId=\"testimg\"\n            previewVideoHtmlId=\"testvideo\"\n            imageHtmlId=\"testimg\"\n            videoHtmlId=\"\"\n            folderUrl=\"gouthama/student\"\n            fileName=\"profilepic\"\n            isInputnotOuptut=\"false\"\n          />\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputtext\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputhtml\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputurl\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputcheckbox\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              type=\"checkbox\"\n              className=\" htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultChecked={htmlFormItem.defaultvalue === \"true\"}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              type=\"checkbox\"\n              className=\" htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputdatetime\") {\n      let defaultDatestring = \"\";\n      if (htmlFormItem.defaultvalue) {\n        let dated = new Date(htmlFormItem.defaultvalue);\n        defaultDatestring =\n          dated.getFullYear() +\n          \"-\" +\n          getMonthDigitalDisplay({ monthIndex: dated.getMonth() }) +\n          \"-\" +\n          getDateDigitalDisplay({ dateIndex: dated.getDate() }) +\n          \"T\" +\n          getDateDigitalDisplay({ dateIndex: dated.getHours() }) +\n          \":\" +\n          getDateDigitalDisplay({ dateIndex: dated.getMinutes() });\n      }\n      let dated = new Date();\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              type=\"datetime-local\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={defaultDatestring}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              type=\"datetime-local\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputdate\") {\n      let defaultDatestring = \"\";\n      if (htmlFormItem.defaultvalue) {\n        let dated = new Date(htmlFormItem.defaultvalue);\n        defaultDatestring =\n          dated.getFullYear() +\n          \"-\" +\n          getMonthDigitalDisplay({ monthIndex: dated.getMonth() }) +\n          \"-\" +\n          getDateDigitalDisplay({ dateIndex: dated.getDate() });\n      }\n\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            defaultDatestring\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              type=\"date\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={defaultDatestring}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              type=\"date\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              defaultValue={htmlFormItem.defaultvalue}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputnumber\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"inputemail\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"outputtext\") {\n      console.log(htmlFormItem);\n      let directionClass = \"\";\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div className={directionClass}>\n            {htmlFormItem.hidelabel === \"true\" ? (\n              \"\"\n            ) : (\n              <div className=\"org-datainputlabel sf \">{htmlFormItem.label}</div>\n            )}\n\n            <div className=\"org-datainputlabel mf\">\n              {htmlFormItem.defaultvalue ? (\n                htmlFormItem.defaultvalue\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"outputdatetime\") {\n      console.log(htmlFormItem);\n      let outputvalue = new Date(htmlFormItem.defaultvalue);\n      let directionClass = \"\";\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div className={directionClass}>\n            {htmlFormItem.hidelabel === \"true\" ? (\n              \"\"\n            ) : (\n              <div className=\"org-datainputlabel sf \">{htmlFormItem.label}</div>\n            )}\n\n            <div className=\"org-datainputlabel mf\">\n              {htmlFormItem.defaultvalue ? (\n                outputvalue.toLocaleString()\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"outputdate\") {\n      console.log(htmlFormItem);\n      let outputvalue = new Date(htmlFormItem.defaultvalue);\n      let directionClass = \"\";\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div className={directionClass}>\n            {htmlFormItem.hidelabel === \"true\" ? (\n              \"\"\n            ) : (\n              <div className=\"org-datainputlabel sf \">{htmlFormItem.label}</div>\n            )}\n\n            <div className=\"org-datainputlabel mf\">\n              {htmlFormItem.defaultvalue ? (\n                outputvalue.toLocaleDateString()\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n    if (htmlFormItem.type === \"outputcheckbox\") {\n      let directionClass = \"\";\n      if (htmlFormItem.direction === \"horizon\") {\n        directionClass = \"org-fr org-fai-c org-fjc-sb\";\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <div className={directionClass}>\n            {htmlFormItem.hidelabel === \"true\" ? (\n              \"\"\n            ) : (\n              <div className=\"org-datainputlabel sf \">{htmlFormItem.label}</div>\n            )}\n\n            <div className=\"org-datainputlabel mf\">\n              {htmlFormItem.defaultvalue ? (\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                  checked={htmlFormItem.defaultvalue === \"true\"}\n                />\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputpassword\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <input\n              type=\"password\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <input\n              type=\"password\"\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputtextarea\") {\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">{htmlFormItem.label}</div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <textarea\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              elementtype=\"textareainput\"\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            />\n          ) : (\n            <textarea\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              elementtype=\"textareainput\"\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            />\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputselect\") {\n      let optionshtml = [];\n      optionshtml.push(<option value=\"\">select value</option>);\n      for (let i = 0; i < htmlFormItem.options.length; i++) {\n        console.log(htmlFormItem.options[i].label);\n        console.log(htmlFormItem.options[i]);\n        optionshtml.push(\n          <option value={htmlFormItem.options[i].name}>\n            {htmlFormItem.options[i].label}\n          </option>\n        );\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection esp\"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <select\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              defaultValue={htmlFormItem.defaultvalue}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n              required\n            >\n              {optionshtml}\n            </select>\n          ) : (\n            <select\n              className=\"org-datainput htmlforminputitem\"\n              placeholder={htmlFormItem.placeholder}\n              defaultValue={htmlFormItem.defaultvalue}\n              data-name={htmlFormItem.name}\n              data-label={htmlFormItem.label}\n              data-type={htmlFormItem.type}\n              data-clientstatename={htmlFormItem.clientstatename}\n              data-clientstatetype={htmlFormItem.clientstatetype}\n              onChange={this.inputchngHandler}\n              onKeyUp={this.props.inputKeyUp}\n            >\n              {optionshtml}\n            </select>\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"inputdatalist\") {\n      let optionshtml = [];\n      for (let i = 0; i < htmlFormItem.options.length; i++) {\n        optionshtml.push(<option>{htmlFormItem.options[i].label}</option>);\n      }\n      htmlFormArray.push(\n        <div\n          className=\"org-datainputsection \"\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.hidelabel === true ? (\n            \"\"\n          ) : (\n            <div className=\"org-datainputlabel\">\n              {htmlFormItem.required === \"true\" ? (\n                <span className=\"org-redc\">*</span>\n              ) : (\n                \"\"\n              )}\n              {htmlFormItem.label}\n            </div>\n          )}\n          {htmlFormItem.readonly === \"true\" ? (\n            htmlFormItem.defaultvalue\n          ) : htmlFormItem.required === \"true\" ? (\n            <>\n              <input\n                className=\"org-datainput htmlforminputitem\"\n                placeholder={htmlFormItem.placeholder}\n                list=\"datalistid\"\n                data-name={htmlFormItem.name}\n                data-label={htmlFormItem.label}\n                data-type={htmlFormItem.type}\n                data-clientstatename={htmlFormItem.clientstatename}\n                data-clientstatetype={htmlFormItem.clientstatetype}\n                onChange={this.inputchngHandler}\n                onKeyUp={this.props.inputKeyUp}\n                required\n              ></input>\n              <datalist id=\"datalistid\"> {optionshtml}</datalist>\n            </>\n          ) : (\n            <>\n              <input\n                className=\"org-datainput htmlforminputitem\"\n                placeholder={htmlFormItem.placeholder}\n                list=\"datalistid\"\n                data-name={htmlFormItem.name}\n                data-label={htmlFormItem.label}\n                data-type={htmlFormItem.type}\n                data-clientstatename={htmlFormItem.clientstatename}\n                data-clientstatetype={htmlFormItem.clientstatetype}\n                onChange={this.inputchngHandler}\n                onKeyUp={this.props.inputKeyUp}\n              ></input>\n              <datalist id=\"datalistid\"> {optionshtml}</datalist>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"button\") {\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          <button\n            style={{\n              width: \"100%\",\n              textAlign: \"center\",\n              backgroundColor: \"#0070D2\",\n              color: \"white\",\n            }}\n            data-name={htmlFormItem.name}\n            data-label={htmlFormItem.label}\n            data-type={htmlFormItem.type}\n            onClick={this.btnclkHandler}\n            className=\"org-datainput\"\n          >\n            {htmlFormItem.label}\n          </button>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"outputhtml\") {\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.label}\n          <div className=\"org-datainputlabel\">{htmlFormItem.defaultvalue}</div>\n        </div>\n      );\n    }\n\n    if (htmlFormItem.type === \"outputurl\") {\n      htmlFormArray.push(\n        <div\n          style={{\n            width: htmlFormItem.width,\n            height: htmlFormItem.height,\n            display: \"inline-block\",\n          }}\n        >\n          {htmlFormItem.label}\n          <div className=\"org-datainputlabel\">\n            <a href={htmlFormItem.defaultvalue} target=\"_blank\">\n              {htmlFormItem.defaultvalue}\n            </a>\n          </div>\n        </div>\n      );\n    }\n    return htmlFormArray;\n  }\n\n  render() {\n    console.log(this.props);\n\n    let htmlContent = [];\n    for (let i = 0; i < this.props.dataprops.length; i++) {\n      htmlContent.push(this.getHtmlFormItem(this.props.dataprops[i], i));\n    }\n\n    return (\n      <div\n        style={{\n          ...this.props.style,\n          color: \"black\",\n          // margin: \"auto\",\n          padding: \"10px\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          alignItems: \"flex-start\",\n          backgroundColor:\n            this.props.bgcolor === \"\" ? \"#F2F2F2\" : this.props.bgcolor,\n          width: \"100%\",\n        }}\n      >\n        {htmlContent}\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}