{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nvar _classCallCheck = require(\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar EmailAddress = require('./email-address');\n\nvar Personalization = require('./personalization');\n\nvar toCamelCase = require('../helpers/to-camel-case');\n\nvar toSnakeCase = require('../helpers/to-snake-case');\n\nvar deepClone = require('../helpers/deep-clone');\n\nvar arrayToJSON = require('../helpers/array-to-json');\n\nvar _require = require('../constants'),\n    DYNAMIC_TEMPLATE_CHAR_WARNING = _require.DYNAMIC_TEMPLATE_CHAR_WARNING;\n\nvar _require2 = require('../helpers/validate-settings'),\n    validateMailSettings = _require2.validateMailSettings,\n    validateTrackingSettings = _require2.validateTrackingSettings;\n/**\n * Mail class\n */\n\n\nvar Mail = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   */\n  function Mail(data) {\n    _classCallCheck(this, Mail);\n\n    //Initialize array and object properties\n    this.isDynamic = false;\n    this.hideWarnings = false;\n    this.personalizations = [];\n    this.attachments = [];\n    this.content = [];\n    this.categories = [];\n    this.headers = {};\n    this.sections = {};\n    this.customArgs = {};\n    this.trackingSettings = {};\n    this.mailSettings = {};\n    this.asm = {}; //Helper properties\n\n    this.substitutions = null;\n    this.substitutionWrappers = null;\n    this.dynamicTemplateData = null; //Process data if given\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * Build from data\n   */\n\n\n  _createClass(Mail, [{\n    key: \"fromData\",\n    value: function fromData(data) {\n      var _this = this;\n\n      //Expecting object\n      if (typeof data !== 'object') {\n        throw new Error('Expecting object for Mail data');\n      } //Convert to camel case to make it workable, making a copy to prevent\n      //changes to the original objects\n\n\n      data = deepClone(data);\n      data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']); //Extract properties from data\n\n      var _data = data,\n          to = _data.to,\n          from = _data.from,\n          replyTo = _data.replyTo,\n          cc = _data.cc,\n          bcc = _data.bcc,\n          sendAt = _data.sendAt,\n          subject = _data.subject,\n          text = _data.text,\n          html = _data.html,\n          content = _data.content,\n          templateId = _data.templateId,\n          personalizations = _data.personalizations,\n          attachments = _data.attachments,\n          ipPoolName = _data.ipPoolName,\n          batchId = _data.batchId,\n          sections = _data.sections,\n          headers = _data.headers,\n          categories = _data.categories,\n          category = _data.category,\n          customArgs = _data.customArgs,\n          asm = _data.asm,\n          mailSettings = _data.mailSettings,\n          trackingSettings = _data.trackingSettings,\n          substitutions = _data.substitutions,\n          substitutionWrappers = _data.substitutionWrappers,\n          dynamicTemplateData = _data.dynamicTemplateData,\n          isMultiple = _data.isMultiple,\n          hideWarnings = _data.hideWarnings; //Set data\n\n      this.setFrom(from);\n      this.setReplyTo(replyTo);\n      this.setSubject(subject);\n      this.setSendAt(sendAt);\n      this.setTemplateId(templateId);\n      this.setBatchId(batchId);\n      this.setIpPoolName(ipPoolName);\n      this.setAttachments(attachments);\n      this.setContent(content);\n      this.setSections(sections);\n      this.setHeaders(headers);\n      this.setCategories(category);\n      this.setCategories(categories);\n      this.setCustomArgs(customArgs);\n      this.setAsm(asm);\n      this.setMailSettings(mailSettings);\n      this.setTrackingSettings(trackingSettings);\n      this.setHideWarnings(hideWarnings);\n\n      if (this.isDynamic) {\n        this.setDynamicTemplateData(dynamicTemplateData);\n      } else {\n        this.setSubstitutions(substitutions);\n        this.setSubstitutionWrappers(substitutionWrappers);\n      } //Add contents from text/html properties\n\n\n      this.addTextContent(text);\n      this.addHtmlContent(html); //Using \"to\" property for personalizations\n\n      if (personalizations) {\n        this.setPersonalizations(personalizations);\n      } else if (isMultiple && Array.isArray(to)) {\n        //Multiple individual emails\n        to.forEach(function (to) {\n          return _this.addTo(to, cc, bcc);\n        });\n      } else {\n        //Single email (possibly with multiple recipients in the to field)\n        this.addTo(to, cc, bcc);\n      }\n    }\n    /**\n     * Set from email\n     */\n\n  }, {\n    key: \"setFrom\",\n    value: function setFrom(from) {\n      if (this._checkProperty('from', from, [this._checkUndefined])) {\n        if (typeof from !== 'string' && typeof from.email !== 'string') {\n          throw new Error('String or address object expected for `from`');\n        }\n\n        this.from = EmailAddress.create(from);\n      }\n    }\n    /**\n     * Set reply to\n     */\n\n  }, {\n    key: \"setReplyTo\",\n    value: function setReplyTo(replyTo) {\n      if (this._checkProperty('replyTo', replyTo, [this._checkUndefined])) {\n        if (typeof replyTo !== 'string' && typeof replyTo.email !== 'string') {\n          throw new Error('String or address object expected for `replyTo`');\n        }\n\n        this.replyTo = EmailAddress.create(replyTo);\n      }\n    }\n    /**\n     * Set subject\n     */\n\n  }, {\n    key: \"setSubject\",\n    value: function setSubject(subject) {\n      this._setProperty('subject', subject, 'string');\n    }\n    /**\n     * Set send at\n     */\n\n  }, {\n    key: \"setSendAt\",\n    value: function setSendAt(sendAt) {\n      if (this._checkProperty('sendAt', sendAt, [this._checkUndefined, this._createCheckThatThrows(Number.isInteger, 'Integer expected for `sendAt`')])) {\n        this.sendAt = sendAt;\n      }\n    }\n    /**\n     * Set template ID, also checks if the template is dynamic or legacy\n     */\n\n  }, {\n    key: \"setTemplateId\",\n    value: function setTemplateId(templateId) {\n      if (this._setProperty('templateId', templateId, 'string')) {\n        if (templateId.indexOf('d-') === 0) {\n          this.isDynamic = true;\n        }\n      }\n    }\n    /**\n     * Set batch ID\n     */\n\n  }, {\n    key: \"setBatchId\",\n    value: function setBatchId(batchId) {\n      this._setProperty('batchId', batchId, 'string');\n    }\n    /**\n     * Set IP pool name\n     */\n\n  }, {\n    key: \"setIpPoolName\",\n    value: function setIpPoolName(ipPoolName) {\n      this._setProperty('ipPoolName', ipPoolName, 'string');\n    }\n    /**\n     * Set ASM\n     */\n\n  }, {\n    key: \"setAsm\",\n    value: function setAsm(asm) {\n      if (this._checkProperty('asm', asm, [this._checkUndefined, this._createTypeCheck('object')])) {\n        if (typeof asm.groupId !== 'number') {\n          throw new Error('Expected `asm` to include an integer in its `groupId` field');\n        }\n\n        if (asm.groupsToDisplay && (!Array.isArray(asm.groupsToDisplay) || !asm.groupsToDisplay.every(function (group) {\n          return typeof group === 'number';\n        }))) {\n          throw new Error('Array of integers expected for `asm.groupsToDisplay`');\n        }\n\n        this.asm = asm;\n      }\n    }\n    /**\n     * Set personalizations\n     */\n\n  }, {\n    key: \"setPersonalizations\",\n    value: function setPersonalizations(personalizations) {\n      var _this2 = this;\n\n      if (!this._doArrayCheck('personalizations', personalizations)) {\n        return;\n      }\n\n      if (!personalizations.every(function (personalization) {\n        return typeof personalization === 'object';\n      })) {\n        throw new Error('Array of objects expected for `personalizations`');\n      } //Clear and use add helper to add one by one\n\n\n      this.personalizations = [];\n      personalizations.forEach(function (personalization) {\n        return _this2.addPersonalization(personalization);\n      });\n    }\n    /**\n     * Add personalization\n     */\n\n  }, {\n    key: \"addPersonalization\",\n    value: function addPersonalization(personalization) {\n      //We should either send substitutions or dynamicTemplateData\n      //depending on the templateId\n      if (this.isDynamic && personalization.substitutions) {\n        delete personalization.substitutions;\n      } else if (!this.isDynamic && personalization.dynamicTemplateData) {\n        delete personalization.dynamicTemplateData;\n      } //Convert to class if needed\n\n\n      if (!(personalization instanceof Personalization)) {\n        personalization = new Personalization(personalization);\n      } //If this is dynamic, set dynamicTemplateData, or set substitutions\n\n\n      if (this.isDynamic) {\n        this.applyDynamicTemplateData(personalization);\n      } else {\n        this.applySubstitutions(personalization);\n      } //Push personalization to array\n\n\n      this.personalizations.push(personalization);\n    }\n    /**\n     * Convenience method for quickly creating personalizations\n     */\n\n  }, {\n    key: \"addTo\",\n    value: function addTo(to, cc, bcc) {\n      if (typeof to === 'undefined' && typeof cc === 'undefined' && typeof bcc === 'undefined') {\n        throw new Error('Provide at least one of to, cc or bcc');\n      }\n\n      this.addPersonalization(new Personalization({\n        to: to,\n        cc: cc,\n        bcc: bcc\n      }));\n    }\n    /**\n     * Set substitutions\n     */\n\n  }, {\n    key: \"setSubstitutions\",\n    value: function setSubstitutions(substitutions) {\n      this._setProperty('substitutions', substitutions, 'object');\n    }\n    /**\n     * Set substitution wrappers\n     */\n\n  }, {\n    key: \"setSubstitutionWrappers\",\n    value: function setSubstitutionWrappers(substitutionWrappers) {\n      var lengthCheck = function lengthCheck(propertyName, value) {\n        if (!Array.isArray(value) || value.length !== 2) {\n          throw new Error('Array expected with two elements for `' + propertyName + '`');\n        }\n      };\n\n      if (this._checkProperty('substitutionWrappers', substitutionWrappers, [this._checkUndefined, lengthCheck])) {\n        this.substitutionWrappers = substitutionWrappers;\n      }\n    }\n    /**\n     * Helper which applies globally set substitutions to personalizations\n     */\n\n  }, {\n    key: \"applySubstitutions\",\n    value: function applySubstitutions(personalization) {\n      if (personalization instanceof Personalization) {\n        personalization.reverseMergeSubstitutions(this.substitutions);\n        personalization.setSubstitutionWrappers(this.substitutionWrappers);\n      }\n    }\n    /**\n     * Helper which applies globally set dynamic_template_data to personalizations\n     */\n\n  }, {\n    key: \"applyDynamicTemplateData\",\n    value: function applyDynamicTemplateData(personalization) {\n      if (personalization instanceof Personalization) {\n        personalization.deepMergeDynamicTemplateData(this.dynamicTemplateData);\n      }\n    }\n    /**\n     * Set dynamicTemplateData\n     */\n\n  }, {\n    key: \"setDynamicTemplateData\",\n    value: function setDynamicTemplateData(dynamicTemplateData) {\n      if (typeof dynamicTemplateData === 'undefined') {\n        return;\n      }\n\n      if (typeof dynamicTemplateData !== 'object') {\n        throw new Error('Object expected for `dynamicTemplateData`');\n      } // Check dynamic template for non-escaped characters and warn if found\n\n\n      if (!this.hideWarnings) {\n        Object.values(dynamicTemplateData).forEach(function (value) {\n          if (/['\"&]/.test(value)) {\n            console.warn(DYNAMIC_TEMPLATE_CHAR_WARNING);\n          }\n        });\n      }\n\n      this.dynamicTemplateData = dynamicTemplateData;\n    }\n    /**\n     * Set content\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      if (this._doArrayCheck('content', content)) {\n        if (!content.every(function (contentField) {\n          return typeof contentField === 'object';\n        })) {\n          throw new Error('Expected each entry in `content` to be an object');\n        }\n\n        if (!content.every(function (contentField) {\n          return typeof contentField.type === 'string';\n        })) {\n          throw new Error('Expected each `content` entry to contain a `type` string');\n        }\n\n        if (!content.every(function (contentField) {\n          return typeof contentField.value === 'string';\n        })) {\n          throw new Error('Expected each `content` entry to contain a `value` string');\n        }\n\n        this.content = content;\n      }\n    }\n    /**\n     * Add content\n     */\n\n  }, {\n    key: \"addContent\",\n    value: function addContent(content) {\n      if (this._checkProperty('content', content, [this._createTypeCheck('object')])) {\n        this.content.push(content);\n      }\n    }\n    /**\n     * Add text content\n     */\n\n  }, {\n    key: \"addTextContent\",\n    value: function addTextContent(text) {\n      if (this._checkProperty('text', text, [this._checkUndefined, this._createTypeCheck('string')])) {\n        this.addContent({\n          value: text,\n          type: 'text/plain'\n        });\n      }\n    }\n    /**\n     * Add HTML content\n     */\n\n  }, {\n    key: \"addHtmlContent\",\n    value: function addHtmlContent(html) {\n      if (this._checkProperty('html', html, [this._checkUndefined, this._createTypeCheck('string')])) {\n        this.addContent({\n          value: html,\n          type: 'text/html'\n        });\n      }\n    }\n    /**\n     * Set attachments\n     */\n\n  }, {\n    key: \"setAttachments\",\n    value: function setAttachments(attachments) {\n      if (this._doArrayCheck('attachments', attachments)) {\n        if (!attachments.every(function (attachment) {\n          return typeof attachment.content === 'string';\n        })) {\n          throw new Error('Expected each attachment to contain a `content` string');\n        }\n\n        if (!attachments.every(function (attachment) {\n          return typeof attachment.filename === 'string';\n        })) {\n          throw new Error('Expected each attachment to contain a `filename` string');\n        }\n\n        if (!attachments.every(function (attachment) {\n          return !attachment.type || typeof attachment.type === 'string';\n        })) {\n          throw new Error('Expected the attachment\\'s `type` field to be a string');\n        }\n\n        if (!attachments.every(function (attachment) {\n          return !attachment.disposition || typeof attachment.disposition === 'string';\n        })) {\n          throw new Error('Expected the attachment\\'s `disposition` field to be a string');\n        }\n\n        this.attachments = attachments;\n      }\n    }\n    /**\n     * Add attachment\n     */\n\n  }, {\n    key: \"addAttachment\",\n    value: function addAttachment(attachment) {\n      if (this._checkProperty('attachment', attachment, [this._checkUndefined, this._createTypeCheck('object')])) {\n        this.attachments.push(attachment);\n      }\n    }\n    /**\n     * Set categories\n     */\n\n  }, {\n    key: \"setCategories\",\n    value: function setCategories(categories) {\n      var allElementsAreStrings = function allElementsAreStrings(propertyName, value) {\n        if (!Array.isArray(value) || !value.every(function (item) {\n          return typeof item === 'string';\n        })) {\n          throw new Error('Array of strings expected for `' + propertyName + '`');\n        }\n      };\n\n      if (typeof categories === 'string') {\n        categories = [categories];\n      }\n\n      if (this._checkProperty('categories', categories, [this._checkUndefined, allElementsAreStrings])) {\n        this.categories = categories;\n      }\n    }\n    /**\n     * Add category\n     */\n\n  }, {\n    key: \"addCategory\",\n    value: function addCategory(category) {\n      if (this._checkProperty('category', category, [this._createTypeCheck('string')])) {\n        this.categories.push(category);\n      }\n    }\n    /**\n     * Set headers\n     */\n\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(headers) {\n      this._setProperty('headers', headers, 'object');\n    }\n    /**\n     * Add a header\n     */\n\n  }, {\n    key: \"addHeader\",\n    value: function addHeader(key, value) {\n      if (this._checkProperty('key', key, [this._createTypeCheck('string')]) && this._checkProperty('value', value, [this._createTypeCheck('string')])) {\n        this.headers[key] = value;\n      }\n    }\n    /**\n     * Set sections\n     */\n\n  }, {\n    key: \"setSections\",\n    value: function setSections(sections) {\n      this._setProperty('sections', sections, 'object');\n    }\n    /**\n     * Set custom args\n     */\n\n  }, {\n    key: \"setCustomArgs\",\n    value: function setCustomArgs(customArgs) {\n      this._setProperty('customArgs', customArgs, 'object');\n    }\n    /**\n     * Set tracking settings\n     */\n\n  }, {\n    key: \"setTrackingSettings\",\n    value: function setTrackingSettings(settings) {\n      if (typeof settings === 'undefined') {\n        return;\n      }\n\n      validateTrackingSettings(settings);\n      this.trackingSettings = settings;\n    }\n    /**\n     * Set mail settings\n     */\n\n  }, {\n    key: \"setMailSettings\",\n    value: function setMailSettings(settings) {\n      if (typeof settings === 'undefined') {\n        return;\n      }\n\n      validateMailSettings(settings);\n      this.mailSettings = settings;\n    }\n    /**\n     * Set hide warnings\n     */\n\n  }, {\n    key: \"setHideWarnings\",\n    value: function setHideWarnings(hide) {\n      if (typeof hide === 'undefined') {\n        return;\n      }\n\n      if (typeof hide !== 'boolean') {\n        throw new Error('Boolean expected for `hideWarnings`');\n      }\n\n      this.hideWarnings = hide;\n    }\n    /**\n     * To JSON\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      //Extract properties from self\n      var from = this.from,\n          replyTo = this.replyTo,\n          sendAt = this.sendAt,\n          subject = this.subject,\n          content = this.content,\n          templateId = this.templateId,\n          personalizations = this.personalizations,\n          attachments = this.attachments,\n          ipPoolName = this.ipPoolName,\n          batchId = this.batchId,\n          asm = this.asm,\n          sections = this.sections,\n          headers = this.headers,\n          categories = this.categories,\n          customArgs = this.customArgs,\n          mailSettings = this.mailSettings,\n          trackingSettings = this.trackingSettings; //Initialize with mandatory values\n\n      var json = {\n        from: from,\n        subject: subject,\n        personalizations: arrayToJSON(personalizations)\n      }; //Array properties\n\n      if (Array.isArray(attachments) && attachments.length > 0) {\n        json.attachments = arrayToJSON(attachments);\n      }\n\n      if (Array.isArray(categories) && categories.length > 0) {\n        json.categories = categories.filter(function (cat) {\n          return cat !== '';\n        });\n      }\n\n      if (Array.isArray(content) && content.length > 0) {\n        json.content = arrayToJSON(content);\n      } //Object properties\n\n\n      if (Object.keys(headers).length > 0) {\n        json.headers = headers;\n      }\n\n      if (Object.keys(mailSettings).length > 0) {\n        json.mailSettings = mailSettings;\n      }\n\n      if (Object.keys(trackingSettings).length > 0) {\n        json.trackingSettings = trackingSettings;\n      }\n\n      if (Object.keys(customArgs).length > 0) {\n        json.customArgs = customArgs;\n      }\n\n      if (Object.keys(sections).length > 0) {\n        json.sections = sections;\n      }\n\n      if (Object.keys(asm).length > 0) {\n        json.asm = asm;\n      } //Simple properties\n\n\n      if (typeof replyTo !== 'undefined') {\n        json.replyTo = replyTo;\n      }\n\n      if (typeof sendAt !== 'undefined') {\n        json.sendAt = sendAt;\n      }\n\n      if (typeof batchId !== 'undefined') {\n        json.batchId = batchId;\n      }\n\n      if (typeof templateId !== 'undefined') {\n        json.templateId = templateId;\n      }\n\n      if (typeof ipPoolName !== 'undefined') {\n        json.ipPoolName = ipPoolName;\n      } //Return as snake cased object\n\n\n      return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']);\n    }\n    /**************************************************************************\n     * Static helpers\n     ***/\n\n    /**\n     * Create a Mail instance from given data\n     */\n\n  }, {\n    key: \"_checkProperty\",\n    value:\n    /**************************************************************************\n     * helpers for property-setting checks\n     ***/\n\n    /**\n     * Perform a set of checks on the new property value. Returns true if all\n     * checks complete successfully without throwing errors or returning true.\n     */\n    function _checkProperty(propertyName, value, checks) {\n      return !checks.some(function (e) {\n        return e(propertyName, value);\n      });\n    }\n    /**\n     * Set a property with normal undefined and type-checks\n     */\n\n  }, {\n    key: \"_setProperty\",\n    value: function _setProperty(propertyName, value, propertyType) {\n      var propertyChecksPassed = this._checkProperty(propertyName, value, [this._checkUndefined, this._createTypeCheck(propertyType)]);\n\n      if (propertyChecksPassed) {\n        this[propertyName] = value;\n      }\n\n      return propertyChecksPassed;\n    }\n    /**\n     * Fail if the value is undefined.\n     */\n\n  }, {\n    key: \"_checkUndefined\",\n    value: function _checkUndefined(propertyName, value) {\n      return typeof value === 'undefined';\n    }\n    /**\n     * Create and return a function that checks for a given type\n     */\n\n  }, {\n    key: \"_createTypeCheck\",\n    value: function _createTypeCheck(propertyType) {\n      return function (propertyName, value) {\n        if (typeof value !== propertyType) {\n          throw new Error(propertyType + ' expected for `' + propertyName + '`');\n        }\n      };\n    }\n    /**\n     * Create a check out of a callback. If the callback\n     * returns false, the check will throw an error.\n     */\n\n  }, {\n    key: \"_createCheckThatThrows\",\n    value: function _createCheckThatThrows(check, errorString) {\n      return function (propertyName, value) {\n        if (!check(value)) {\n          throw new Error(errorString);\n        }\n      };\n    }\n    /**\n     * Set an array property after checking that the new value is an\n     * array.\n     */\n\n  }, {\n    key: \"_setArrayProperty\",\n    value: function _setArrayProperty(propertyName, value) {\n      if (this._doArrayCheck(propertyName, value)) {\n        this[propertyName] = value;\n      }\n    }\n    /**\n     * Check that a value isn't undefined and is an array.\n     */\n\n  }, {\n    key: \"_doArrayCheck\",\n    value: function _doArrayCheck(propertyName, value) {\n      return this._checkProperty(propertyName, value, [this._checkUndefined, this._createCheckThatThrows(Array.isArray, 'Array expected for`' + propertyName + '`')]);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(data) {\n      var _this3 = this;\n\n      //Array?\n      if (Array.isArray(data)) {\n        return data.filter(function (item) {\n          return !!item;\n        }).map(function (item) {\n          return _this3.create(item);\n        });\n      } //Already instance of Mail class?\n\n\n      if (data instanceof Mail) {\n        return data;\n      } //Create instance\n\n\n      return new Mail(data);\n    }\n  }]);\n\n  return Mail;\n}(); //Export class\n\n\nmodule.exports = Mail;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/@sendgrid/helpers/classes/mail.js"],"names":["EmailAddress","require","Personalization","toCamelCase","toSnakeCase","deepClone","arrayToJSON","DYNAMIC_TEMPLATE_CHAR_WARNING","validateMailSettings","validateTrackingSettings","Mail","data","isDynamic","hideWarnings","personalizations","attachments","content","categories","headers","sections","customArgs","trackingSettings","mailSettings","asm","substitutions","substitutionWrappers","dynamicTemplateData","fromData","Error","to","from","replyTo","cc","bcc","sendAt","subject","text","html","templateId","ipPoolName","batchId","category","isMultiple","setFrom","setReplyTo","setSubject","setSendAt","setTemplateId","setBatchId","setIpPoolName","setAttachments","setContent","setSections","setHeaders","setCategories","setCustomArgs","setAsm","setMailSettings","setTrackingSettings","setHideWarnings","setDynamicTemplateData","setSubstitutions","setSubstitutionWrappers","addTextContent","addHtmlContent","setPersonalizations","Array","isArray","forEach","addTo","_checkProperty","_checkUndefined","email","create","_setProperty","_createCheckThatThrows","Number","isInteger","indexOf","_createTypeCheck","groupId","groupsToDisplay","every","group","_doArrayCheck","personalization","addPersonalization","applyDynamicTemplateData","applySubstitutions","push","lengthCheck","propertyName","value","length","reverseMergeSubstitutions","deepMergeDynamicTemplateData","Object","values","test","console","warn","contentField","type","addContent","attachment","filename","disposition","allElementsAreStrings","item","key","settings","hide","json","filter","cat","keys","checks","some","e","propertyType","propertyChecksPassed","check","errorString","map","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;;;;;;AACA,IAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAMG,WAAW,GAAGH,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAMI,SAAS,GAAGJ,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,0BAAD,CAA3B;;AACA,eAA0CA,OAAO,CAAC,cAAD,CAAjD;AAAA,IAAQM,6BAAR,YAAQA,6BAAR;;AACA,gBAAyDN,OAAO,CAAC,8BAAD,CAAhE;AAAA,IAAOO,oBAAP,aAAOA,oBAAP;AAAA,IAA6BC,wBAA7B,aAA6BA,wBAA7B;AAEA;AACA;AACA;;;IACMC,I;AAEJ;AACF;AACA;AACE,gBAAYC,IAAZ,EAAkB;AAAA;;AAEhB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,GAAL,GAAW,EAAX,CAdgB,CAgBhB;;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,oBAAL,GAA4B,IAA5B;AACA,SAAKC,mBAAL,GAA2B,IAA3B,CAnBgB,CAqBhB;;AACA,QAAIf,IAAJ,EAAU;AACR,WAAKgB,QAAL,CAAchB,IAAd;AACD;AACF;AAED;AACF;AACA;;;;;WACE,kBAASA,IAAT,EAAe;AAAA;;AAEb;AACA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAM,IAAIiB,KAAJ,CAAU,gCAAV,CAAN;AACD,OALY,CAOb;AACA;;;AACAjB,MAAAA,IAAI,GAAGN,SAAS,CAACM,IAAD,CAAhB;AACAA,MAAAA,IAAI,GAAGR,WAAW,CAACQ,IAAD,EAAO,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,YAAzC,EAAuD,SAAvD,EAAkE,UAAlE,CAAP,CAAlB,CAVa,CAYb;;AACA,kBAMIA,IANJ;AAAA,UACEkB,EADF,SACEA,EADF;AAAA,UACMC,IADN,SACMA,IADN;AAAA,UACYC,OADZ,SACYA,OADZ;AAAA,UACqBC,EADrB,SACqBA,EADrB;AAAA,UACyBC,GADzB,SACyBA,GADzB;AAAA,UAC8BC,MAD9B,SAC8BA,MAD9B;AAAA,UACsCC,OADtC,SACsCA,OADtC;AAAA,UAC+CC,IAD/C,SAC+CA,IAD/C;AAAA,UACqDC,IADrD,SACqDA,IADrD;AAAA,UAC2DrB,OAD3D,SAC2DA,OAD3D;AAAA,UAEEsB,UAFF,SAEEA,UAFF;AAAA,UAEcxB,gBAFd,SAEcA,gBAFd;AAAA,UAEgCC,WAFhC,SAEgCA,WAFhC;AAAA,UAE6CwB,UAF7C,SAE6CA,UAF7C;AAAA,UAEyDC,OAFzD,SAEyDA,OAFzD;AAAA,UAGErB,QAHF,SAGEA,QAHF;AAAA,UAGYD,OAHZ,SAGYA,OAHZ;AAAA,UAGqBD,UAHrB,SAGqBA,UAHrB;AAAA,UAGiCwB,QAHjC,SAGiCA,QAHjC;AAAA,UAG2CrB,UAH3C,SAG2CA,UAH3C;AAAA,UAGuDG,GAHvD,SAGuDA,GAHvD;AAAA,UAG4DD,YAH5D,SAG4DA,YAH5D;AAAA,UAIED,gBAJF,SAIEA,gBAJF;AAAA,UAIoBG,aAJpB,SAIoBA,aAJpB;AAAA,UAImCC,oBAJnC,SAImCA,oBAJnC;AAAA,UAIyDC,mBAJzD,SAIyDA,mBAJzD;AAAA,UAI8EgB,UAJ9E,SAI8EA,UAJ9E;AAAA,UAKE7B,YALF,SAKEA,YALF,CAba,CAqBb;;AACA,WAAK8B,OAAL,CAAab,IAAb;AACA,WAAKc,UAAL,CAAgBb,OAAhB;AACA,WAAKc,UAAL,CAAgBV,OAAhB;AACA,WAAKW,SAAL,CAAeZ,MAAf;AACA,WAAKa,aAAL,CAAmBT,UAAnB;AACA,WAAKU,UAAL,CAAgBR,OAAhB;AACA,WAAKS,aAAL,CAAmBV,UAAnB;AACA,WAAKW,cAAL,CAAoBnC,WAApB;AACA,WAAKoC,UAAL,CAAgBnC,OAAhB;AACA,WAAKoC,WAAL,CAAiBjC,QAAjB;AACA,WAAKkC,UAAL,CAAgBnC,OAAhB;AACA,WAAKoC,aAAL,CAAmBb,QAAnB;AACA,WAAKa,aAAL,CAAmBrC,UAAnB;AACA,WAAKsC,aAAL,CAAmBnC,UAAnB;AACA,WAAKoC,MAAL,CAAYjC,GAAZ;AACA,WAAKkC,eAAL,CAAqBnC,YAArB;AACA,WAAKoC,mBAAL,CAAyBrC,gBAAzB;AACA,WAAKsC,eAAL,CAAqB9C,YAArB;;AAEA,UAAI,KAAKD,SAAT,EAAoB;AAClB,aAAKgD,sBAAL,CAA4BlC,mBAA5B;AACD,OAFD,MAEO;AACL,aAAKmC,gBAAL,CAAsBrC,aAAtB;AACA,aAAKsC,uBAAL,CAA6BrC,oBAA7B;AACD,OA9CY,CAgDb;;;AACA,WAAKsC,cAAL,CAAoB3B,IAApB;AACA,WAAK4B,cAAL,CAAoB3B,IAApB,EAlDa,CAoDb;;AACA,UAAIvB,gBAAJ,EAAsB;AACpB,aAAKmD,mBAAL,CAAyBnD,gBAAzB;AACD,OAFD,MAEO,IAAI4B,UAAU,IAAIwB,KAAK,CAACC,OAAN,CAActC,EAAd,CAAlB,EAAqC;AAC1C;AACAA,QAAAA,EAAE,CAACuC,OAAH,CAAW,UAAAvC,EAAE;AAAA,iBAAI,KAAI,CAACwC,KAAL,CAAWxC,EAAX,EAAeG,EAAf,EAAmBC,GAAnB,CAAJ;AAAA,SAAb;AACD,OAHM,MAGA;AACL;AACA,aAAKoC,KAAL,CAAWxC,EAAX,EAAeG,EAAf,EAAmBC,GAAnB;AACD;AACF;AAED;AACF;AACA;;;;WACE,iBAAQH,IAAR,EAAc;AACZ,UAAI,KAAKwC,cAAL,CAAoB,MAApB,EAA4BxC,IAA5B,EAAkC,CAAC,KAAKyC,eAAN,CAAlC,CAAJ,EAA+D;AAC7D,YAAI,OAAOzC,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAI,CAAC0C,KAAZ,KAAsB,QAAtD,EAAgE;AAC9D,gBAAM,IAAI5C,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,aAAKE,IAAL,GAAY9B,YAAY,CAACyE,MAAb,CAAoB3C,IAApB,CAAZ;AACD;AACF;AAED;AACF;AACA;;;;WACE,oBAAWC,OAAX,EAAoB;AAClB,UAAI,KAAKuC,cAAL,CAAoB,SAApB,EAA+BvC,OAA/B,EAAwC,CAAC,KAAKwC,eAAN,CAAxC,CAAJ,EAAqE;AACnE,YAAI,OAAOxC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACyC,KAAf,KAAyB,QAA5D,EAAsE;AACpE,gBAAM,IAAI5C,KAAJ,CAAU,iDAAV,CAAN;AACD;;AACD,aAAKG,OAAL,GAAe/B,YAAY,CAACyE,MAAb,CAAoB1C,OAApB,CAAf;AACD;AACF;AAED;AACF;AACA;;;;WACE,oBAAWI,OAAX,EAAoB;AAClB,WAAKuC,YAAL,CAAkB,SAAlB,EAA6BvC,OAA7B,EAAsC,QAAtC;AACD;AAED;AACF;AACA;;;;WACE,mBAAUD,MAAV,EAAkB;AAChB,UAAI,KAAKoC,cAAL,CAAoB,QAApB,EAA8BpC,MAA9B,EAAsC,CAAC,KAAKqC,eAAN,EAAuB,KAAKI,sBAAL,CAA4BC,MAAM,CAACC,SAAnC,EAA8C,+BAA9C,CAAvB,CAAtC,CAAJ,EAAmJ;AACjJ,aAAK3C,MAAL,GAAcA,MAAd;AACD;AACF;AAED;AACF;AACA;;;;WACE,uBAAcI,UAAd,EAA0B;AACxB,UAAI,KAAKoC,YAAL,CAAkB,YAAlB,EAAgCpC,UAAhC,EAA4C,QAA5C,CAAJ,EAA2D;AACzD,YAAIA,UAAU,CAACwC,OAAX,CAAmB,IAAnB,MAA6B,CAAjC,EAAoC;AAClC,eAAKlE,SAAL,GAAiB,IAAjB;AACD;AACF;AACF;AAED;AACF;AACA;;;;WACE,oBAAW4B,OAAX,EAAoB;AAClB,WAAKkC,YAAL,CAAkB,SAAlB,EAA6BlC,OAA7B,EAAsC,QAAtC;AACD;AAED;AACF;AACA;;;;WACE,uBAAcD,UAAd,EAA0B;AACxB,WAAKmC,YAAL,CAAkB,YAAlB,EAAgCnC,UAAhC,EAA4C,QAA5C;AACD;AAED;AACF;AACA;;;;WACE,gBAAOhB,GAAP,EAAY;AACV,UAAI,KAAK+C,cAAL,CAAoB,KAApB,EAA2B/C,GAA3B,EAAgC,CAAC,KAAKgD,eAAN,EAAuB,KAAKQ,gBAAL,CAAsB,QAAtB,CAAvB,CAAhC,CAAJ,EAA8F;AAC5F,YAAI,OAAOxD,GAAG,CAACyD,OAAX,KAAuB,QAA3B,EAAqC;AACnC,gBAAM,IAAIpD,KAAJ,CAAU,6DAAV,CAAN;AACD;;AACD,YAAIL,GAAG,CAAC0D,eAAJ,KACD,CAACf,KAAK,CAACC,OAAN,CAAc5C,GAAG,CAAC0D,eAAlB,CAAD,IAAuC,CAAC1D,GAAG,CAAC0D,eAAJ,CAAoBC,KAApB,CAA0B,UAAAC,KAAK;AAAA,iBAAI,OAAOA,KAAP,KAAiB,QAArB;AAAA,SAA/B,CADvC,CAAJ,EAC2G;AACzG,gBAAM,IAAIvD,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,aAAKL,GAAL,GAAWA,GAAX;AACD;AACF;AAED;AACF;AACA;;;;WACE,6BAAoBT,gBAApB,EAAsC;AAAA;;AACpC,UAAI,CAAC,KAAKsE,aAAL,CAAmB,kBAAnB,EAAuCtE,gBAAvC,CAAL,EAA+D;AAC7D;AACD;;AAED,UAAI,CAACA,gBAAgB,CAACoE,KAAjB,CAAuB,UAAAG,eAAe;AAAA,eAAI,OAAOA,eAAP,KAA2B,QAA/B;AAAA,OAAtC,CAAL,EAAqF;AACnF,cAAM,IAAIzD,KAAJ,CAAU,kDAAV,CAAN;AACD,OAPmC,CASpC;;;AACA,WAAKd,gBAAL,GAAwB,EAAxB;AACAA,MAAAA,gBAAgB,CACbsD,OADH,CACW,UAAAiB,eAAe;AAAA,eAAI,MAAI,CAACC,kBAAL,CAAwBD,eAAxB,CAAJ;AAAA,OAD1B;AAED;AAED;AACF;AACA;;;;WACE,4BAAmBA,eAAnB,EAAoC;AAClC;AACA;AACA,UAAI,KAAKzE,SAAL,IAAkByE,eAAe,CAAC7D,aAAtC,EAAqD;AACnD,eAAO6D,eAAe,CAAC7D,aAAvB;AACD,OAFD,MAEO,IAAI,CAAC,KAAKZ,SAAN,IAAmByE,eAAe,CAAC3D,mBAAvC,EAA4D;AACjE,eAAO2D,eAAe,CAAC3D,mBAAvB;AACD,OAPiC,CASlC;;;AACA,UAAI,EAAE2D,eAAe,YAAYnF,eAA7B,CAAJ,EAAmD;AACjDmF,QAAAA,eAAe,GAAG,IAAInF,eAAJ,CAAoBmF,eAApB,CAAlB;AACD,OAZiC,CAclC;;;AACA,UAAI,KAAKzE,SAAT,EAAoB;AAClB,aAAK2E,wBAAL,CAA8BF,eAA9B;AACD,OAFD,MAEO;AACL,aAAKG,kBAAL,CAAwBH,eAAxB;AACD,OAnBiC,CAqBlC;;;AACA,WAAKvE,gBAAL,CAAsB2E,IAAtB,CAA2BJ,eAA3B;AACD;AAED;AACF;AACA;;;;WACE,eAAMxD,EAAN,EAAUG,EAAV,EAAcC,GAAd,EAAmB;AACjB,UACE,OAAOJ,EAAP,KAAc,WAAd,IACA,OAAOG,EAAP,KAAc,WADd,IAEA,OAAOC,GAAP,KAAe,WAHjB,EAIE;AACA,cAAM,IAAIL,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,WAAK0D,kBAAL,CAAwB,IAAIpF,eAAJ,CAAoB;AAAC2B,QAAAA,EAAE,EAAFA,EAAD;AAAKG,QAAAA,EAAE,EAAFA,EAAL;AAASC,QAAAA,GAAG,EAAHA;AAAT,OAApB,CAAxB;AACD;AAED;AACF;AACA;;;;WACE,0BAAiBT,aAAjB,EAAgC;AAC9B,WAAKkD,YAAL,CAAkB,eAAlB,EAAmClD,aAAnC,EAAkD,QAAlD;AACD;AAED;AACF;AACA;;;;WACE,iCAAwBC,oBAAxB,EAA8C;AAC5C,UAAIiE,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAeC,KAAf,EAAyB;AACzC,YAAI,CAAC1B,KAAK,CAACC,OAAN,CAAcyB,KAAd,CAAD,IAAyBA,KAAK,CAACC,MAAN,KAAiB,CAA9C,EAAiD;AAC/C,gBAAM,IAAIjE,KAAJ,CAAU,2CAA2C+D,YAA3C,GAA0D,GAApE,CAAN;AACD;AACF,OAJD;;AAMA,UAAI,KAAKrB,cAAL,CAAoB,sBAApB,EAA4C7C,oBAA5C,EAAkE,CAAC,KAAK8C,eAAN,EAAuBmB,WAAvB,CAAlE,CAAJ,EAA4G;AAC1G,aAAKjE,oBAAL,GAA4BA,oBAA5B;AACD;AACF;AAED;AACF;AACA;;;;WACE,4BAAmB4D,eAAnB,EAAoC;AAClC,UAAIA,eAAe,YAAYnF,eAA/B,EAAgD;AAC9CmF,QAAAA,eAAe,CAACS,yBAAhB,CAA0C,KAAKtE,aAA/C;AACA6D,QAAAA,eAAe,CAACvB,uBAAhB,CAAwC,KAAKrC,oBAA7C;AACD;AACF;AAED;AACF;AACA;;;;WACE,kCAAyB4D,eAAzB,EAA0C;AACxC,UAAIA,eAAe,YAAYnF,eAA/B,EAAgD;AAC9CmF,QAAAA,eAAe,CAACU,4BAAhB,CAA6C,KAAKrE,mBAAlD;AACD;AACF;AAED;AACF;AACA;;;;WACE,gCAAuBA,mBAAvB,EAA4C;AAC1C,UAAI,OAAOA,mBAAP,KAA+B,WAAnC,EAAgD;AAC9C;AACD;;AACD,UAAI,OAAOA,mBAAP,KAA+B,QAAnC,EAA6C;AAC3C,cAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN;AACD,OANyC,CAQ1C;;;AACA,UAAI,CAAC,KAAKf,YAAV,EAAwB;AACtBmF,QAAAA,MAAM,CAACC,MAAP,CAAcvE,mBAAd,EAAmC0C,OAAnC,CAA2C,UAAAwB,KAAK,EAAI;AAClD,cAAI,QAAQM,IAAR,CAAaN,KAAb,CAAJ,EAAyB;AACvBO,YAAAA,OAAO,CAACC,IAAR,CAAa7F,6BAAb;AACD;AACF,SAJD;AAKD;;AAED,WAAKmB,mBAAL,GAA2BA,mBAA3B;AACD;AAED;AACF;AACA;;;;WACE,oBAAWV,OAAX,EAAoB;AAClB,UAAI,KAAKoE,aAAL,CAAmB,SAAnB,EAA8BpE,OAA9B,CAAJ,EAA4C;AAC1C,YAAI,CAACA,OAAO,CAACkE,KAAR,CAAc,UAAAmB,YAAY;AAAA,iBAAI,OAAOA,YAAP,KAAwB,QAA5B;AAAA,SAA1B,CAAL,EAAsE;AACpE,gBAAM,IAAIzE,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACD,YAAI,CAACZ,OAAO,CAACkE,KAAR,CAAc,UAAAmB,YAAY;AAAA,iBAAI,OAAOA,YAAY,CAACC,IAApB,KAA6B,QAAjC;AAAA,SAA1B,CAAL,EAA2E;AACzE,gBAAM,IAAI1E,KAAJ,CAAU,0DAAV,CAAN;AACD;;AACD,YAAI,CAACZ,OAAO,CAACkE,KAAR,CAAc,UAAAmB,YAAY;AAAA,iBAAI,OAAOA,YAAY,CAACT,KAApB,KAA8B,QAAlC;AAAA,SAA1B,CAAL,EAA4E;AAC1E,gBAAM,IAAIhE,KAAJ,CAAU,2DAAV,CAAN;AACD;;AACD,aAAKZ,OAAL,GAAeA,OAAf;AACD;AACF;AAED;AACF;AACA;;;;WACE,oBAAWA,OAAX,EAAoB;AAClB,UAAI,KAAKsD,cAAL,CAAoB,SAApB,EAA+BtD,OAA/B,EAAwC,CAAC,KAAK+D,gBAAL,CAAsB,QAAtB,CAAD,CAAxC,CAAJ,EAAgF;AAC9E,aAAK/D,OAAL,CAAayE,IAAb,CAAkBzE,OAAlB;AACD;AACF;AAED;AACF;AACA;;;;WACE,wBAAeoB,IAAf,EAAqB;AACnB,UAAI,KAAKkC,cAAL,CAAoB,MAApB,EAA4BlC,IAA5B,EAAkC,CAAC,KAAKmC,eAAN,EAAuB,KAAKQ,gBAAL,CAAsB,QAAtB,CAAvB,CAAlC,CAAJ,EAAgG;AAC9F,aAAKwB,UAAL,CAAgB;AACdX,UAAAA,KAAK,EAAExD,IADO;AAEdkE,UAAAA,IAAI,EAAE;AAFQ,SAAhB;AAID;AACF;AAED;AACF;AACA;;;;WACE,wBAAejE,IAAf,EAAqB;AACnB,UAAI,KAAKiC,cAAL,CAAoB,MAApB,EAA4BjC,IAA5B,EAAkC,CAAC,KAAKkC,eAAN,EAAuB,KAAKQ,gBAAL,CAAsB,QAAtB,CAAvB,CAAlC,CAAJ,EAAgG;AAC9F,aAAKwB,UAAL,CAAgB;AACdX,UAAAA,KAAK,EAAEvD,IADO;AAEdiE,UAAAA,IAAI,EAAE;AAFQ,SAAhB;AAID;AACF;AAED;AACF;AACA;;;;WACE,wBAAevF,WAAf,EAA4B;AAC1B,UAAI,KAAKqE,aAAL,CAAmB,aAAnB,EAAkCrE,WAAlC,CAAJ,EAAoD;AAClD,YAAI,CAACA,WAAW,CAACmE,KAAZ,CAAkB,UAAAsB,UAAU;AAAA,iBAAI,OAAOA,UAAU,CAACxF,OAAlB,KAA8B,QAAlC;AAAA,SAA5B,CAAL,EAA8E;AAC5E,gBAAM,IAAIY,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,YAAI,CAACb,WAAW,CAACmE,KAAZ,CAAkB,UAAAsB,UAAU;AAAA,iBAAI,OAAOA,UAAU,CAACC,QAAlB,KAA+B,QAAnC;AAAA,SAA5B,CAAL,EAA+E;AAC7E,gBAAM,IAAI7E,KAAJ,CAAU,yDAAV,CAAN;AACD;;AACD,YAAI,CAACb,WAAW,CAACmE,KAAZ,CAAkB,UAAAsB,UAAU;AAAA,iBAAI,CAACA,UAAU,CAACF,IAAZ,IAAoB,OAAOE,UAAU,CAACF,IAAlB,KAA2B,QAAnD;AAAA,SAA5B,CAAL,EAA+F;AAC7F,gBAAM,IAAI1E,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD,YAAI,CAACb,WAAW,CAACmE,KAAZ,CAAkB,UAAAsB,UAAU;AAAA,iBAAI,CAACA,UAAU,CAACE,WAAZ,IAA2B,OAAOF,UAAU,CAACE,WAAlB,KAAkC,QAAjE;AAAA,SAA5B,CAAL,EAA6G;AAC3G,gBAAM,IAAI9E,KAAJ,CAAU,+DAAV,CAAN;AACD;;AACD,aAAKb,WAAL,GAAmBA,WAAnB;AACD;AACF;AAED;AACF;AACA;;;;WACE,uBAAcyF,UAAd,EAA0B;AACxB,UAAI,KAAKlC,cAAL,CAAoB,YAApB,EAAkCkC,UAAlC,EAA8C,CAAC,KAAKjC,eAAN,EAAuB,KAAKQ,gBAAL,CAAsB,QAAtB,CAAvB,CAA9C,CAAJ,EAA4G;AAC1G,aAAKhE,WAAL,CAAiB0E,IAAjB,CAAsBe,UAAtB;AACD;AACF;AAED;AACF;AACA;;;;WACE,uBAAcvF,UAAd,EAA0B;AACxB,UAAI0F,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChB,YAAD,EAAeC,KAAf,EAAyB;AACnD,YAAI,CAAC1B,KAAK,CAACC,OAAN,CAAcyB,KAAd,CAAD,IAAyB,CAACA,KAAK,CAACV,KAAN,CAAY,UAAA0B,IAAI;AAAA,iBAAI,OAAOA,IAAP,KAAgB,QAApB;AAAA,SAAhB,CAA9B,EAA6E;AAC3E,gBAAM,IAAIhF,KAAJ,CAAU,oCAAoC+D,YAApC,GAAmD,GAA7D,CAAN;AACD;AACF,OAJD;;AAMA,UAAI,OAAO1E,UAAP,KAAsB,QAA1B,EAAoC;AAClCA,QAAAA,UAAU,GAAG,CAACA,UAAD,CAAb;AACD;;AAED,UAAI,KAAKqD,cAAL,CAAoB,YAApB,EAAkCrD,UAAlC,EAA8C,CAAC,KAAKsD,eAAN,EAAuBoC,qBAAvB,CAA9C,CAAJ,EAAkG;AAChG,aAAK1F,UAAL,GAAkBA,UAAlB;AACD;AACF;AAED;AACF;AACA;;;;WACE,qBAAYwB,QAAZ,EAAsB;AACpB,UAAI,KAAK6B,cAAL,CAAoB,UAApB,EAAgC7B,QAAhC,EAA0C,CAAC,KAAKsC,gBAAL,CAAsB,QAAtB,CAAD,CAA1C,CAAJ,EAAkF;AAChF,aAAK9D,UAAL,CAAgBwE,IAAhB,CAAqBhD,QAArB;AACD;AACF;AAED;AACF;AACA;;;;WACE,oBAAWvB,OAAX,EAAoB;AAClB,WAAKwD,YAAL,CAAkB,SAAlB,EAA6BxD,OAA7B,EAAsC,QAAtC;AACD;AAED;AACF;AACA;;;;WACE,mBAAU2F,GAAV,EAAejB,KAAf,EAAsB;AACpB,UAAI,KAAKtB,cAAL,CAAoB,KAApB,EAA2BuC,GAA3B,EAAgC,CAAC,KAAK9B,gBAAL,CAAsB,QAAtB,CAAD,CAAhC,KACC,KAAKT,cAAL,CAAoB,OAApB,EAA6BsB,KAA7B,EAAoC,CAAC,KAAKb,gBAAL,CAAsB,QAAtB,CAAD,CAApC,CADL,EAC6E;AAC3E,aAAK7D,OAAL,CAAa2F,GAAb,IAAoBjB,KAApB;AACD;AACF;AAED;AACF;AACA;;;;WACE,qBAAYzE,QAAZ,EAAsB;AACpB,WAAKuD,YAAL,CAAkB,UAAlB,EAA8BvD,QAA9B,EAAwC,QAAxC;AACD;AAED;AACF;AACA;;;;WACE,uBAAcC,UAAd,EAA0B;AACxB,WAAKsD,YAAL,CAAkB,YAAlB,EAAgCtD,UAAhC,EAA4C,QAA5C;AACD;AAED;AACF;AACA;;;;WACE,6BAAoB0F,QAApB,EAA8B;AAC5B,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACD;;AACDrG,MAAAA,wBAAwB,CAACqG,QAAD,CAAxB;AACA,WAAKzF,gBAAL,GAAwByF,QAAxB;AACD;AAED;AACF;AACA;;;;WACE,yBAAgBA,QAAhB,EAA0B;AACxB,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACD;;AACDtG,MAAAA,oBAAoB,CAACsG,QAAD,CAApB;AACA,WAAKxF,YAAL,GAAoBwF,QAApB;AACD;AAED;AACF;AACA;;;;WACE,yBAAgBC,IAAhB,EAAsB;AACpB,UAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC/B;AACD;;AACD,UAAI,OAAOA,IAAP,KAAgB,SAApB,EAA+B;AAC7B,cAAM,IAAInF,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,WAAKf,YAAL,GAAoBkG,IAApB;AACD;AAED;AACF;AACA;;;;WACE,kBAAS;AAEP;AACA,UACEjF,IADF,GAKI,IALJ,CACEA,IADF;AAAA,UACQC,OADR,GAKI,IALJ,CACQA,OADR;AAAA,UACiBG,MADjB,GAKI,IALJ,CACiBA,MADjB;AAAA,UACyBC,OADzB,GAKI,IALJ,CACyBA,OADzB;AAAA,UACkCnB,OADlC,GAKI,IALJ,CACkCA,OADlC;AAAA,UAC2CsB,UAD3C,GAKI,IALJ,CAC2CA,UAD3C;AAAA,UAEExB,gBAFF,GAKI,IALJ,CAEEA,gBAFF;AAAA,UAEoBC,WAFpB,GAKI,IALJ,CAEoBA,WAFpB;AAAA,UAEiCwB,UAFjC,GAKI,IALJ,CAEiCA,UAFjC;AAAA,UAE6CC,OAF7C,GAKI,IALJ,CAE6CA,OAF7C;AAAA,UAEsDjB,GAFtD,GAKI,IALJ,CAEsDA,GAFtD;AAAA,UAGEJ,QAHF,GAKI,IALJ,CAGEA,QAHF;AAAA,UAGYD,OAHZ,GAKI,IALJ,CAGYA,OAHZ;AAAA,UAGqBD,UAHrB,GAKI,IALJ,CAGqBA,UAHrB;AAAA,UAGiCG,UAHjC,GAKI,IALJ,CAGiCA,UAHjC;AAAA,UAG6CE,YAH7C,GAKI,IALJ,CAG6CA,YAH7C;AAAA,UAIED,gBAJF,GAKI,IALJ,CAIEA,gBAJF,CAHO,CAUP;;AACA,UAAM2F,IAAI,GAAG;AACXlF,QAAAA,IAAI,EAAJA,IADW;AACLK,QAAAA,OAAO,EAAPA,OADK;AAEXrB,QAAAA,gBAAgB,EAAER,WAAW,CAACQ,gBAAD;AAFlB,OAAb,CAXO,CAgBP;;AACA,UAAIoD,KAAK,CAACC,OAAN,CAAcpD,WAAd,KAA8BA,WAAW,CAAC8E,MAAZ,GAAqB,CAAvD,EAA0D;AACxDmB,QAAAA,IAAI,CAACjG,WAAL,GAAmBT,WAAW,CAACS,WAAD,CAA9B;AACD;;AACD,UAAImD,KAAK,CAACC,OAAN,CAAclD,UAAd,KAA6BA,UAAU,CAAC4E,MAAX,GAAoB,CAArD,EAAwD;AACtDmB,QAAAA,IAAI,CAAC/F,UAAL,GAAkBA,UAAU,CAACgG,MAAX,CAAkB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,KAAK,EAAZ;AAAA,SAArB,CAAlB;AACD;;AACD,UAAIhD,KAAK,CAACC,OAAN,CAAcnD,OAAd,KAA0BA,OAAO,CAAC6E,MAAR,GAAiB,CAA/C,EAAkD;AAChDmB,QAAAA,IAAI,CAAChG,OAAL,GAAeV,WAAW,CAACU,OAAD,CAA1B;AACD,OAzBM,CA2BP;;;AACA,UAAIgF,MAAM,CAACmB,IAAP,CAAYjG,OAAZ,EAAqB2E,MAArB,GAA8B,CAAlC,EAAqC;AACnCmB,QAAAA,IAAI,CAAC9F,OAAL,GAAeA,OAAf;AACD;;AACD,UAAI8E,MAAM,CAACmB,IAAP,CAAY7F,YAAZ,EAA0BuE,MAA1B,GAAmC,CAAvC,EAA0C;AACxCmB,QAAAA,IAAI,CAAC1F,YAAL,GAAoBA,YAApB;AACD;;AACD,UAAI0E,MAAM,CAACmB,IAAP,CAAY9F,gBAAZ,EAA8BwE,MAA9B,GAAuC,CAA3C,EAA8C;AAC5CmB,QAAAA,IAAI,CAAC3F,gBAAL,GAAwBA,gBAAxB;AACD;;AACD,UAAI2E,MAAM,CAACmB,IAAP,CAAY/F,UAAZ,EAAwByE,MAAxB,GAAiC,CAArC,EAAwC;AACtCmB,QAAAA,IAAI,CAAC5F,UAAL,GAAkBA,UAAlB;AACD;;AACD,UAAI4E,MAAM,CAACmB,IAAP,CAAYhG,QAAZ,EAAsB0E,MAAtB,GAA+B,CAAnC,EAAsC;AACpCmB,QAAAA,IAAI,CAAC7F,QAAL,GAAgBA,QAAhB;AACD;;AACD,UAAI6E,MAAM,CAACmB,IAAP,CAAY5F,GAAZ,EAAiBsE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BmB,QAAAA,IAAI,CAACzF,GAAL,GAAWA,GAAX;AACD,OA7CM,CA+CP;;;AACA,UAAI,OAAOQ,OAAP,KAAmB,WAAvB,EAAoC;AAClCiF,QAAAA,IAAI,CAACjF,OAAL,GAAeA,OAAf;AACD;;AACD,UAAI,OAAOG,MAAP,KAAkB,WAAtB,EAAmC;AACjC8E,QAAAA,IAAI,CAAC9E,MAAL,GAAcA,MAAd;AACD;;AACD,UAAI,OAAOM,OAAP,KAAmB,WAAvB,EAAoC;AAClCwE,QAAAA,IAAI,CAACxE,OAAL,GAAeA,OAAf;AACD;;AACD,UAAI,OAAOF,UAAP,KAAsB,WAA1B,EAAuC;AACrC0E,QAAAA,IAAI,CAAC1E,UAAL,GAAkBA,UAAlB;AACD;;AACD,UAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;AACrCyE,QAAAA,IAAI,CAACzE,UAAL,GAAkBA,UAAlB;AACD,OA9DM,CAgEP;;;AACA,aAAOnC,WAAW,CAAC4G,IAAD,EAAO,CAAC,eAAD,EAAkB,qBAAlB,EAAyC,YAAzC,EAAuD,SAAvD,EAAkE,UAAlE,CAAP,CAAlB;AACD;AAED;AACF;AACA;;AAEE;AACF;AACA;;;;;AAmBE;AACF;AACA;;AAEE;AACF;AACA;AACA;AACE,4BAAerB,YAAf,EAA6BC,KAA7B,EAAoCwB,MAApC,EAA4C;AAC1C,aAAO,CAACA,MAAM,CAACC,IAAP,CAAY,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC3B,YAAD,EAAeC,KAAf,CAAR;AAAA,OAAZ,CAAR;AACD;AAED;AACF;AACA;;;;WACE,sBAAaD,YAAb,EAA2BC,KAA3B,EAAkC2B,YAAlC,EAAgD;AAC9C,UAAIC,oBAAoB,GAAG,KAAKlD,cAAL,CACzBqB,YADyB,EAEzBC,KAFyB,EAGzB,CAAC,KAAKrB,eAAN,EAAuB,KAAKQ,gBAAL,CAAsBwC,YAAtB,CAAvB,CAHyB,CAA3B;;AAKA,UAAIC,oBAAJ,EAA0B;AACxB,aAAK7B,YAAL,IAAqBC,KAArB;AACD;;AAED,aAAO4B,oBAAP;AACD;AAED;AACF;AACA;;;;WACE,yBAAgB7B,YAAhB,EAA8BC,KAA9B,EAAqC;AACnC,aAAO,OAAOA,KAAP,KAAiB,WAAxB;AACD;AAED;AACF;AACA;;;;WACE,0BAAiB2B,YAAjB,EAA+B;AAC7B,aAAO,UAAC5B,YAAD,EAAeC,KAAf,EAAyB;AAC9B,YAAI,OAAOA,KAAP,KAAiB2B,YAArB,EAAmC;AACjC,gBAAM,IAAI3F,KAAJ,CAAU2F,YAAY,GAAG,iBAAf,GAAmC5B,YAAnC,GAAkD,GAA5D,CAAN;AACD;AACF,OAJD;AAKD;AAED;AACF;AACA;AACA;;;;WACE,gCAAuB8B,KAAvB,EAA8BC,WAA9B,EAA2C;AACzC,aAAO,UAAC/B,YAAD,EAAeC,KAAf,EAAyB;AAC9B,YAAI,CAAC6B,KAAK,CAAC7B,KAAD,CAAV,EAAmB;AACjB,gBAAM,IAAIhE,KAAJ,CAAU8F,WAAV,CAAN;AACD;AACF,OAJD;AAKD;AAED;AACF;AACA;AACA;;;;WACE,2BAAkB/B,YAAlB,EAAgCC,KAAhC,EAAuC;AACrC,UAAI,KAAKR,aAAL,CAAmBO,YAAnB,EAAiCC,KAAjC,CAAJ,EAA6C;AAC3C,aAAKD,YAAL,IAAqBC,KAArB;AACD;AACF;AAED;AACF;AACA;;;;WACE,uBAAcD,YAAd,EAA4BC,KAA5B,EAAmC;AACjC,aAAO,KAAKtB,cAAL,CACLqB,YADK,EAELC,KAFK,EAGL,CAAC,KAAKrB,eAAN,EAAuB,KAAKI,sBAAL,CAA4BT,KAAK,CAACC,OAAlC,EAA2C,wBAAwBwB,YAAxB,GAAuC,GAAlF,CAAvB,CAHK,CAAP;AAID;;;WA9FD,gBAAchF,IAAd,EAAoB;AAAA;;AAElB;AACA,UAAIuD,KAAK,CAACC,OAAN,CAAcxD,IAAd,CAAJ,EAAyB;AACvB,eAAOA,IAAI,CACRsG,MADI,CACG,UAAAL,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAN;AAAA,SADP,EAEJe,GAFI,CAEA,UAAAf,IAAI;AAAA,iBAAI,MAAI,CAACnC,MAAL,CAAYmC,IAAZ,CAAJ;AAAA,SAFJ,CAAP;AAGD,OAPiB,CASlB;;;AACA,UAAIjG,IAAI,YAAYD,IAApB,EAA0B;AACxB,eAAOC,IAAP;AACD,OAZiB,CAclB;;;AACA,aAAO,IAAID,IAAJ,CAASC,IAAT,CAAP;AACD;;;;KAiFH;;;AACAiH,MAAM,CAACC,OAAP,GAAiBnH,IAAjB","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\nconst EmailAddress = require('./email-address');\nconst Personalization = require('./personalization');\nconst toCamelCase = require('../helpers/to-camel-case');\nconst toSnakeCase = require('../helpers/to-snake-case');\nconst deepClone = require('../helpers/deep-clone');\nconst arrayToJSON = require('../helpers/array-to-json');\nconst { DYNAMIC_TEMPLATE_CHAR_WARNING } = require('../constants');\nconst {validateMailSettings, validateTrackingSettings} = require('../helpers/validate-settings');\n\n/**\n * Mail class\n */\nclass Mail {\n\n  /**\n   * Constructor\n   */\n  constructor(data) {\n\n    //Initialize array and object properties\n    this.isDynamic = false;\n    this.hideWarnings = false;\n    this.personalizations = [];\n    this.attachments = [];\n    this.content = [];\n    this.categories = [];\n    this.headers = {};\n    this.sections = {};\n    this.customArgs = {};\n    this.trackingSettings = {};\n    this.mailSettings = {};\n    this.asm = {};\n\n    //Helper properties\n    this.substitutions = null;\n    this.substitutionWrappers = null;\n    this.dynamicTemplateData = null;\n\n    //Process data if given\n    if (data) {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * Build from data\n   */\n  fromData(data) {\n\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    }\n\n    //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']);\n\n    //Extract properties from data\n    const {\n      to, from, replyTo, cc, bcc, sendAt, subject, text, html, content,\n      templateId, personalizations, attachments, ipPoolName, batchId,\n      sections, headers, categories, category, customArgs, asm, mailSettings,\n      trackingSettings, substitutions, substitutionWrappers, dynamicTemplateData, isMultiple,\n      hideWarnings,\n    } = data;\n\n    //Set data\n    this.setFrom(from);\n    this.setReplyTo(replyTo);\n    this.setSubject(subject);\n    this.setSendAt(sendAt);\n    this.setTemplateId(templateId);\n    this.setBatchId(batchId);\n    this.setIpPoolName(ipPoolName);\n    this.setAttachments(attachments);\n    this.setContent(content);\n    this.setSections(sections);\n    this.setHeaders(headers);\n    this.setCategories(category);\n    this.setCategories(categories);\n    this.setCustomArgs(customArgs);\n    this.setAsm(asm);\n    this.setMailSettings(mailSettings);\n    this.setTrackingSettings(trackingSettings);\n    this.setHideWarnings(hideWarnings);\n\n    if (this.isDynamic) {\n      this.setDynamicTemplateData(dynamicTemplateData);\n    } else {\n      this.setSubstitutions(substitutions);\n      this.setSubstitutionWrappers(substitutionWrappers);\n    }\n\n    //Add contents from text/html properties\n    this.addTextContent(text);\n    this.addHtmlContent(html);\n\n    //Using \"to\" property for personalizations\n    if (personalizations) {\n      this.setPersonalizations(personalizations);\n    } else if (isMultiple && Array.isArray(to)) {\n      //Multiple individual emails\n      to.forEach(to => this.addTo(to, cc, bcc));\n    } else {\n      //Single email (possibly with multiple recipients in the to field)\n      this.addTo(to, cc, bcc);\n    }\n  }\n\n  /**\n   * Set from email\n   */\n  setFrom(from) {\n    if (this._checkProperty('from', from, [this._checkUndefined])) {\n      if (typeof from !== 'string' && typeof from.email !== 'string') {\n        throw new Error('String or address object expected for `from`');\n      }\n      this.from = EmailAddress.create(from);\n    }\n  }\n\n  /**\n   * Set reply to\n   */\n  setReplyTo(replyTo) {\n    if (this._checkProperty('replyTo', replyTo, [this._checkUndefined])) {\n      if (typeof replyTo !== 'string' && typeof replyTo.email !== 'string') {\n        throw new Error('String or address object expected for `replyTo`');\n      }\n      this.replyTo = EmailAddress.create(replyTo);\n    }\n  }\n\n  /**\n   * Set subject\n   */\n  setSubject(subject) {\n    this._setProperty('subject', subject, 'string');\n  }\n\n  /**\n   * Set send at\n   */\n  setSendAt(sendAt) {\n    if (this._checkProperty('sendAt', sendAt, [this._checkUndefined, this._createCheckThatThrows(Number.isInteger, 'Integer expected for `sendAt`')])) {\n      this.sendAt = sendAt;\n    }\n  }\n\n  /**\n   * Set template ID, also checks if the template is dynamic or legacy\n   */\n  setTemplateId(templateId) {\n    if (this._setProperty('templateId', templateId, 'string')) {\n      if (templateId.indexOf('d-') === 0) {\n        this.isDynamic = true;\n      }\n    }\n  }\n\n  /**\n   * Set batch ID\n   */\n  setBatchId(batchId) {\n    this._setProperty('batchId', batchId, 'string');\n  }\n\n  /**\n   * Set IP pool name\n   */\n  setIpPoolName(ipPoolName) {\n    this._setProperty('ipPoolName', ipPoolName, 'string');\n  }\n\n  /**\n   * Set ASM\n   */\n  setAsm(asm) {\n    if (this._checkProperty('asm', asm, [this._checkUndefined, this._createTypeCheck('object')])) {\n      if (typeof asm.groupId !== 'number') {\n        throw new Error('Expected `asm` to include an integer in its `groupId` field');\n      }\n      if (asm.groupsToDisplay &&\n        (!Array.isArray(asm.groupsToDisplay) || !asm.groupsToDisplay.every(group => typeof group === 'number'))) {\n        throw new Error('Array of integers expected for `asm.groupsToDisplay`');\n      }\n      this.asm = asm;\n    }\n  }\n\n  /**\n   * Set personalizations\n   */\n  setPersonalizations(personalizations) {\n    if (!this._doArrayCheck('personalizations', personalizations)) {\n      return;\n    }\n\n    if (!personalizations.every(personalization => typeof personalization === 'object')) {\n      throw new Error('Array of objects expected for `personalizations`');\n    }\n\n    //Clear and use add helper to add one by one\n    this.personalizations = [];\n    personalizations\n      .forEach(personalization => this.addPersonalization(personalization));\n  }\n\n  /**\n   * Add personalization\n   */\n  addPersonalization(personalization) {\n    //We should either send substitutions or dynamicTemplateData\n    //depending on the templateId\n    if (this.isDynamic && personalization.substitutions) {\n      delete personalization.substitutions;\n    } else if (!this.isDynamic && personalization.dynamicTemplateData) {\n      delete personalization.dynamicTemplateData;\n    }\n\n    //Convert to class if needed\n    if (!(personalization instanceof Personalization)) {\n      personalization = new Personalization(personalization);\n    }\n\n    //If this is dynamic, set dynamicTemplateData, or set substitutions\n    if (this.isDynamic) {\n      this.applyDynamicTemplateData(personalization);\n    } else {\n      this.applySubstitutions(personalization);\n    }\n\n    //Push personalization to array\n    this.personalizations.push(personalization);\n  }\n\n  /**\n   * Convenience method for quickly creating personalizations\n   */\n  addTo(to, cc, bcc) {\n    if (\n      typeof to === 'undefined' &&\n      typeof cc === 'undefined' &&\n      typeof bcc === 'undefined'\n    ) {\n      throw new Error('Provide at least one of to, cc or bcc');\n    }\n    this.addPersonalization(new Personalization({to, cc, bcc}));\n  }\n\n  /**\n   * Set substitutions\n   */\n  setSubstitutions(substitutions) {\n    this._setProperty('substitutions', substitutions, 'object');\n  }\n\n  /**\n   * Set substitution wrappers\n   */\n  setSubstitutionWrappers(substitutionWrappers) {\n    let lengthCheck = (propertyName, value) => {\n      if (!Array.isArray(value) || value.length !== 2) {\n        throw new Error('Array expected with two elements for `' + propertyName + '`');\n      }\n    };\n\n    if (this._checkProperty('substitutionWrappers', substitutionWrappers, [this._checkUndefined, lengthCheck])) {\n      this.substitutionWrappers = substitutionWrappers;\n    }\n  }\n\n  /**\n   * Helper which applies globally set substitutions to personalizations\n   */\n  applySubstitutions(personalization) {\n    if (personalization instanceof Personalization) {\n      personalization.reverseMergeSubstitutions(this.substitutions);\n      personalization.setSubstitutionWrappers(this.substitutionWrappers);\n    }\n  }\n\n  /**\n   * Helper which applies globally set dynamic_template_data to personalizations\n   */\n  applyDynamicTemplateData(personalization) {\n    if (personalization instanceof Personalization) {\n      personalization.deepMergeDynamicTemplateData(this.dynamicTemplateData);\n    }\n  }\n\n  /**\n   * Set dynamicTemplateData\n   */\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n\n    // Check dynamic template for non-escaped characters and warn if found\n    if (!this.hideWarnings) {\n      Object.values(dynamicTemplateData).forEach(value => {\n        if (/['\"&]/.test(value)) {\n          console.warn(DYNAMIC_TEMPLATE_CHAR_WARNING);\n        }\n      });\n    }\n\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n\n  /**\n   * Set content\n   */\n  setContent(content) {\n    if (this._doArrayCheck('content', content)) {\n      if (!content.every(contentField => typeof contentField === 'object')) {\n        throw new Error('Expected each entry in `content` to be an object');\n      }\n      if (!content.every(contentField => typeof contentField.type === 'string')) {\n        throw new Error('Expected each `content` entry to contain a `type` string');\n      }\n      if (!content.every(contentField => typeof contentField.value === 'string')) {\n        throw new Error('Expected each `content` entry to contain a `value` string');\n      }\n      this.content = content;\n    }\n  }\n\n  /**\n   * Add content\n   */\n  addContent(content) {\n    if (this._checkProperty('content', content, [this._createTypeCheck('object')])) {\n      this.content.push(content);\n    }\n  }\n\n  /**\n   * Add text content\n   */\n  addTextContent(text) {\n    if (this._checkProperty('text', text, [this._checkUndefined, this._createTypeCheck('string')])) {\n      this.addContent({\n        value: text,\n        type: 'text/plain',\n      });\n    }\n  }\n\n  /**\n   * Add HTML content\n   */\n  addHtmlContent(html) {\n    if (this._checkProperty('html', html, [this._checkUndefined, this._createTypeCheck('string')])) {\n      this.addContent({\n        value: html,\n        type: 'text/html',\n      });\n    }\n  }\n\n  /**\n   * Set attachments\n   */\n  setAttachments(attachments) {\n    if (this._doArrayCheck('attachments', attachments)) {\n      if (!attachments.every(attachment => typeof attachment.content === 'string')) {\n        throw new Error('Expected each attachment to contain a `content` string');\n      }\n      if (!attachments.every(attachment => typeof attachment.filename === 'string')) {\n        throw new Error('Expected each attachment to contain a `filename` string');\n      }\n      if (!attachments.every(attachment => !attachment.type || typeof attachment.type === 'string')) {\n        throw new Error('Expected the attachment\\'s `type` field to be a string');\n      }\n      if (!attachments.every(attachment => !attachment.disposition || typeof attachment.disposition === 'string')) {\n        throw new Error('Expected the attachment\\'s `disposition` field to be a string');\n      }\n      this.attachments = attachments;\n    }\n  }\n\n  /**\n   * Add attachment\n   */\n  addAttachment(attachment) {\n    if (this._checkProperty('attachment', attachment, [this._checkUndefined, this._createTypeCheck('object')])) {\n      this.attachments.push(attachment);\n    }\n  }\n\n  /**\n   * Set categories\n   */\n  setCategories(categories) {\n    let allElementsAreStrings = (propertyName, value) => {\n      if (!Array.isArray(value) || !value.every(item => typeof item === 'string')) {\n        throw new Error('Array of strings expected for `' + propertyName + '`');\n      }\n    };\n\n    if (typeof categories === 'string') {\n      categories = [categories];\n    }\n\n    if (this._checkProperty('categories', categories, [this._checkUndefined, allElementsAreStrings])) {\n      this.categories = categories;\n    }\n  }\n\n  /**\n   * Add category\n   */\n  addCategory(category) {\n    if (this._checkProperty('category', category, [this._createTypeCheck('string')])) {\n      this.categories.push(category);\n    }\n  }\n\n  /**\n   * Set headers\n   */\n  setHeaders(headers) {\n    this._setProperty('headers', headers, 'object');\n  }\n\n  /**\n   * Add a header\n   */\n  addHeader(key, value) {\n    if (this._checkProperty('key', key, [this._createTypeCheck('string')])\n      && this._checkProperty('value', value, [this._createTypeCheck('string')])) {\n      this.headers[key] = value;\n    }\n  }\n\n  /**\n   * Set sections\n   */\n  setSections(sections) {\n    this._setProperty('sections', sections, 'object');\n  }\n\n  /**\n   * Set custom args\n   */\n  setCustomArgs(customArgs) {\n    this._setProperty('customArgs', customArgs, 'object');\n  }\n\n  /**\n   * Set tracking settings\n   */\n  setTrackingSettings(settings) {\n    if (typeof settings === 'undefined') {\n      return;\n    }\n    validateTrackingSettings(settings);\n    this.trackingSettings = settings;\n  }\n\n  /**\n   * Set mail settings\n   */\n  setMailSettings(settings) {\n    if (typeof settings === 'undefined') {\n      return;\n    }\n    validateMailSettings(settings);\n    this.mailSettings = settings;\n  }\n\n  /**\n   * Set hide warnings\n   */\n  setHideWarnings(hide) {\n    if (typeof hide === 'undefined') {\n      return;\n    }\n    if (typeof hide !== 'boolean') {\n      throw new Error('Boolean expected for `hideWarnings`');\n    }\n    this.hideWarnings = hide;\n  }\n\n  /**\n   * To JSON\n   */\n  toJSON() {\n\n    //Extract properties from self\n    const {\n      from, replyTo, sendAt, subject, content, templateId,\n      personalizations, attachments, ipPoolName, batchId, asm,\n      sections, headers, categories, customArgs, mailSettings,\n      trackingSettings,\n    } = this;\n\n    //Initialize with mandatory values\n    const json = {\n      from, subject,\n      personalizations: arrayToJSON(personalizations),\n    };\n\n    //Array properties\n    if (Array.isArray(attachments) && attachments.length > 0) {\n      json.attachments = arrayToJSON(attachments);\n    }\n    if (Array.isArray(categories) && categories.length > 0) {\n      json.categories = categories.filter(cat => cat !== '');\n    }\n    if (Array.isArray(content) && content.length > 0) {\n      json.content = arrayToJSON(content);\n    }\n\n    //Object properties\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n    if (Object.keys(mailSettings).length > 0) {\n      json.mailSettings = mailSettings;\n    }\n    if (Object.keys(trackingSettings).length > 0) {\n      json.trackingSettings = trackingSettings;\n    }\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n    if (Object.keys(sections).length > 0) {\n      json.sections = sections;\n    }\n    if (Object.keys(asm).length > 0) {\n      json.asm = asm;\n    }\n\n    //Simple properties\n    if (typeof replyTo !== 'undefined') {\n      json.replyTo = replyTo;\n    }\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n    if (typeof batchId !== 'undefined') {\n      json.batchId = batchId;\n    }\n    if (typeof templateId !== 'undefined') {\n      json.templateId = templateId;\n    }\n    if (typeof ipPoolName !== 'undefined') {\n      json.ipPoolName = ipPoolName;\n    }\n\n    //Return as snake cased object\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers', 'sections']);\n  }\n\n  /**************************************************************************\n   * Static helpers\n   ***/\n\n  /**\n   * Create a Mail instance from given data\n   */\n  static create(data) {\n\n    //Array?\n    if (Array.isArray(data)) {\n      return data\n        .filter(item => !!item)\n        .map(item => this.create(item));\n    }\n\n    //Already instance of Mail class?\n    if (data instanceof Mail) {\n      return data;\n    }\n\n    //Create instance\n    return new Mail(data);\n  }\n\n  /**************************************************************************\n   * helpers for property-setting checks\n   ***/\n\n  /**\n   * Perform a set of checks on the new property value. Returns true if all\n   * checks complete successfully without throwing errors or returning true.\n   */\n  _checkProperty(propertyName, value, checks) {\n    return !checks.some((e) => e(propertyName, value));\n  }\n\n  /**\n   * Set a property with normal undefined and type-checks\n   */\n  _setProperty(propertyName, value, propertyType) {\n    let propertyChecksPassed = this._checkProperty(\n      propertyName,\n      value,\n      [this._checkUndefined, this._createTypeCheck(propertyType)]);\n\n    if (propertyChecksPassed) {\n      this[propertyName] = value;\n    }\n\n    return propertyChecksPassed;\n  }\n\n  /**\n   * Fail if the value is undefined.\n   */\n  _checkUndefined(propertyName, value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Create and return a function that checks for a given type\n   */\n  _createTypeCheck(propertyType) {\n    return (propertyName, value) => {\n      if (typeof value !== propertyType) {\n        throw new Error(propertyType + ' expected for `' + propertyName + '`');\n      }\n    };\n  }\n\n  /**\n   * Create a check out of a callback. If the callback\n   * returns false, the check will throw an error.\n   */\n  _createCheckThatThrows(check, errorString) {\n    return (propertyName, value) => {\n      if (!check(value)) {\n        throw new Error(errorString);\n      }\n    };\n  }\n\n  /**\n   * Set an array property after checking that the new value is an\n   * array.\n   */\n  _setArrayProperty(propertyName, value) {\n    if (this._doArrayCheck(propertyName, value)) {\n      this[propertyName] = value;\n    }\n  }\n\n  /**\n   * Check that a value isn't undefined and is an array.\n   */\n  _doArrayCheck(propertyName, value) {\n    return this._checkProperty(\n      propertyName,\n      value,\n      [this._checkUndefined, this._createCheckThatThrows(Array.isArray, 'Array expected for`' + propertyName + '`')]);\n  }\n}\n\n//Export class\nmodule.exports = Mail;\n"]},"metadata":{},"sourceType":"script"}