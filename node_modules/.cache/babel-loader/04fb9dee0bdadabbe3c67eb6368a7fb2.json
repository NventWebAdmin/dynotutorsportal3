{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{getRecorddata,createRecord,bulkcreateRecord}from\"../db/index\";import{sortArray,fieldTypeHtmltoDBmapping,getLocalData,serverButtonHandler}from\"../js/index\";import{GetGoogleIcon}from\"./icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var F=/*#__PURE__*/function(_Component){_inherits(F,_Component);var _super=_createSuper(F);function F(_props){var _this;_classCallCheck(this,F);_this=_super.call(this,_props);_this.resetCompData=function(){var isConnectedtoWebsocketServer=_this.state.isConnectedtoWebsocketServer;if(isConnectedtoWebsocketServer==false){// get currentuserid, orgname etc\nvar localdata=getLocalData(_this.props);var _this$props$compprops=_this.props.compprops,orgname=_this$props$compprops.orgname,userobjectname=_this$props$compprops.userobjectname,userobjectsortparambeginswith=_this$props$compprops.userobjectsortparambeginswith,serverretriverowslimit=_this$props$compprops.serverretriverowslimit;// get all user data\n_this.getServerData({objectname:userobjectname,orgname:orgname,datasortparambeginswith:userobjectsortparambeginswith,touserdatasortparambeginswith:\"\",serverretriverowslimit:serverretriverowslimit,updattingstatename:\"userList\",touserid:\"\"});// open socket connection\n_this.props.localParentMethod({methodname:\"openwebsocketconnection\",props:{}});}};_this.componentDidUpdate=function(prevProps){var _this$state=_this.state,isConnectedtoWebsocketServer=_this$state.isConnectedtoWebsocketServer,currentuserid=_this$state.currentuserid,serverMessage=_this$state.serverMessage,userList=_this$state.userList,chatMessageObj=_this$state.chatMessageObj,selectedTouserId=_this$state.selectedTouserId;var newlocalParentProps=_this.props.localParentProps;if(isConnectedtoWebsocketServer!=newlocalParentProps.isConnectedtoWebsocketServer){if(newlocalParentProps.isConnectedtoWebsocketServer==false){for(var userI in userList){userList[userI].chatstatus=\"offline\";}}_this.setState({isConnectedtoWebsocketServer:newlocalParentProps.isConnectedtoWebsocketServer,userList:userList});}if(currentuserid!=newlocalParentProps.currentuserid){_this.setState({currentuserid:newlocalParentProps.currentuserid});}if(serverMessage!=newlocalParentProps.serverMessage&&newlocalParentProps.serverMessage){console.log(JSON.parse(newlocalParentProps.serverMessage));var newservermessage=JSON.parse(newlocalParentProps.serverMessage);if(newservermessage.messagetype==\"updatestatus\"){for(var _userI in userList){if(userList[_userI].id==newservermessage.userid){userList[_userI].chatstatus=newservermessage.chatstatus;}}}if(newservermessage.messagetype==\"sendmessage\"){for(var _userI2 in userList){if(userList[_userI2].id==newservermessage.userid&&currentuserid==newservermessage.touserid){var userchatMessageObj=chatMessageObj[newservermessage.userid];if(newservermessage.userid!=selectedTouserId){userchatMessageObj.noofunreadmsgs=userchatMessageObj.noofunreadmsgs+1;}var newmessages=userchatMessageObj.newmessages;newmessages.push(newservermessage.message);userchatMessageObj.newmessages=newmessages;chatMessageObj[newservermessage.userid]=userchatMessageObj;_this.setState({chatMessageObj:chatMessageObj});}}}_this.setState({serverMessage:newlocalParentProps.serverMessage,userList:userList});}};_this.getServerData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(props){var _this$state2,chatMessageObj,chatuserclickedstr,objectname,orgname,datasortparambeginswith,touserdatasortparambeginswith,serverretriverowslimit,updattingstatename,touserid,userdataParams,dataresult,recordDataList,i,chatList,touserdataParams,touserdataresult,touserchatList,allchatlist,_i,_i2,allchatlistSorted;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this$state2=_this.state,chatMessageObj=_this$state2.chatMessageObj,chatuserclickedstr=_this$state2.chatuserclickedstr;objectname=props.objectname,orgname=props.orgname,datasortparambeginswith=props.datasortparambeginswith,touserdatasortparambeginswith=props.touserdatasortparambeginswith,serverretriverowslimit=props.serverretriverowslimit,updattingstatename=props.updattingstatename,touserid=props.touserid;console.log(datasortparambeginswith);// get all users\nuserdataParams={objectName:objectname,objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"id\",value:datasortparambeginswith,expression:\"beginswith\"}],filterConditions:[],pageSize:1,limit:serverretriverowslimit,exclusiveStartKey:\"\"};_context.next=6;return getRecorddata(userdataParams);case 6:dataresult=_context.sent;if(!(dataresult.isSuccess===\"false\")){_context.next=11;break;}alert(\"data\"+dataresult.message);_context.next=22;break;case 11:recordDataList=dataresult.dataprops.Items;console.log(recordDataList);if(updattingstatename==\"userList\"){for(i in recordDataList){chatMessageObj[recordDataList[i].id]={noofunreadmsgs:0,oldmessages:[],newmessages:[]};}_this.setState({userList:recordDataList,chatMessageObj:chatMessageObj,chatuserclickedstr:\"\"});}if(!(updattingstatename==\"chatList\")){_context.next=22;break;}chatList=recordDataList;console.log(chatList);touserdataParams={objectName:objectname,objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"id\",value:touserdatasortparambeginswith,expression:\"beginswith\"}],filterConditions:[],pageSize:1,limit:serverretriverowslimit,exclusiveStartKey:\"\"};_context.next=20;return getRecorddata(touserdataParams);case 20:touserdataresult=_context.sent;if(touserdataresult.isSuccess===\"false\"){alert(\"data\"+dataresult.message);}else{touserchatList=touserdataresult.dataprops.Items;console.log(chatList);console.log(touserchatList);//  console.log(recordDataList);\nallchatlist=[];for(_i in chatList){allchatlist.push(chatList[_i]);}for(_i2 in touserchatList){allchatlist.push(touserchatList[_i2]);}allchatlistSorted=sortArray(allchatlist,\"time\",\"integer\");chatMessageObj[touserid]={noofunreadmsgs:0,oldmessages:allchatlist,newmessages:[]};_this.setState({//chatList: allchatlistSorted,\nchatMessageObj:chatMessageObj});}case 22:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.getChatData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(touserid){var _this$state3,currentuserid,chatuserclickedstr;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(touserid);_this$state3=_this.state,currentuserid=_this$state3.currentuserid,chatuserclickedstr=_this$state3.chatuserclickedstr;if(chatuserclickedstr.includes(touserid)){_this.setState({selectedTouserId:touserid});}else{chatuserclickedstr=chatuserclickedstr+touserid;_this.setState({selectedTouserId:touserid,chatuserclickedstr:chatuserclickedstr});_this.getServerData({objectname:\"chatmessage\",orgname:\"gouthama\",datasortparambeginswith:\"cht_\"+currentuserid+\"_\"+touserid,touserdatasortparambeginswith:\"cht_\"+touserid+\"_\"+currentuserid,serverretriverowslimit:100,updattingstatename:\"chatList\",touserid:touserid});}case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.updateStatus=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props){var status,msgObj;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:status=props.status;msgObj={orgname:\"gouthama\",userid:\"usr-pradeep\",touserid:\"\",messagetype:\"updatestatus\",message:\"\",chatstatus:status};_this.props.localParentMethod({methodname:\"sendmessage\",methodprops:msgObj});_this.setState({currentuserchatstatus:status});case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();_this.sendmessage=function(){var _this$state4=_this.state,chatMessageObj=_this$state4.chatMessageObj,currentuserid=_this$state4.currentuserid,selectedTouserId=_this$state4.selectedTouserId,currentusermsg=_this$state4.currentusermsg;var d=new Date();var n=d.getTime();var msgObj={orgname:\"gouthama\",userid:currentuserid,touserid:selectedTouserId,messagetype:\"sendmessage\",message:{type:\"text\",data:currentusermsg},chatstatus:\"\",time:n};_this.props.localParentMethod({methodname:\"sendmessage\",methodprops:msgObj});var userchatMessageObj=chatMessageObj[selectedTouserId];var newmessages=userchatMessageObj.newmessages;newmessages.push(msgObj);userchatMessageObj.newmessages=newmessages;chatMessageObj[selectedTouserId]=userchatMessageObj;_this.setState({chatMessageObj:chatMessageObj,currentusermsg:\"\"});};_this.state={chatuserclickedstr:\"\",currentusermsg:\"\",selectedTouserId:\"\",currentuserstatus:\"offline\",userList:[],isConnectedtoWebsocketServer:false,currentuserid:\"\",serverMessage:{},chatMessageObj:{}};return _this;}_createClass(F,[{key:\"componentDidMount\",value:function componentDidMount(){// display all users, connect to websocket server\nthis.resetCompData();}},{key:\"render\",value:function render(){var _this2=this;var _this$state5=this.state,userList=_this$state5.userList,chatMessageObj=_this$state5.chatMessageObj,currentuserid=_this$state5.currentuserid,currentuserchatstatus=_this$state5.currentuserchatstatus,selectedTouserId=_this$state5.selectedTouserId;var chatList;console.log(this.state);// other users status\nvar chatUserArrayHtml=[];var _loop=function _loop(i){if(currentuserid&&userList[i].id!=currentuserid){var otheruserstatuscolor=\"\";if(userList[i].chatstatus==\"available\"){otheruserstatuscolor=\"green\";}if(userList[i].chatstatus==\"busy\"){otheruserstatuscolor=\"red\";}if(userList[i].chatstatus==\"away\"){otheruserstatuscolor=\"yellow\";}if(userList[i].chatstatus==\"offline\"){otheruserstatuscolor=\"grey\";}var noofunreadmsgs=\"\";if(chatMessageObj&&chatMessageObj[userList[i].id]){noofunreadmsgs=chatMessageObj[userList[i].id].noofunreadmsgs;}chatUserArrayHtml.push(/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr org-fjc-s org-fai-c\",onClick:function onClick(){_this2.getChatData(userList[i].id);},children:[userList[i].name,\"-\",/*#__PURE__*/_jsx(\"span\",{style:{width:\"20px\",backgroundColor:otheruserstatuscolor,padding:\"10px\",borderRadius:\"50%\"},children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:noofunreadmsgs})]}));}};for(var i in userList){_loop(i);}var chatMessageArrayHtml=[];for(var _i3 in chatMessageObj){if(_i3==selectedTouserId){var oldmessages=chatMessageObj[_i3].oldmessages;var newmessages=chatMessageObj[_i3].newmessages;chatList=[];for(var j in oldmessages){chatList.push(oldmessages[j]);}for(var _j in newmessages){chatList.push(newmessages[_j]);}for(var _i4 in chatList){console.log(chatList[_i4]);var d=new Date(chatList[_i4].time);d=d.toISOString();var msgObj=chatList[_i4].message;console.log(chatList[_i4]);var msgStr=\"\";if(msgObj&&msgObj.type==\"text\"){msgStr=msgObj.data;}console.log(msgStr);if(currentuserid==chatList[_i4].userid){chatMessageArrayHtml.push(/*#__PURE__*/_jsx(\"div\",{className:\"org-fr org-fjc-e\",children:msgStr}));chatMessageArrayHtml.push(/*#__PURE__*/_jsx(\"div\",{className:\"org-fr org-fjc-e\",children:d}));}else{chatMessageArrayHtml.push(/*#__PURE__*/_jsx(\"div\",{className:\"org-fr org-fjc-s\",children:msgStr}));chatMessageArrayHtml.push(/*#__PURE__*/_jsx(\"div\",{className:\"org-fr org-fjc-s\",children:d}));}}}}var chatMessageActionsHtml=[];chatMessageActionsHtml.push(/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(GetGoogleIcon,{name:\"call\"}),/*#__PURE__*/_jsx(GetGoogleIcon,{name:\"videocam\"}),/*#__PURE__*/_jsx(GetGoogleIcon,{name:\"screen_share\"})]}));var chatInputElmntHtml=[];chatInputElmntHtml.push(/*#__PURE__*/_jsx(\"div\",{children:\"chatinput\"}));var currentuserstatuscolor=\"\";if(currentuserchatstatus==\"available\"){currentuserstatuscolor=\"green\";}if(currentuserchatstatus==\"busy\"){currentuserstatuscolor=\"red\";}if(currentuserchatstatus==\"away\"){currentuserstatuscolor=\"yellow\";}if(currentuserchatstatus==\"offline\"){currentuserstatuscolor=\"grey\";}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{width:\"20px\",backgroundColor:currentuserstatuscolor,padding:\"10px\",borderRadius:\"50%\"},children:\".\"}),/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){_this2.setState({currentuserid:e.target.value});}}),/*#__PURE__*/_jsx(\"button\",{style:{textAlign:\"center\"},onClick:function onClick(){_this2.updateStatus({status:\"busy\"});},children:\"show status busy\"}),/*#__PURE__*/_jsx(\"button\",{style:{textAlign:\"center\"},onClick:function onClick(){_this2.updateStatus({status:\"available\"});},children:\"show status available\"}),/*#__PURE__*/_jsx(\"button\",{style:{textAlign:\"center\"},onClick:function onClick(){_this2.updateStatus({status:\"away\"});},children:\"show status away\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr\",style:{height:\"100%\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p \",children:chatUserArrayHtml}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p org-fc \",children:[/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"red\",height:\"85%\",overflow:\"auto\"},children:chatMessageArrayHtml}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr\",style:{backgroundColor:\"blue\",height:\"15%\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p\",children:/*#__PURE__*/_jsx(\"textarea\",{style:{width:\"100%\",height:\"100%\",padding:\"0\",margin:\"0\"},value:this.state.currentusermsg,onChange:function onChange(e){_this2.setState({currentusermsg:e.target.value});}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p\",children:[chatMessageActionsHtml,/*#__PURE__*/_jsx(\"button\",{style:{width:\"100%\",height:\"100%\",textAlign:\"center\"},onClick:this.sendmessage,children:\"Send\"})]})]})]})]})]});}}]);return F;}(Component);export default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/chat2.js"],"names":["React","Component","getRecorddata","createRecord","bulkcreateRecord","sortArray","fieldTypeHtmltoDBmapping","getLocalData","serverButtonHandler","GetGoogleIcon","F","props","resetCompData","isConnectedtoWebsocketServer","state","localdata","compprops","orgname","userobjectname","userobjectsortparambeginswith","serverretriverowslimit","getServerData","objectname","datasortparambeginswith","touserdatasortparambeginswith","updattingstatename","touserid","localParentMethod","methodname","componentDidUpdate","prevProps","currentuserid","serverMessage","userList","chatMessageObj","selectedTouserId","newlocalParentProps","localParentProps","userI","chatstatus","setState","console","log","JSON","parse","newservermessage","messagetype","id","userid","userchatMessageObj","noofunreadmsgs","newmessages","push","message","chatuserclickedstr","userdataParams","objectName","objectData","keyConditions","field","value","expression","filterConditions","pageSize","limit","exclusiveStartKey","dataresult","isSuccess","alert","recordDataList","dataprops","Items","i","oldmessages","chatList","touserdataParams","touserdataresult","touserchatList","allchatlist","allchatlistSorted","getChatData","includes","updateStatus","status","msgObj","methodprops","currentuserchatstatus","sendmessage","currentusermsg","d","Date","n","getTime","type","data","time","currentuserstatus","chatUserArrayHtml","otheruserstatuscolor","name","width","backgroundColor","padding","borderRadius","chatMessageArrayHtml","j","toISOString","msgStr","chatMessageActionsHtml","chatInputElmntHtml","currentuserstatuscolor","e","target","textAlign","height","overflow","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport {\n  sortArray,\n  fieldTypeHtmltoDBmapping,\n  getLocalData,\n  serverButtonHandler,\n} from \"../js/index\";\nimport { GetGoogleIcon } from \"./icons\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatuserclickedstr: \"\",\n      currentusermsg: \"\",\n      selectedTouserId: \"\",\n      currentuserstatus: \"offline\",\n      userList: [],\n      isConnectedtoWebsocketServer: false,\n      currentuserid: \"\",\n      serverMessage: {},\n      chatMessageObj: {},\n    };\n  }\n\n  componentDidMount() {\n    // display all users, connect to websocket server\n    this.resetCompData();\n  }\n\n  resetCompData = () => {\n    let { isConnectedtoWebsocketServer } = this.state;\n    if (isConnectedtoWebsocketServer == false) {\n      // get currentuserid, orgname etc\n      let localdata = getLocalData(this.props);\n      let {\n        orgname,\n        userobjectname,\n        userobjectsortparambeginswith,\n        serverretriverowslimit,\n      } = this.props.compprops;\n\n      // get all user data\n      this.getServerData({\n        objectname: userobjectname,\n        orgname: orgname,\n        datasortparambeginswith: userobjectsortparambeginswith,\n        touserdatasortparambeginswith: \"\",\n        serverretriverowslimit: serverretriverowslimit,\n        updattingstatename: \"userList\",\n        touserid: \"\",\n      });\n\n      // open socket connection\n      this.props.localParentMethod({\n        methodname: \"openwebsocketconnection\",\n        props: {},\n      });\n    }\n  };\n\n  // update on parent props such as socket open, close, on message etc\n  componentDidUpdate = (prevProps) => {\n    let {\n      isConnectedtoWebsocketServer,\n      currentuserid,\n      serverMessage,\n      userList,\n      chatMessageObj,\n      selectedTouserId,\n    } = this.state;\n    let newlocalParentProps = this.props.localParentProps;\n    if (\n      isConnectedtoWebsocketServer !=\n      newlocalParentProps.isConnectedtoWebsocketServer\n    ) {\n      if (newlocalParentProps.isConnectedtoWebsocketServer == false) {\n        for (let userI in userList) {\n          userList[userI].chatstatus = \"offline\";\n        }\n      }\n\n      this.setState({\n        isConnectedtoWebsocketServer:\n          newlocalParentProps.isConnectedtoWebsocketServer,\n        userList: userList,\n      });\n    }\n\n    if (currentuserid != newlocalParentProps.currentuserid) {\n      this.setState({ currentuserid: newlocalParentProps.currentuserid });\n    }\n\n    if (\n      serverMessage != newlocalParentProps.serverMessage &&\n      newlocalParentProps.serverMessage\n    ) {\n      console.log(JSON.parse(newlocalParentProps.serverMessage));\n      let newservermessage = JSON.parse(newlocalParentProps.serverMessage);\n      if (newservermessage.messagetype == \"updatestatus\") {\n        for (let userI in userList) {\n          if (userList[userI].id == newservermessage.userid) {\n            userList[userI].chatstatus = newservermessage.chatstatus;\n          }\n        }\n      }\n\n      if (newservermessage.messagetype == \"sendmessage\") {\n        for (let userI in userList) {\n          if (\n            userList[userI].id == newservermessage.userid &&\n            currentuserid == newservermessage.touserid\n          ) {\n            let userchatMessageObj = chatMessageObj[newservermessage.userid];\n            if (newservermessage.userid != selectedTouserId) {\n              userchatMessageObj.noofunreadmsgs =\n                userchatMessageObj.noofunreadmsgs + 1;\n            }\n            let newmessages = userchatMessageObj.newmessages;\n            newmessages.push(newservermessage.message);\n            userchatMessageObj.newmessages = newmessages;\n            chatMessageObj[newservermessage.userid] = userchatMessageObj;\n\n            this.setState({\n              chatMessageObj: chatMessageObj,\n            });\n          }\n        }\n      }\n\n      this.setState({\n        serverMessage: newlocalParentProps.serverMessage,\n        userList: userList,\n      });\n    }\n  };\n\n  getServerData = async (props) => {\n    let { chatMessageObj, chatuserclickedstr } = this.state;\n    let {\n      objectname,\n      orgname,\n      datasortparambeginswith,\n      touserdatasortparambeginswith,\n      serverretriverowslimit,\n      updattingstatename,\n      touserid,\n    } = props;\n    console.log(datasortparambeginswith);\n\n    // get all users\n    let userdataParams = {\n      objectName: objectname,\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: datasortparambeginswith,\n          expression: \"beginswith\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: 1,\n      limit: serverretriverowslimit,\n      exclusiveStartKey: \"\",\n    };\n\n    let dataresult = await getRecorddata(userdataParams);\n    if (dataresult.isSuccess === \"false\") {\n      alert(\"data\" + dataresult.message);\n    } else {\n      let recordDataList = dataresult.dataprops.Items;\n      console.log(recordDataList);\n      if (updattingstatename == \"userList\") {\n        for (let i in recordDataList) {\n          chatMessageObj[recordDataList[i].id] = {\n            noofunreadmsgs: 0,\n            oldmessages: [],\n            newmessages: [],\n          };\n        }\n        this.setState({\n          userList: recordDataList,\n          chatMessageObj: chatMessageObj,\n          chatuserclickedstr: \"\",\n        });\n      }\n      if (updattingstatename == \"chatList\") {\n        let chatList = recordDataList;\n        console.log(chatList);\n        let touserdataParams = {\n          objectName: objectname,\n          objectData: {},\n          keyConditions: [\n            {\n              field: \"orgname\",\n              value: orgname,\n              expression: \"=\",\n            },\n            {\n              field: \"id\",\n              value: touserdatasortparambeginswith,\n              expression: \"beginswith\",\n            },\n          ],\n          filterConditions: [],\n          pageSize: 1,\n          limit: serverretriverowslimit,\n          exclusiveStartKey: \"\",\n        };\n\n        let touserdataresult = await getRecorddata(touserdataParams);\n        if (touserdataresult.isSuccess === \"false\") {\n          alert(\"data\" + dataresult.message);\n        } else {\n          let touserchatList = touserdataresult.dataprops.Items;\n          console.log(chatList);\n          console.log(touserchatList);\n\n          //  console.log(recordDataList);\n          let allchatlist = [];\n          for (let i in chatList) {\n            allchatlist.push(chatList[i]);\n          }\n          for (let i in touserchatList) {\n            allchatlist.push(touserchatList[i]);\n          }\n          let allchatlistSorted = sortArray(allchatlist, \"time\", \"integer\");\n          chatMessageObj[touserid] = {\n            noofunreadmsgs: 0,\n            oldmessages: allchatlist,\n            newmessages: [],\n          };\n          this.setState({\n            //chatList: allchatlistSorted,\n            chatMessageObj: chatMessageObj,\n          });\n        }\n      }\n    }\n  };\n\n  getChatData = async (touserid) => {\n    console.log(touserid);\n    let { currentuserid, chatuserclickedstr } = this.state;\n    if (chatuserclickedstr.includes(touserid)) {\n      this.setState({ selectedTouserId: touserid });\n    } else {\n      chatuserclickedstr = chatuserclickedstr + touserid;\n      this.setState({\n        selectedTouserId: touserid,\n        chatuserclickedstr: chatuserclickedstr,\n      });\n      this.getServerData({\n        objectname: \"chatmessage\",\n        orgname: \"gouthama\",\n        datasortparambeginswith: \"cht_\" + currentuserid + \"_\" + touserid,\n        touserdatasortparambeginswith: \"cht_\" + touserid + \"_\" + currentuserid,\n        serverretriverowslimit: 100,\n        updattingstatename: \"chatList\",\n        touserid: touserid,\n      });\n    }\n  };\n\n  updateStatus = async (props) => {\n    let { status } = props;\n    let msgObj = {\n      orgname: \"gouthama\",\n      userid: \"usr-pradeep\",\n      touserid: \"\",\n      messagetype: \"updatestatus\",\n      message: \"\",\n      chatstatus: status,\n    };\n    this.props.localParentMethod({\n      methodname: \"sendmessage\",\n      methodprops: msgObj,\n    });\n    this.setState({ currentuserchatstatus: status });\n  };\n\n  sendmessage = () => {\n    let {\n      chatMessageObj,\n      currentuserid,\n      selectedTouserId,\n      currentusermsg,\n    } = this.state;\n    var d = new Date();\n    var n = d.getTime();\n    let msgObj = {\n      orgname: \"gouthama\",\n      userid: currentuserid,\n      touserid: selectedTouserId,\n      messagetype: \"sendmessage\",\n      message: { type: \"text\", data: currentusermsg },\n      chatstatus: \"\",\n      time: n,\n    };\n    this.props.localParentMethod({\n      methodname: \"sendmessage\",\n      methodprops: msgObj,\n    });\n\n    let userchatMessageObj = chatMessageObj[selectedTouserId];\n    let newmessages = userchatMessageObj.newmessages;\n    newmessages.push(msgObj);\n    userchatMessageObj.newmessages = newmessages;\n    chatMessageObj[selectedTouserId] = userchatMessageObj;\n\n    this.setState({\n      chatMessageObj: chatMessageObj,\n      currentusermsg: \"\",\n    });\n  };\n\n  render() {\n    let {\n      userList,\n      chatMessageObj,\n      currentuserid,\n      currentuserchatstatus,\n      selectedTouserId,\n    } = this.state;\n    let chatList;\n\n    console.log(this.state);\n\n    // other users status\n    let chatUserArrayHtml = [];\n\n    for (let i in userList) {\n      if (currentuserid && userList[i].id != currentuserid) {\n        let otheruserstatuscolor = \"\";\n\n        if (userList[i].chatstatus == \"available\") {\n          otheruserstatuscolor = \"green\";\n        }\n        if (userList[i].chatstatus == \"busy\") {\n          otheruserstatuscolor = \"red\";\n        }\n        if (userList[i].chatstatus == \"away\") {\n          otheruserstatuscolor = \"yellow\";\n        }\n        if (userList[i].chatstatus == \"offline\") {\n          otheruserstatuscolor = \"grey\";\n        }\n        let noofunreadmsgs = \"\";\n        if (chatMessageObj && chatMessageObj[userList[i].id]) {\n          noofunreadmsgs = chatMessageObj[userList[i].id].noofunreadmsgs;\n        }\n        chatUserArrayHtml.push(\n          <div\n            className=\"org-fr org-fjc-s org-fai-c\"\n            onClick={() => {\n              this.getChatData(userList[i].id);\n            }}\n          >\n            {userList[i].name}-\n            <span\n              style={{\n                width: \"20px\",\n                backgroundColor: otheruserstatuscolor,\n                padding: \"10px\",\n                borderRadius: \"50%\",\n              }}\n            >\n              .\n            </span>\n            <span>{noofunreadmsgs}</span>\n          </div>\n        );\n      }\n    }\n\n    let chatMessageArrayHtml = [];\n    for (let i in chatMessageObj) {\n      if (i == selectedTouserId) {\n        let oldmessages = chatMessageObj[i].oldmessages;\n        let newmessages = chatMessageObj[i].newmessages;\n        chatList = [];\n        for (let j in oldmessages) {\n          chatList.push(oldmessages[j]);\n        }\n        for (let j in newmessages) {\n          chatList.push(newmessages[j]);\n        }\n\n        for (let i in chatList) {\n          console.log(chatList[i]);\n          var d = new Date(chatList[i].time);\n          d = d.toISOString();\n          var msgObj = chatList[i].message;\n          console.log(chatList[i]);\n          var msgStr = \"\";\n          if (msgObj && msgObj.type == \"text\") {\n            msgStr = msgObj.data;\n          }\n\n          console.log(msgStr);\n          if (currentuserid == chatList[i].userid) {\n            chatMessageArrayHtml.push(\n              <div className=\"org-fr org-fjc-e\">{msgStr}</div>\n            );\n            chatMessageArrayHtml.push(\n              <div className=\"org-fr org-fjc-e\">{d}</div>\n            );\n          } else {\n            chatMessageArrayHtml.push(\n              <div className=\"org-fr org-fjc-s\">{msgStr}</div>\n            );\n            chatMessageArrayHtml.push(\n              <div className=\"org-fr org-fjc-s\">{d}</div>\n            );\n          }\n        }\n      }\n    }\n\n    let chatMessageActionsHtml = [];\n    chatMessageActionsHtml.push(\n      <div>\n        {\" \"}\n        <GetGoogleIcon name=\"call\" />\n        <GetGoogleIcon name=\"videocam\" />\n        <GetGoogleIcon name=\"screen_share\" />\n      </div>\n    );\n\n    let chatInputElmntHtml = [];\n    chatInputElmntHtml.push(<div>chatinput</div>);\n\n    let currentuserstatuscolor = \"\";\n    if (currentuserchatstatus == \"available\") {\n      currentuserstatuscolor = \"green\";\n    }\n    if (currentuserchatstatus == \"busy\") {\n      currentuserstatuscolor = \"red\";\n    }\n    if (currentuserchatstatus == \"away\") {\n      currentuserstatuscolor = \"yellow\";\n    }\n    if (currentuserchatstatus == \"offline\") {\n      currentuserstatuscolor = \"grey\";\n    }\n\n    return (\n      <div>\n        <br />\n\n        <span\n          style={{\n            width: \"20px\",\n            backgroundColor: currentuserstatuscolor,\n            padding: \"10px\",\n            borderRadius: \"50%\",\n          }}\n        >\n          .\n        </span>\n        <input\n          onChange={(e) => {\n            this.setState({ currentuserid: e.target.value });\n          }}\n        />\n\n        <button\n          style={{ textAlign: \"center\" }}\n          onClick={() => {\n            this.updateStatus({ status: \"busy\" });\n          }}\n        >\n          show status busy\n        </button>\n        <button\n          style={{ textAlign: \"center\" }}\n          onClick={() => {\n            this.updateStatus({ status: \"available\" });\n          }}\n        >\n          show status available\n        </button>\n        <button\n          style={{ textAlign: \"center\" }}\n          onClick={() => {\n            this.updateStatus({ status: \"away\" });\n          }}\n        >\n          show status away\n        </button>\n        <div className=\"org-fr\" style={{ height: \"100%\" }}>\n          <div className=\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p \">\n            {chatUserArrayHtml}\n          </div>\n          <div className=\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p org-fc \">\n            <div\n              style={{\n                backgroundColor: \"red\",\n                height: \"85%\",\n                overflow: \"auto\",\n              }}\n            >\n              {chatMessageArrayHtml}\n            </div>\n            <div\n              className=\"org-fr\"\n              style={{ backgroundColor: \"blue\", height: \"15%\" }}\n            >\n              <div className=\"org-flexbasis-100p org-mflexbasis-80p org-lflexbasis-80p\">\n                <textarea\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    padding: \"0\",\n                    margin: \"0\",\n                  }}\n                  value={this.state.currentusermsg}\n                  onChange={(e) => {\n                    this.setState({ currentusermsg: e.target.value });\n                  }}\n                />\n              </div>\n              <div className=\"org-flexbasis-100p org-mflexbasis-20p org-lflexbasis-20p\">\n                {chatMessageActionsHtml}\n                <button\n                  style={{ width: \"100%\", height: \"100%\", textAlign: \"center\" }}\n                  onClick={this.sendmessage}\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}