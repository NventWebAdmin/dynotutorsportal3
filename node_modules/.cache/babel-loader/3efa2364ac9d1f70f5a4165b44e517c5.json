{"ast":null,"code":"'use strict';\n/**\n * Dependencies\n */\n\nvar _slicedToArray = require(\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar EmailAddress = require('./email-address');\n\nvar toCamelCase = require('../helpers/to-camel-case');\n\nvar toSnakeCase = require('../helpers/to-snake-case');\n\nvar deepClone = require('../helpers/deep-clone');\n\nvar deepMerge = require('deepmerge');\n\nvar wrapSubstitutions = require('../helpers/wrap-substitutions');\n/**\n * Personalization class\n */\n\n\nvar Personalization = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   */\n  function Personalization(data) {\n    _classCallCheck(this, Personalization);\n\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {}; //Build from data if given\n\n    if (data) {\n      this.fromData(data);\n    }\n  }\n  /**\n   * From data\n   */\n\n\n  _createClass(Personalization, [{\n    key: \"fromData\",\n    value: function fromData(data) {\n      //Expecting object\n      if (typeof data !== 'object') {\n        throw new Error('Expecting object for Mail data');\n      } //Convert to camel case to make it workable, making a copy to prevent\n      //changes to the original objects\n\n\n      data = deepClone(data);\n      data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']); //Extract properties from data\n\n      var _data = data,\n          to = _data.to,\n          cc = _data.cc,\n          bcc = _data.bcc,\n          subject = _data.subject,\n          headers = _data.headers,\n          customArgs = _data.customArgs,\n          sendAt = _data.sendAt,\n          substitutions = _data.substitutions,\n          substitutionWrappers = _data.substitutionWrappers,\n          dynamicTemplateData = _data.dynamicTemplateData; //Set data\n\n      this.setTo(to);\n      this.setCc(cc);\n      this.setBcc(bcc);\n      this.setSubject(subject);\n      this.setHeaders(headers);\n      this.setSubstitutions(substitutions);\n      this.setSubstitutionWrappers(substitutionWrappers);\n      this.setCustomArgs(customArgs);\n      this.setDynamicTemplateData(dynamicTemplateData);\n      this.setSendAt(sendAt);\n    }\n    /**\n     * Set subject\n     */\n\n  }, {\n    key: \"setSubject\",\n    value: function setSubject(subject) {\n      if (typeof subject === 'undefined') {\n        return;\n      }\n\n      if (typeof subject !== 'string') {\n        throw new Error('String expected for `subject`');\n      }\n\n      this.subject = subject;\n    }\n    /**\n     * Set send at\n     */\n\n  }, {\n    key: \"setSendAt\",\n    value: function setSendAt(sendAt) {\n      if (typeof sendAt === 'undefined') {\n        return;\n      }\n\n      if (!Number.isInteger(sendAt)) {\n        throw new Error('Integer expected for `sendAt`');\n      }\n\n      this.sendAt = sendAt;\n    }\n    /**\n     * Set to\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(to) {\n      if (typeof to === 'undefined') {\n        return;\n      }\n\n      if (!Array.isArray(to)) {\n        to = [to];\n      }\n\n      this.to = EmailAddress.create(to);\n    }\n    /**\n     * Add a single to\n     */\n\n  }, {\n    key: \"addTo\",\n    value: function addTo(to) {\n      if (typeof to === 'undefined') {\n        return;\n      }\n\n      this.to.push(EmailAddress.create(to));\n    }\n    /**\n     * Set cc\n     */\n\n  }, {\n    key: \"setCc\",\n    value: function setCc(cc) {\n      if (typeof cc === 'undefined') {\n        return;\n      }\n\n      if (!Array.isArray(cc)) {\n        cc = [cc];\n      }\n\n      this.cc = EmailAddress.create(cc);\n    }\n    /**\n     * Add a single cc\n     */\n\n  }, {\n    key: \"addCc\",\n    value: function addCc(cc) {\n      if (typeof cc === 'undefined') {\n        return;\n      }\n\n      this.cc.push(EmailAddress.create(cc));\n    }\n    /**\n     * Set bcc\n     */\n\n  }, {\n    key: \"setBcc\",\n    value: function setBcc(bcc) {\n      if (typeof bcc === 'undefined') {\n        return;\n      }\n\n      if (!Array.isArray(bcc)) {\n        bcc = [bcc];\n      }\n\n      this.bcc = EmailAddress.create(bcc);\n    }\n    /**\n     * Add a single bcc\n     */\n\n  }, {\n    key: \"addBcc\",\n    value: function addBcc(bcc) {\n      if (typeof bcc === 'undefined') {\n        return;\n      }\n\n      this.bcc.push(EmailAddress.create(bcc));\n    }\n    /**\n     * Set headers\n     */\n\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(headers) {\n      if (typeof headers === 'undefined') {\n        return;\n      }\n\n      if (typeof headers !== 'object' || headers === null) {\n        throw new Error('Object expected for `headers`');\n      }\n\n      this.headers = headers;\n    }\n    /**\n     * Add a header\n     */\n\n  }, {\n    key: \"addHeader\",\n    value: function addHeader(key, value) {\n      if (typeof key !== 'string') {\n        throw new Error('String expected for header key');\n      }\n\n      if (typeof value !== 'string') {\n        throw new Error('String expected for header value');\n      }\n\n      this.headers[key] = value;\n    }\n    /**\n     * Set custom args\n     */\n\n  }, {\n    key: \"setCustomArgs\",\n    value: function setCustomArgs(customArgs) {\n      if (typeof customArgs === 'undefined') {\n        return;\n      }\n\n      if (typeof customArgs !== 'object' || customArgs === null) {\n        throw new Error('Object expected for `customArgs`');\n      }\n\n      this.customArgs = customArgs;\n    }\n    /**\n     * Add a custom arg\n     */\n\n  }, {\n    key: \"addCustomArg\",\n    value: function addCustomArg(key, value) {\n      if (typeof key !== 'string') {\n        throw new Error('String expected for custom arg key');\n      }\n\n      if (typeof value !== 'string') {\n        throw new Error('String expected for custom arg value');\n      }\n\n      this.customArgs[key] = value;\n    }\n    /**\n     * Set substitutions\n     */\n\n  }, {\n    key: \"setSubstitutions\",\n    value: function setSubstitutions(substitutions) {\n      if (typeof substitutions === 'undefined') {\n        return;\n      }\n\n      if (typeof substitutions !== 'object') {\n        throw new Error('Object expected for `substitutions`');\n      }\n\n      this.substitutions = substitutions;\n    }\n    /**\n     * Add a substitution\n     */\n\n  }, {\n    key: \"addSubstitution\",\n    value: function addSubstitution(key, value) {\n      if (typeof key !== 'string') {\n        throw new Error('String expected for substitution key');\n      }\n\n      if (typeof value !== 'string' && typeof value !== 'number') {\n        throw new Error('String or Number expected for substitution value');\n      }\n\n      this.substitutions[key] = value;\n    }\n    /**\n     * Reverse merge substitutions, preserving existing ones\n     */\n\n  }, {\n    key: \"reverseMergeSubstitutions\",\n    value: function reverseMergeSubstitutions(substitutions) {\n      if (typeof substitutions === 'undefined' || substitutions === null) {\n        return;\n      }\n\n      if (typeof substitutions !== 'object') {\n        throw new Error('Object expected for `substitutions` in reverseMergeSubstitutions');\n      }\n\n      this.substitutions = Object.assign({}, substitutions, this.substitutions);\n    }\n    /**\n     * Set substitution wrappers\n     */\n\n  }, {\n    key: \"setSubstitutionWrappers\",\n    value: function setSubstitutionWrappers(wrappers) {\n      if (typeof wrappers === 'undefined' || wrappers === null) {\n        return;\n      }\n\n      if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n        throw new Error('Array expected with two elements for `substitutionWrappers`');\n      }\n\n      this.substitutionWrappers = wrappers;\n    }\n    /**\n     * Reverse merge dynamic template data, preserving existing ones\n     */\n\n  }, {\n    key: \"deepMergeDynamicTemplateData\",\n    value: function deepMergeDynamicTemplateData(dynamicTemplateData) {\n      if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n        return;\n      }\n\n      if (typeof dynamicTemplateData !== 'object') {\n        throw new Error('Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData');\n      }\n\n      this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n    }\n    /**\n     * Set dynamic template data\n     */\n\n  }, {\n    key: \"setDynamicTemplateData\",\n    value: function setDynamicTemplateData(dynamicTemplateData) {\n      if (typeof dynamicTemplateData === 'undefined') {\n        return;\n      }\n\n      if (typeof dynamicTemplateData !== 'object') {\n        throw new Error('Object expected for `dynamicTemplateData`');\n      }\n\n      this.dynamicTemplateData = dynamicTemplateData;\n    }\n    /**\n     * To JSON\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      //Get data from self\n      var to = this.to,\n          cc = this.cc,\n          bcc = this.bcc,\n          subject = this.subject,\n          headers = this.headers,\n          customArgs = this.customArgs,\n          sendAt = this.sendAt,\n          substitutions = this.substitutions,\n          substitutionWrappers = this.substitutionWrappers,\n          dynamicTemplateData = this.dynamicTemplateData; //Initialize with mandatory values\n\n      var json = {\n        to: to\n      }; //Arrays\n\n      if (Array.isArray(cc) && cc.length > 0) {\n        json.cc = cc;\n      }\n\n      if (Array.isArray(bcc) && bcc.length > 0) {\n        json.bcc = bcc;\n      } //Objects\n\n\n      if (Object.keys(headers).length > 0) {\n        json.headers = headers;\n      }\n\n      if (substitutions && Object.keys(substitutions).length > 0) {\n        var _substitutionWrappers = _slicedToArray(substitutionWrappers, 2),\n            left = _substitutionWrappers[0],\n            right = _substitutionWrappers[1];\n\n        json.substitutions = wrapSubstitutions(substitutions, left, right);\n      }\n\n      if (Object.keys(customArgs).length > 0) {\n        json.customArgs = customArgs;\n      }\n\n      if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n        json.dynamicTemplateData = dynamicTemplateData;\n      } //Simple properties\n\n\n      if (typeof subject !== 'undefined') {\n        json.subject = subject;\n      }\n\n      if (typeof sendAt !== 'undefined') {\n        json.sendAt = sendAt;\n      } //Return as snake cased object\n\n\n      return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n    }\n  }]);\n\n  return Personalization;\n}(); //Export class\n\n\nmodule.exports = Personalization;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/@sendgrid/helpers/classes/personalization.js"],"names":["EmailAddress","require","toCamelCase","toSnakeCase","deepClone","deepMerge","wrapSubstitutions","Personalization","data","to","cc","bcc","headers","customArgs","substitutions","substitutionWrappers","dynamicTemplateData","fromData","Error","subject","sendAt","setTo","setCc","setBcc","setSubject","setHeaders","setSubstitutions","setSubstitutionWrappers","setCustomArgs","setDynamicTemplateData","setSendAt","Number","isInteger","Array","isArray","create","push","key","value","Object","assign","wrappers","length","json","keys","left","right","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Dependencies\n */\nconst EmailAddress = require('./email-address');\nconst toCamelCase = require('../helpers/to-camel-case');\nconst toSnakeCase = require('../helpers/to-snake-case');\nconst deepClone = require('../helpers/deep-clone');\nconst deepMerge = require('deepmerge');\nconst wrapSubstitutions = require('../helpers/wrap-substitutions');\n\n/**\n * Personalization class\n */\nclass Personalization {\n\n  /**\n   * Constructor\n   */\n  constructor(data) {\n\n    //Init array and object placeholders\n    this.to = [];\n    this.cc = [];\n    this.bcc = [];\n    this.headers = {};\n    this.customArgs = {};\n    this.substitutions = {};\n    this.substitutionWrappers = ['{{', '}}'];\n    this.dynamicTemplateData = {};\n\n    //Build from data if given\n    if (data) {\n      this.fromData(data);\n    }\n  }\n\n  /**\n   * From data\n   */\n  fromData(data) {\n\n    //Expecting object\n    if (typeof data !== 'object') {\n      throw new Error('Expecting object for Mail data');\n    }\n\n    //Convert to camel case to make it workable, making a copy to prevent\n    //changes to the original objects\n    data = deepClone(data);\n    data = toCamelCase(data, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n\n    //Extract properties from data\n    const {\n      to, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = data;\n\n    //Set data\n    this.setTo(to);\n    this.setCc(cc);\n    this.setBcc(bcc);\n    this.setSubject(subject);\n    this.setHeaders(headers);\n    this.setSubstitutions(substitutions);\n    this.setSubstitutionWrappers(substitutionWrappers);\n    this.setCustomArgs(customArgs);\n    this.setDynamicTemplateData(dynamicTemplateData);\n    this.setSendAt(sendAt);\n  }\n\n  /**\n   * Set subject\n   */\n  setSubject(subject) {\n    if (typeof subject === 'undefined') {\n      return;\n    }\n    if (typeof subject !== 'string') {\n      throw new Error('String expected for `subject`');\n    }\n    this.subject = subject;\n  }\n\n  /**\n   * Set send at\n   */\n  setSendAt(sendAt) {\n    if (typeof sendAt === 'undefined') {\n      return;\n    }\n    if (!Number.isInteger(sendAt)) {\n      throw new Error('Integer expected for `sendAt`');\n    }\n    this.sendAt = sendAt;\n  }\n\n  /**\n   * Set to\n   */\n  setTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(to)) {\n      to = [to];\n    }\n    this.to = EmailAddress.create(to);\n  }\n\n  /**\n   * Add a single to\n   */\n  addTo(to) {\n    if (typeof to === 'undefined') {\n      return;\n    }\n    this.to.push(EmailAddress.create(to));\n  }\n\n  /**\n   * Set cc\n   */\n  setCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(cc)) {\n      cc = [cc];\n    }\n    this.cc = EmailAddress.create(cc);\n  }\n\n  /**\n   * Add a single cc\n   */\n  addCc(cc) {\n    if (typeof cc === 'undefined') {\n      return;\n    }\n    this.cc.push(EmailAddress.create(cc));\n  }\n\n  /**\n   * Set bcc\n   */\n  setBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    if (!Array.isArray(bcc)) {\n      bcc = [bcc];\n    }\n    this.bcc = EmailAddress.create(bcc);\n  }\n\n  /**\n   * Add a single bcc\n   */\n  addBcc(bcc) {\n    if (typeof bcc === 'undefined') {\n      return;\n    }\n    this.bcc.push(EmailAddress.create(bcc));\n  }\n\n  /**\n   * Set headers\n   */\n  setHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      return;\n    }\n    if (typeof headers !== 'object' || headers === null) {\n      throw new Error('Object expected for `headers`');\n    }\n    this.headers = headers;\n  }\n\n  /**\n   * Add a header\n   */\n  addHeader(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for header key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for header value');\n    }\n    this.headers[key] = value;\n  }\n\n  /**\n   * Set custom args\n   */\n  setCustomArgs(customArgs) {\n    if (typeof customArgs === 'undefined') {\n      return;\n    }\n    if (typeof customArgs !== 'object' || customArgs === null) {\n      throw new Error('Object expected for `customArgs`');\n    }\n    this.customArgs = customArgs;\n  }\n\n  /**\n   * Add a custom arg\n   */\n  addCustomArg(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for custom arg key');\n    }\n    if (typeof value !== 'string') {\n      throw new Error('String expected for custom arg value');\n    }\n    this.customArgs[key] = value;\n  }\n\n  /**\n   * Set substitutions\n   */\n  setSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined') {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error('Object expected for `substitutions`');\n    }\n    this.substitutions = substitutions;\n  }\n\n  /**\n   * Add a substitution\n   */\n  addSubstitution(key, value) {\n    if (typeof key !== 'string') {\n      throw new Error('String expected for substitution key');\n    }\n    if (typeof value !== 'string' && typeof value !== 'number') {\n      throw new Error('String or Number expected for substitution value');\n    }\n    this.substitutions[key] = value;\n  }\n\n  /**\n   * Reverse merge substitutions, preserving existing ones\n   */\n  reverseMergeSubstitutions(substitutions) {\n    if (typeof substitutions === 'undefined' || substitutions === null) {\n      return;\n    }\n    if (typeof substitutions !== 'object') {\n      throw new Error(\n        'Object expected for `substitutions` in reverseMergeSubstitutions'\n      );\n    }\n    this.substitutions = Object.assign({}, substitutions, this.substitutions);\n  }\n\n  /**\n   * Set substitution wrappers\n   */\n  setSubstitutionWrappers(wrappers) {\n    if (typeof wrappers === 'undefined' || wrappers === null) {\n      return;\n    }\n\n    if (!Array.isArray(wrappers) || wrappers.length !== 2) {\n      throw new Error(\n        'Array expected with two elements for `substitutionWrappers`'\n      );\n    }\n    this.substitutionWrappers = wrappers;\n  }\n\n  /**\n   * Reverse merge dynamic template data, preserving existing ones\n   */\n  deepMergeDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined' || dynamicTemplateData === null) {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error(\n        'Object expected for `dynamicTemplateData` in deepMergeDynamicTemplateData'\n      );\n    }\n    this.dynamicTemplateData = deepMerge(dynamicTemplateData, this.dynamicTemplateData);\n  }\n\n  /**\n   * Set dynamic template data\n   */\n  setDynamicTemplateData(dynamicTemplateData) {\n    if (typeof dynamicTemplateData === 'undefined') {\n      return;\n    }\n    if (typeof dynamicTemplateData !== 'object') {\n      throw new Error('Object expected for `dynamicTemplateData`');\n    }\n    this.dynamicTemplateData = dynamicTemplateData;\n  }\n\n  /**\n   * To JSON\n   */\n  toJSON() {\n\n    //Get data from self\n    const {\n      to, cc, bcc, subject, headers, customArgs, sendAt,\n      substitutions, substitutionWrappers, dynamicTemplateData,\n    } = this;\n\n    //Initialize with mandatory values\n    const json = {to};\n\n    //Arrays\n    if (Array.isArray(cc) && cc.length > 0) {\n      json.cc = cc;\n    }\n    if (Array.isArray(bcc) && bcc.length > 0) {\n      json.bcc = bcc;\n    }\n\n    //Objects\n    if (Object.keys(headers).length > 0) {\n      json.headers = headers;\n    }\n    if (substitutions && Object.keys(substitutions).length > 0) {\n      const [left, right] = substitutionWrappers;\n      json.substitutions = wrapSubstitutions(substitutions, left, right);\n    }\n    if (Object.keys(customArgs).length > 0) {\n      json.customArgs = customArgs;\n    }\n\n    if (dynamicTemplateData && Object.keys(dynamicTemplateData).length > 0) {\n      json.dynamicTemplateData = dynamicTemplateData;\n    }\n\n    //Simple properties\n    if (typeof subject !== 'undefined') {\n      json.subject = subject;\n    }\n    if (typeof sendAt !== 'undefined') {\n      json.sendAt = sendAt;\n    }\n\n    //Return as snake cased object\n    return toSnakeCase(json, ['substitutions', 'dynamicTemplateData', 'customArgs', 'headers']);\n  }\n}\n\n//Export class\nmodule.exports = Personalization;\n"]},"metadata":{},"sourceType":"script"}