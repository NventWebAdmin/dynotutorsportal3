{"ast":null,"code":"import { getRecordsAWS, getRecordAWS, createRecordAWS, updateRecordAWS, deleteRecordAWS } from \"./aws\";\nimport { getRecordsFirebase, getRecordFirebase, createRecordFirebase, updateRecordFirebase, deleteRecordFirebase } from \"./firebase\";\nimport { getRecordsYoutube, getRecordYoutube, createRecordYoutube, updateRecordYoutube, deleteRecordYoutube } from \"./youtube\";\nimport { configdata } from \"../config\";\nexport function getVideoRecordsStorage(dataprops) {\n  let recArray;\n\n  if (configdata().videostoragevendor == \"aws\") {\n    recArray = getRecordsAWS(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"firebase\") {\n    recArray = getRecordsFirebase(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"youtube\") {\n    recArray = getRecordsYoutube(dataprops);\n  }\n\n  return recArray;\n}\nexport function getVideoRecordStorage(dataprops) {\n  let rec;\n\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = getRecordYoutube(dataprops);\n  }\n\n  return rec;\n}\nexport function createVideoRecordStorage(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = createRecordYoutube(dataprops);\n  }\n\n  return rec;\n}\nexport function updateVideoRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = updateRecordYoutube(dataprops);\n  }\n\n  return rec;\n}\nexport function deleteVideoRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = deleteRecordYoutube(dataprops);\n  }\n\n  return rec;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/videostorage/index.js"],"names":["getRecordsAWS","getRecordAWS","createRecordAWS","updateRecordAWS","deleteRecordAWS","getRecordsFirebase","getRecordFirebase","createRecordFirebase","updateRecordFirebase","deleteRecordFirebase","getRecordsYoutube","getRecordYoutube","createRecordYoutube","updateRecordYoutube","deleteRecordYoutube","configdata","getVideoRecordsStorage","dataprops","recArray","videostoragevendor","getVideoRecordStorage","rec","createVideoRecordStorage","console","log","updateVideoRecord","deleteVideoRecord"],"mappings":"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","sourcesContent":["import {\n  getRecordsAWS,\n  getRecordAWS,\n  createRecordAWS,\n  updateRecordAWS,\n  deleteRecordAWS,\n} from \"./aws\";\nimport {\n  getRecordsFirebase,\n  getRecordFirebase,\n  createRecordFirebase,\n  updateRecordFirebase,\n  deleteRecordFirebase,\n} from \"./firebase\";\n\nimport {\n  getRecordsYoutube,\n  getRecordYoutube,\n  createRecordYoutube,\n  updateRecordYoutube,\n  deleteRecordYoutube,\n} from \"./youtube\";\n\nimport { configdata } from \"../config\";\n\nexport function getVideoRecordsStorage(dataprops) {\n  let recArray;\n  if (configdata().videostoragevendor == \"aws\") {\n    recArray = getRecordsAWS(dataprops);\n  }\n  if (configdata().videostoragevendor == \"firebase\") {\n    recArray = getRecordsFirebase(dataprops);\n  }\n  if (configdata().videostoragevendor == \"youtube\") {\n    recArray = getRecordsYoutube(dataprops);\n  }\n\n  return recArray;\n}\n\nexport function getVideoRecordStorage(dataprops) {\n  let rec;\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = getRecordAWS(dataprops);\n  }\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = getRecordFirebase(dataprops);\n  }\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = getRecordYoutube(dataprops);\n  }\n  return rec;\n}\n\nexport function createVideoRecordStorage(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = createRecordAWS(dataprops);\n  }\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = createRecordFirebase(dataprops);\n  }\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = createRecordYoutube(dataprops);\n  }\n  return rec;\n}\n\nexport function updateVideoRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = updateRecordAWS(dataprops);\n  }\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = updateRecordFirebase(dataprops);\n  }\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = updateRecordYoutube(dataprops);\n  }\n  return rec;\n}\n\nexport function deleteVideoRecord(dataprops) {\n  console.log(dataprops);\n  let rec;\n  if (configdata().videostoragevendor == \"aws\") {\n    rec = deleteRecordAWS(dataprops);\n  }\n  if (configdata().videostoragevendor == \"firebase\") {\n    rec = deleteRecordFirebase(dataprops);\n  }\n  if (configdata().videostoragevendor == \"youtube\") {\n    rec = deleteRecordYoutube(dataprops);\n  }\n  return rec;\n}\n"]},"metadata":{},"sourceType":"module"}