{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddatarelatedlist2.js\";\nimport React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport { getLocalData, serverButtonHandler } from \"../js/index\";\n/*\ncompprops:{ metadata: {\n        label: \"Calender\",\n        objectname: \"lessonevent\",\n        parentfield: \"lessonid\",\n        idbeginswith: \"le\",\n        fields: {\n          id: { label: \"Id\", name: \"id\" },\n          lessonid: { label: \"Lesson Id\", name: \"lessonid\" },\n        },\n      },\n    }\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recordDataList: []\n    };\n  }\n\n  async componentDidMount() {\n    let localdata = getLocalData(this.props);\n    console.log(localdata);\n    let {\n      metadata\n    } = this.props.compprops;\n    let dataParams = {\n      objectName: metadata.objectname,\n      objectData: {},\n      keyConditions: [{\n        field: \"orgname\",\n        value: localdata.orgname,\n        expression: \"=\"\n      }, {\n        field: \"id\",\n        value: metadata.idbeginswith,\n        expression: \"beginswith\"\n      }],\n      filterConditions: [{\n        field: metadata.parentfield,\n        value: localdata.recordid,\n        expression: \"=\"\n      }],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\"\n    };\n    console.log(dataParams);\n    let dataresult = await getRecorddata(dataParams);\n\n    if (dataresult.isSuccess === \"false\") {\n      alert(\"data\" + dataresult.message);\n    } else {\n      let recordDataList = dataresult.dataprops.Items;\n      console.log(recordDataList);\n      this.setState({\n        recordDataList: recordDataList\n      });\n    }\n  }\n\n  render() {\n    let {\n      recordDataList\n    } = this.state;\n    let {\n      metadata\n    } = this.props.compprops;\n    let fields = metadata.fields;\n    console.log(fields);\n    let tableHtml = [];\n    let trHtml = [];\n\n    for (let j in fields) {\n      trHtml.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: fields[j].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this));\n    }\n\n    for (let i = 0; i < recordDataList.length; i++) {\n      let tdHtml = [];\n\n      for (let j in fields) {\n        tdHtml.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          children: recordDataList[i][j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this));\n      }\n\n      trHtml.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: tdHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this));\n    }\n\n    tableHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: metadata.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: trHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", tableHtml, \" \"]\n    }, void 0, true);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddatarelatedlist2.js"],"names":["React","Component","getRecorddata","createRecord","bulkcreateRecord","getLocalData","serverButtonHandler","F","constructor","props","state","recordDataList","componentDidMount","localdata","console","log","metadata","compprops","dataParams","objectName","objectname","objectData","keyConditions","field","value","orgname","expression","idbeginswith","filterConditions","parentfield","recordid","pageSize","limit","exclusiveStartKey","dataresult","isSuccess","alert","message","dataprops","Items","setState","render","fields","tableHtml","trHtml","j","push","label","i","length","tdHtml"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport { getLocalData, serverButtonHandler } from \"../js/index\";\n\n/*\ncompprops:{ metadata: {\n        label: \"Calender\",\n        objectname: \"lessonevent\",\n        parentfield: \"lessonid\",\n        idbeginswith: \"le\",\n        fields: {\n          id: { label: \"Id\", name: \"id\" },\n          lessonid: { label: \"Lesson Id\", name: \"lessonid\" },\n        },\n      },\n    }\n*/\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { recordDataList: [] };\n  }\n\n  async componentDidMount() {\n    let localdata = getLocalData(this.props);\n    console.log(localdata);\n    let { metadata } = this.props.compprops;\n\n    let dataParams = {\n      objectName: metadata.objectname,\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: localdata.orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: metadata.idbeginswith,\n          expression: \"beginswith\",\n        },\n      ],\n      filterConditions: [\n        {\n          field: metadata.parentfield,\n          value: localdata.recordid,\n          expression: \"=\",\n        },\n      ],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    console.log(dataParams);\n    let dataresult = await getRecorddata(dataParams);\n    if (dataresult.isSuccess === \"false\") {\n      alert(\"data\" + dataresult.message);\n    } else {\n      let recordDataList = dataresult.dataprops.Items;\n      console.log(recordDataList);\n      this.setState({ recordDataList: recordDataList });\n    }\n  }\n  render() {\n    let { recordDataList } = this.state;\n    let { metadata } = this.props.compprops;\n    let fields = metadata.fields;\n    console.log(fields);\n    let tableHtml = [];\n    let trHtml = [];\n    for (let j in fields) {\n      trHtml.push(<th>{fields[j].label}</th>);\n    }\n    for (let i = 0; i < recordDataList.length; i++) {\n      let tdHtml = [];\n      for (let j in fields) {\n        tdHtml.push(<td>{recordDataList[i][j]}</td>);\n      }\n      trHtml.push(<tr>{tdHtml}</tr>);\n    }\n    tableHtml.push(\n      <div>\n        <div>{metadata.label}</div>\n        <table>{trHtml}</table>\n      </div>\n    );\n    return <> {tableHtml} </>;\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}