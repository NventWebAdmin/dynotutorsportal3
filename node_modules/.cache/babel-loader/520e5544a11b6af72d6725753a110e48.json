{"ast":null,"code":"import _objectSpread from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{getRecorddata,createRecord,bulkcreateRecord}from\"../db/index\";//import { sortArray, fieldTypeHtmltoDBmapping } from \"../../js/index\";\n//import Htmlform from \"./htmlformnew\";\n//import Tabpanel from \"./tabpanel\";\nimport Listtable from\"./listtable\";import Tablecomp from\"./tablecomp\";//import { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport{getLocalData,serverButtonHandler}from\"../js/index\";/*\n  <Recorddata\n                    {...this.props}\n                    compprops={{\n                      orgname: \"gouthama\",\n                      userProfileId: \"gouthama-admin\",\n                      userId: \"\",\n                      parenttableName: \"\",\n                      tableName: \"student\",\n                      parentRecId: \"\",\n                    }}\n                    styleprops={{\n                      width: \"100%\",\n                      height: \"30vh\",\n                      backgroundColor: \"\",\n                      overflow: \"auto\",\n                    }}\n                  />\n\n*/import{jsx as _jsx}from\"react/jsx-runtime\";var F=/*#__PURE__*/function(_Component){_inherits(F,_Component);var _super=_createSuper(F);function F(_props){var _this;_classCallCheck(this,F);_this=_super.call(this,_props);_this.clickHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(props){var _this$props$compprops,orgname,userprofileid,userid,tablename,recordnamelinkactionid,recordnewbuttonactionid,itemType,itemId,itemName,actionid,localdata;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(props);_this$props$compprops=_this.props.compprops,orgname=_this$props$compprops.orgname,userprofileid=_this$props$compprops.userprofileid,userid=_this$props$compprops.userid,tablename=_this$props$compprops.tablename,recordnamelinkactionid=_this$props$compprops.recordnamelinkactionid,recordnewbuttonactionid=_this$props$compprops.recordnewbuttonactionid;itemType=props.itemType,itemId=props.itemId,itemName=props.itemName,actionid=props.actionid;localdata=getLocalData(_this.props);if(itemType==\"tabletdnamelink\"){_this.props.serverButtonHandler({localdata:localdata,clickprops:{actionid:actionid,recordid:itemName}});}if(itemType==\"layoutbutton\"){_this.props.serverButtonHandler({localdata:localdata,clickprops:{actionid:actionid,recordid:\"\"}});}if(itemType==\"layoutaction\"){_this.props.serverButtonHandler({localdata:localdata,clickprops:{actionid:actionid,recordid:\"\"}});}if(itemType==\"tabledropdown\"){_this.props.serverButtonHandler({localdata:localdata,clickprops:{actionid:actionid,viewname:itemName}});}if(itemType==\"morerecordsbutton\"){_this.morerecordsOnclick();}case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.inputKeyupHandler=function(){};_this.morerecordsOnclick=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var dataParams,LastEvaluatedKey,dataresult,recordDataList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dataParams=_this.state.dataParams;LastEvaluatedKey=_this.state.LastEvaluatedKey;if(!(LastEvaluatedKey!=\"\"&&LastEvaluatedKey!=undefined)){_context2.next=8;break;}dataParams.exclusiveStartKey=LastEvaluatedKey;_context2.next=6;return getRecorddata(dataParams);case 6:dataresult=_context2.sent;if(dataresult.isSuccess===\"false\"){alert(\"data\"+dataresult.message);}else{recordDataList=dataresult.dataprops.Items;LastEvaluatedKey=dataresult.dataprops.LastEvaluatedKey;console.log(LastEvaluatedKey);console.log(recordDataList);_this.setState({LastEvaluatedKey:LastEvaluatedKey,morerecorddata:recordDataList});}case 8:case\"end\":return _context2.stop();}}},_callee2);}));_this.componentDidUpdate=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(prevProps){var componenthtmlid,datasyncEventprops;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:componenthtmlid=_this.props.componenthtmlid;console.log(_this.props);datasyncEventprops=_this.props.datasyncEventprops;if(prevProps&&JSON.stringify(_this.props.datasyncEventprops)!=JSON.stringify(prevProps.datasyncEventprops)){if(datasyncEventprops.componenthtmlid==\"all\"||datasyncEventprops.componenthtmlid==componenthtmlid){if(datasyncEventprops.name==\"updaterecorddata\"){_this.setState({updaterecorddata:datasyncEventprops.data});}}}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref3.apply(this,arguments);};}();_this.serverEventHandler=function(){};_this.state={mainPanelHtmlObj:[],recorddata:{},dataParams:{},LastEvaluatedKey:\"\",// when more button is clicked\nmorerecorddata:[],// on updaterecorddata datasync event\nupdaterecorddata:[]};return _this;}_createClass(F,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _this$props$compprops2,orgname,userprofileid,userid,tablename,datadisplaytype,viewname;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log(this.props);_this$props$compprops2=this.props.compprops,orgname=_this$props$compprops2.orgname,userprofileid=_this$props$compprops2.userprofileid,userid=_this$props$compprops2.userid,tablename=_this$props$compprops2.tablename,datadisplaytype=_this$props$compprops2.datadisplaytype,viewname=_this$props$compprops2.viewname;if(viewname==null){viewname=\"recentlyviewed\";}this.getRecordListMetadataAndDatafromServer({orgname:orgname,userProfileId:userprofileid,userId:userid,tableName:tablename,datasortparambeginswith:\"\",datasortparamequalsto:\"\",action:\"\",viewName:viewname,datadisplaytype:datadisplaytype});alert(userprofileid);alert(tablename);alert(datadisplaytype);case 7:case\"end\":return _context4.stop();}}},_callee4,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"getRecordListMetadataAndDatafromServer\",value:function(){var _getRecordListMetadataAndDatafromServer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(props){var orgname,userProfileId,userId,tableName,datasortparambeginswith,datasortparamequalsto,action,viewName,datadisplaytype,mainPanelHtmlObj,metadataParams,dataParams,metadataresult,columnMetadata,viewnamedropdownchangeaction,serverretriverowslimit,listrecordcompsperrow,defaultIdsortparam,i,dataresult,recordDataList,LastEvaluatedKey,tablehtmlid,_tablehtmlid;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:orgname=props.orgname,userProfileId=props.userProfileId,userId=props.userId,tableName=props.tableName,datasortparambeginswith=props.datasortparambeginswith,datasortparamequalsto=props.datasortparamequalsto,action=props.action,viewName=props.viewName,datadisplaytype=props.datadisplaytype;mainPanelHtmlObj=this.state.mainPanelHtmlObj;alert(viewName);metadataParams={};dataParams={};// tableview metadata\nmetadataParams={objectName:\"tableview\",objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"tableviewid\",value:userProfileId+\"-\"+tableName+\"-\"+datadisplaytype,expression:\"=\"}],filterConditions:[],pageSize:\"\",limit:\"\",exclusiveStartKey:\"\"};console.log(\"metadataParams\"+JSON.stringify(metadataParams));_context5.next=9;return getRecorddata(metadataParams);case 9:metadataresult=_context5.sent;if(!(metadataresult.isSuccess===\"false\")){_context5.next=14;break;}alert(\"metadata\"+metadataresult.message);_context5.next=35;break;case 14:if(!metadataresult.dataprops.Items[0]){_context5.next=34;break;}console.log(metadataresult.dataprops.Items[0]);// column data for table\ncolumnMetadata=metadataresult.dataprops.Items[0].data;viewnamedropdownchangeaction=metadataresult.dataprops.Items[0].viewnamedropdownchangeaction;serverretriverowslimit=metadataresult.dataprops.Items[0].serverretriverowslimit;console.log(viewnamedropdownchangeaction);listrecordcompsperrow=metadataresult.dataprops.Items[0].listrecordcompsperrow;console.log(columnMetadata);console.log(viewName);console.log(datasortparambeginswith);console.log(datasortparamequalsto);// tableview defult sortparam  get all data if no tableview name given\ndefaultIdsortparam=metadataresult.dataprops.Items[0].defaultidsortparam;if(viewName!=\"\"//&&\n//     datasortparambeginswith == \"\" &&\n//    datasortparamequalsto == \"\"\n){if(viewName!=\"recentlyviewed\"){// table view not recentlyviewed\nfor(i in columnMetadata){if(columnMetadata[i].name==viewName){datasortparambeginswith=columnMetadata[i].idsortparam;}}}else{// tableview recentlyviewd\ndatasortparambeginswith=defaultIdsortparam;}dataParams={objectName:tableName,objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"id\",value:datasortparambeginswith,expression:\"beginswith\"}],filterConditions:[],pageSize:1,limit:serverretriverowslimit,exclusiveStartKey:\"\"};}else{// no tableview name given get data based on equalsto or begin with\nif(datasortparamequalsto!=\"\"){dataParams={objectName:tableName,objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"id\",value:datasortparamequalsto,expression:\"=\"}],filterConditions:[],pageSize:\"\",limit:\"\",exclusiveStartKey:\"\"};}// get records begin with data\nif(datasortparambeginswith!=\"\"){dataParams={objectName:tableName,objectData:{},keyConditions:[{field:\"orgname\",value:orgname,expression:\"=\"},{field:\"id\",value:datasortparambeginswith,expression:\"beginswith\"}],filterConditions:[],pageSize:\"\",limit:\"\",exclusiveStartKey:\"\"};}}console.log(\"dataParams\"+JSON.stringify(dataParams));_context5.next=30;return getRecorddata(dataParams);case 30:dataresult=_context5.sent;if(dataresult.isSuccess===\"false\"){alert(\"data\"+dataresult.message);}else{recordDataList=dataresult.dataprops.Items;LastEvaluatedKey=dataresult.dataprops.LastEvaluatedKey;console.log(dataParams);console.log(\"========\");console.log(dataresult);console.log(datadisplaytype);if(datadisplaytype==\"list\"){tablehtmlid=tableName+\"view\";mainPanelHtmlObj[tablehtmlid]=/*#__PURE__*/React.createElement(Listtable,{componentname:\"Listtable\",dataProps:{name:\"meganavpanel-list-content-recordname\",type:\"meganavpanel-list-content-recordname\"},columnMetadata:columnMetadata,tableOnclick:this.clickHandler,tableOnChange:this.inputChangeHandler,recordData:recordDataList,activeTableviewName:viewName,tableName:tableName,tablehtmlid:tablehtmlid,rowhtmlid1:\"id\",rowhtmlid2:\"id\",clientstatename:tableName,clientstatetype:\"recordlistdata\",listrecordcompsperrow:listrecordcompsperrow,viewnamedropdownchangeaction:viewnamedropdownchangeaction},\"\");}else{_tablehtmlid=tableName+\"view\";mainPanelHtmlObj[_tablehtmlid]=/*#__PURE__*/React.createElement(Tablecomp,{componentname:\"Tablecomp\",dataProps:{name:\"meganavpanel-list-content-recordname\",type:\"meganavpanel-list-content-recordname\"},columnMetadata:columnMetadata,tableOnclick:this.clickHandler,tableOnChange:this.inputChangeHandler,recordData:recordDataList,activeTableviewName:viewName,tableName:tableName,tablehtmlid:tableName+\"view\",rowhtmlid1:\"id\",rowhtmlid2:\"id\",clientstatename:tableName,clientstatetype:\"recordlistdata\",morerecordData:[],viewnamedropdownchangeaction:viewnamedropdownchangeaction},\"\");}this.setState({mainPanelHtmlObj:mainPanelHtmlObj,LastEvaluatedKey:LastEvaluatedKey,dataParams:dataParams});}_context5.next=35;break;case 34:alert(\"please enter validate url\");case 35:case\"end\":return _context5.stop();}}},_callee5,this);}));function getRecordListMetadataAndDatafromServer(_x3){return _getRecordListMetadataAndDatafromServer.apply(this,arguments);}return getRecordListMetadataAndDatafromServer;}()// get static component\n},{key:\"getStaticReactcompfromDynamic\",value:function getStaticReactcompfromDynamic(comp,propsfromlocalparent){console.log(comp);var componentname=comp.props.componentname;var componentprops=comp.props;console.log(comp.props);var componenthtml=[];if(componentname==\"Tablecomp\"){componenthtml.push(/*#__PURE__*/_jsx(Tablecomp,_objectSpread(_objectSpread({},componentprops),propsfromlocalparent)));return componenthtml;}if(componentname==\"Listtable\"){componenthtml.push(/*#__PURE__*/_jsx(Listtable,_objectSpread(_objectSpread({},componentprops),propsfromlocalparent)));return componenthtml;}}// when more button on table or list comp is clicked\n},{key:\"render\",value:function render(){var _this$state=this.state,mainPanelHtmlObj=_this$state.mainPanelHtmlObj,morerecorddata=_this$state.morerecorddata;console.log(morerecorddata);console.log(mainPanelHtmlObj);var mainpanelHtml=[];console.log(this.props);for(var i in mainPanelHtmlObj){var Staticcomp=this.getStaticReactcompfromDynamic(mainPanelHtmlObj[i],{morerecorddata:morerecorddata,updaterecorddata:this.state.updaterecorddata});mainpanelHtml.push(Staticcomp);}return/*#__PURE__*/_jsx(\"div\",{id:this.props.htmlid,style:_objectSpread({},this.props.styleprops),children:mainpanelHtml});}}]);return F;}(Component);export default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddatalistortable.js"],"names":["React","Component","getRecorddata","createRecord","bulkcreateRecord","Listtable","Tablecomp","getLocalData","serverButtonHandler","F","props","clickHandler","console","log","compprops","orgname","userprofileid","userid","tablename","recordnamelinkactionid","recordnewbuttonactionid","itemType","itemId","itemName","actionid","localdata","clickprops","recordid","viewname","morerecordsOnclick","inputKeyupHandler","dataParams","state","LastEvaluatedKey","undefined","exclusiveStartKey","dataresult","isSuccess","alert","message","recordDataList","dataprops","Items","setState","morerecorddata","componentDidUpdate","prevProps","componenthtmlid","datasyncEventprops","JSON","stringify","name","updaterecorddata","data","serverEventHandler","mainPanelHtmlObj","recorddata","datadisplaytype","getRecordListMetadataAndDatafromServer","userProfileId","userId","tableName","datasortparambeginswith","datasortparamequalsto","action","viewName","metadataParams","objectName","objectData","keyConditions","field","value","expression","filterConditions","pageSize","limit","metadataresult","columnMetadata","viewnamedropdownchangeaction","serverretriverowslimit","listrecordcompsperrow","defaultIdsortparam","defaultidsortparam","i","idsortparam","tablehtmlid","createElement","componentname","dataProps","type","tableOnclick","tableOnChange","inputChangeHandler","recordData","activeTableviewName","rowhtmlid1","rowhtmlid2","clientstatename","clientstatetype","morerecordData","comp","propsfromlocalparent","componentprops","componenthtml","push","mainpanelHtml","Staticcomp","getStaticReactcompfromDynamic","htmlid","styleprops"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\n//import { sortArray, fieldTypeHtmltoDBmapping } from \"../../js/index\";\n//import Htmlform from \"./htmlformnew\";\n//import Tabpanel from \"./tabpanel\";\nimport Listtable from \"./listtable\";\nimport Tablecomp from \"./tablecomp\";\n//import { GetLocalIcon, GetGoogleIcon } from \"./icons\";\nimport { getLocalData, serverButtonHandler } from \"../js/index\";\n\n/*\n  <Recorddata\n                    {...this.props}\n                    compprops={{\n                      orgname: \"gouthama\",\n                      userProfileId: \"gouthama-admin\",\n                      userId: \"\",\n                      parenttableName: \"\",\n                      tableName: \"student\",\n                      parentRecId: \"\",\n                    }}\n                    styleprops={{\n                      width: \"100%\",\n                      height: \"30vh\",\n                      backgroundColor: \"\",\n                      overflow: \"auto\",\n                    }}\n                  />\n\n*/\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainPanelHtmlObj: [],\n      recorddata: {},\n      dataParams: {},\n      LastEvaluatedKey: \"\",\n      // when more button is clicked\n      morerecorddata: [],\n      // on updaterecorddata datasync event\n      updaterecorddata: [],\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      datadisplaytype,\n      viewname,\n    } = this.props.compprops;\n    if (viewname == null) {\n      viewname = \"recentlyviewed\";\n    }\n    this.getRecordListMetadataAndDatafromServer({\n      orgname: orgname,\n      userProfileId: userprofileid,\n      userId: userid,\n      tableName: tablename,\n      datasortparambeginswith: \"\",\n      datasortparamequalsto: \"\",\n      action: \"\",\n      viewName: viewname,\n      datadisplaytype: datadisplaytype,\n    });\n    alert(userprofileid);\n    alert(tablename);\n    alert(datadisplaytype);\n  }\n\n  clickHandler = async (props) => {\n    console.log(props);\n    let {\n      orgname,\n      userprofileid,\n      userid,\n      tablename,\n      recordnamelinkactionid,\n      recordnewbuttonactionid,\n    } = this.props.compprops;\n    let { itemType, itemId, itemName, actionid } = props;\n    let localdata = getLocalData(this.props);\n    if (itemType == \"tabletdnamelink\") {\n      this.props.serverButtonHandler({\n        localdata: localdata,\n        clickprops: {\n          actionid: actionid,\n          recordid: itemName,\n        },\n      });\n    }\n    if (itemType == \"layoutbutton\") {\n      this.props.serverButtonHandler({\n        localdata: localdata,\n        clickprops: {\n          actionid: actionid,\n          recordid: \"\",\n        },\n      });\n    }\n    if (itemType == \"layoutaction\") {\n      this.props.serverButtonHandler({\n        localdata: localdata,\n        clickprops: {\n          actionid: actionid,\n          recordid: \"\",\n        },\n      });\n    }\n    if (itemType == \"tabledropdown\") {\n      this.props.serverButtonHandler({\n        localdata: localdata,\n        clickprops: {\n          actionid: actionid,\n          viewname: itemName,\n        },\n      });\n    }\n    if (itemType == \"morerecordsbutton\") {\n      this.morerecordsOnclick();\n    }\n  };\n\n  inputKeyupHandler = () => {};\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      orgname,\n      userProfileId,\n      userId,\n      tableName,\n      datasortparambeginswith,\n      datasortparamequalsto,\n      action,\n      viewName,\n      datadisplaytype,\n    } = props;\n    let { mainPanelHtmlObj } = this.state;\n    alert(viewName);\n    let metadataParams = {};\n    let dataParams = {};\n\n    // tableview metadata\n    metadataParams = {\n      objectName: \"tableview\",\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"tableviewid\",\n          value: userProfileId + \"-\" + tableName + \"-\" + datadisplaytype,\n          expression: \"=\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    console.log(\"metadataParams\" + JSON.stringify(metadataParams));\n    let metadataresult = await getRecorddata(metadataParams);\n    if (metadataresult.isSuccess === \"false\") {\n      alert(\"metadata\" + metadataresult.message);\n    } else {\n      if (metadataresult.dataprops.Items[0]) {\n        console.log(metadataresult.dataprops.Items[0]);\n\n        // column data for table\n        let columnMetadata = metadataresult.dataprops.Items[0].data;\n\n        let viewnamedropdownchangeaction =\n          metadataresult.dataprops.Items[0].viewnamedropdownchangeaction;\n        let serverretriverowslimit =\n          metadataresult.dataprops.Items[0].serverretriverowslimit;\n        console.log(viewnamedropdownchangeaction);\n        let listrecordcompsperrow =\n          metadataresult.dataprops.Items[0].listrecordcompsperrow;\n        console.log(columnMetadata);\n        console.log(viewName);\n        console.log(datasortparambeginswith);\n        console.log(datasortparamequalsto);\n\n        // tableview defult sortparam  get all data if no tableview name given\n        let defaultIdsortparam =\n          metadataresult.dataprops.Items[0].defaultidsortparam;\n        if (\n          viewName != \"\"\n          //&&\n          //     datasortparambeginswith == \"\" &&\n          //    datasortparamequalsto == \"\"\n        ) {\n          if (viewName != \"recentlyviewed\") {\n            // table view not recentlyviewed\n            for (let i in columnMetadata) {\n              if (columnMetadata[i].name == viewName) {\n                datasortparambeginswith = columnMetadata[i].idsortparam;\n              }\n            }\n          } else {\n            // tableview recentlyviewd\n            datasortparambeginswith = defaultIdsortparam;\n          }\n          dataParams = {\n            objectName: tableName,\n            objectData: {},\n            keyConditions: [\n              {\n                field: \"orgname\",\n                value: orgname,\n                expression: \"=\",\n              },\n              {\n                field: \"id\",\n                value: datasortparambeginswith,\n                expression: \"beginswith\",\n              },\n            ],\n            filterConditions: [],\n            pageSize: 1,\n            limit: serverretriverowslimit,\n            exclusiveStartKey: \"\",\n          };\n        } else {\n          // no tableview name given get data based on equalsto or begin with\n          if (datasortparamequalsto != \"\") {\n            dataParams = {\n              objectName: tableName,\n              objectData: {},\n              keyConditions: [\n                {\n                  field: \"orgname\",\n                  value: orgname,\n                  expression: \"=\",\n                },\n                {\n                  field: \"id\",\n                  value: datasortparamequalsto,\n                  expression: \"=\",\n                },\n              ],\n              filterConditions: [],\n              pageSize: \"\",\n              limit: \"\",\n              exclusiveStartKey: \"\",\n            };\n          }\n\n          // get records begin with data\n          if (datasortparambeginswith != \"\") {\n            dataParams = {\n              objectName: tableName,\n              objectData: {},\n              keyConditions: [\n                {\n                  field: \"orgname\",\n                  value: orgname,\n                  expression: \"=\",\n                },\n                {\n                  field: \"id\",\n                  value: datasortparambeginswith,\n                  expression: \"beginswith\",\n                },\n              ],\n              filterConditions: [],\n              pageSize: \"\",\n              limit: \"\",\n              exclusiveStartKey: \"\",\n            };\n          }\n        }\n        console.log(\"dataParams\" + JSON.stringify(dataParams));\n        let dataresult = await getRecorddata(dataParams);\n        if (dataresult.isSuccess === \"false\") {\n          alert(\"data\" + dataresult.message);\n        } else {\n          let recordDataList = dataresult.dataprops.Items;\n          let LastEvaluatedKey = dataresult.dataprops.LastEvaluatedKey;\n          console.log(dataParams);\n          console.log(\"========\");\n          console.log(dataresult);\n          console.log(datadisplaytype);\n          if (datadisplaytype == \"list\") {\n            let tablehtmlid = tableName + \"view\";\n            mainPanelHtmlObj[tablehtmlid] = React.createElement(\n              Listtable,\n              {\n                componentname: \"Listtable\",\n                dataProps: {\n                  name: \"meganavpanel-list-content-recordname\",\n                  type: \"meganavpanel-list-content-recordname\",\n                },\n                columnMetadata: columnMetadata,\n                tableOnclick: this.clickHandler,\n                tableOnChange: this.inputChangeHandler,\n                recordData: recordDataList,\n                activeTableviewName: viewName,\n                tableName: tableName,\n                tablehtmlid: tablehtmlid,\n                rowhtmlid1: \"id\",\n                rowhtmlid2: \"id\",\n                clientstatename: tableName,\n                clientstatetype: \"recordlistdata\",\n                listrecordcompsperrow: listrecordcompsperrow,\n                viewnamedropdownchangeaction: viewnamedropdownchangeaction,\n              },\n              \"\"\n            );\n          } else {\n            let tablehtmlid = tableName + \"view\";\n            mainPanelHtmlObj[tablehtmlid] = React.createElement(\n              Tablecomp,\n              {\n                componentname: \"Tablecomp\",\n                dataProps: {\n                  name: \"meganavpanel-list-content-recordname\",\n                  type: \"meganavpanel-list-content-recordname\",\n                },\n                columnMetadata: columnMetadata,\n                tableOnclick: this.clickHandler,\n                tableOnChange: this.inputChangeHandler,\n                recordData: recordDataList,\n                activeTableviewName: viewName,\n                tableName: tableName,\n                tablehtmlid: tableName + \"view\",\n                rowhtmlid1: \"id\",\n                rowhtmlid2: \"id\",\n                clientstatename: tableName,\n                clientstatetype: \"recordlistdata\",\n                morerecordData: [],\n                viewnamedropdownchangeaction: viewnamedropdownchangeaction,\n              },\n              \"\"\n            );\n          }\n          this.setState({\n            mainPanelHtmlObj: mainPanelHtmlObj,\n            LastEvaluatedKey: LastEvaluatedKey,\n            dataParams: dataParams,\n          });\n        }\n      } else {\n        alert(\"please enter validate url\");\n      }\n    }\n  }\n\n  // get static component\n  getStaticReactcompfromDynamic(comp, propsfromlocalparent) {\n    console.log(comp);\n    let componentname = comp.props.componentname;\n    let componentprops = comp.props;\n    console.log(comp.props);\n    let componenthtml = [];\n    if (componentname == \"Tablecomp\") {\n      componenthtml.push(\n        <Tablecomp {...componentprops} {...propsfromlocalparent} />\n      );\n      return componenthtml;\n    }\n    if (componentname == \"Listtable\") {\n      componenthtml.push(\n        <Listtable {...componentprops} {...propsfromlocalparent} />\n      );\n      return componenthtml;\n    }\n  }\n\n  // when more button on table or list comp is clicked\n  morerecordsOnclick = async () => {\n    let dataParams = this.state.dataParams;\n    let LastEvaluatedKey = this.state.LastEvaluatedKey;\n    if (LastEvaluatedKey != \"\" && LastEvaluatedKey != undefined) {\n      dataParams.exclusiveStartKey = LastEvaluatedKey;\n\n      let dataresult = await getRecorddata(dataParams);\n      if (dataresult.isSuccess === \"false\") {\n        alert(\"data\" + dataresult.message);\n      } else {\n        let recordDataList = dataresult.dataprops.Items;\n        LastEvaluatedKey = dataresult.dataprops.LastEvaluatedKey;\n        console.log(LastEvaluatedKey);\n        console.log(recordDataList);\n        this.setState({\n          LastEvaluatedKey: LastEvaluatedKey,\n          morerecorddata: recordDataList,\n        });\n      }\n    }\n  };\n\n  // when datasyncevent is came from parent comps\n  componentDidUpdate = async (prevProps) => {\n    let { componenthtmlid } = this.props;\n    console.log(this.props);\n    let datasyncEventprops = this.props.datasyncEventprops;\n\n    if (\n      prevProps &&\n      JSON.stringify(this.props.datasyncEventprops) !=\n        JSON.stringify(prevProps.datasyncEventprops)\n    ) {\n      if (\n        datasyncEventprops.componenthtmlid == \"all\" ||\n        datasyncEventprops.componenthtmlid == componenthtmlid\n      ) {\n        if (datasyncEventprops.name == \"updaterecorddata\") {\n          this.setState({ updaterecorddata: datasyncEventprops.data });\n        }\n      }\n    }\n  };\n\n  serverEventHandler = () => {};\n\n  render() {\n    let { mainPanelHtmlObj, morerecorddata } = this.state;\n    console.log(morerecorddata);\n    console.log(mainPanelHtmlObj);\n    let mainpanelHtml = [];\n    console.log(this.props);\n    for (let i in mainPanelHtmlObj) {\n      let Staticcomp = this.getStaticReactcompfromDynamic(mainPanelHtmlObj[i], {\n        morerecorddata: morerecorddata,\n        updaterecorddata: this.state.updaterecorddata,\n      });\n      mainpanelHtml.push(Staticcomp);\n    }\n\n    return (\n      <div id={this.props.htmlid} style={{ ...this.props.styleprops }}>\n        {mainpanelHtml}\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}