{"ast":null,"code":"import _classCallCheck from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import\"../App.css\";import{sortArray,GetAlphabetPanel}from\"../js/index\";import Paginationcomp from\"./pagination\";import{GetLocalIcon,GetGoogleIcon}from\"./icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var F=/*#__PURE__*/function(_React$Component){_inherits(F,_React$Component);var _super=_createSuper(F);function F(props){var _this;_classCallCheck(this,F);_this=_super.call(this,props);_this.onTabledropdownChange=function(e){_this.props.tableOnclick({tableName:e.target.dataset.tablename,itemLabel:\"\",itemName:e.target.value,itemType:\"tabledropdown\",actionid:e.target.dataset.actionid});};_this.tableActionBtnClick=function(e){var itemListData=[];var recordDataTemp=_this.state.recordDataTemp;if(e.target.dataset.name==\"upload\"||e.target.dataset.name==\"download\"){var tableCheckBoxElements=document.querySelectorAll(\".tablecompinputcheckbox\");for(var i=0;i<tableCheckBoxElements.length;i++){for(var j=0;j<recordDataTemp.length;j++){if(tableCheckBoxElements[i].dataset.rowhtmlid1==recordDataTemp[j][_this.props.rowhtmlid1]&&tableCheckBoxElements[i].checked){itemListData.push(recordDataTemp[j]);}}}console.log(itemListData);if(e.target.dataset.name==\"upload\"){_this.props.tableOnclick({itemLabel:\"\",itemName:e.target.dataset.name,itemType:\"tablebutton\",itemData:\"\",itemListData:itemListData});}if(e.target.dataset.name==\"download\"){_this.setState({downloadTableasCSV:true});}}else{_this.props.tableOnclick({itemLabel:\"\",itemName:e.target.dataset.name,itemType:e.target.dataset.actiontype,itemId:e.target.dataset.actionid,actionid:e.target.dataset.actionid,itemData:\"\",itemListData:itemListData});}};_this.alphabetPanelClick=function(a){console.log(a);var _this$state=_this.state,recordDataTemp=_this$state.recordDataTemp,sortedColumn=_this$state.sortedColumn;if(sortedColumn!=\"\"){var recordData=[];if(a==\"All\"){_this.setState({recordData:recordDataTemp});}else{for(var i in recordDataTemp){var sortedColumnValue=recordDataTemp[i][sortedColumn];if(sortedColumnValue){if(sortedColumnValue.toLowerCase().startsWith(a.toLowerCase())){recordData.push(recordDataTemp[i]);}}}_this.setState({recordData:recordData});}}};_this.tableThClick=function(e){console.log(e.target.dataset.name);var recordData=_this.state.recordData;console.log(recordData);var recordDataSorted=sortArray(recordData,e.target.dataset.name,\"string\");console.log(recordDataSorted);_this.setState({recordData:recordDataSorted,sortedColumn:e.target.dataset.name});};_this.tableTdNameLinkClick=function(e){_this.props.tableOnclick({itemLabel:e.target.dataset.label,itemName:e.target.dataset.id,actionid:e.target.dataset.actionid,itemType:\"tabletdnamelink\"});};_this.tableNoofRowsPerPageChange=function(e){_this.setState({noofRowsPerPage:e.target.value,startOfRows:0});};_this.tablepaginationLinkClick=function(buttonName){console.log(buttonName);var _this$state2=_this.state,startOfRows=_this$state2.startOfRows,noofRowsPerPage=_this$state2.noofRowsPerPage,totalRows=_this$state2.totalRows;var nextstartOfRows=parseInt(startOfRows)+parseInt(noofRowsPerPage);var previousstartOfRows=parseInt(startOfRows)-parseInt(noofRowsPerPage);if(buttonName==\"first\"){_this.setState({startOfRows:0});}if(buttonName==\"next\"){_this.setState({startOfRows:nextstartOfRows});}if(buttonName==\"previous\"){_this.setState({startOfRows:previousstartOfRows});}if(buttonName==\"last\"){_this.setState({startOfRows:totalRows-noofRowsPerPage});}};_this.selectAllRows=function(e){console.log(e.target.dataset);var tableCheckBoxElements=document.querySelectorAll(\".tablecompinputcheckbox\");console.log(tableCheckBoxElements);for(var i=0;i<tableCheckBoxElements.length;i++){if(e.target.dataset.tablehtmlid==tableCheckBoxElements[i].dataset.tablehtmlid){tableCheckBoxElements[i].checked=e.target.checked;}}_this.selectRow(e);};_this.selectRow=function(e){console.log(e.target.dataset);var recordDataTemp=_this.state.recordDataTemp;var selectedrecordData=[];var tableCheckBoxElements=document.querySelectorAll(\".tablecompinputcheckbox\");console.log(tableCheckBoxElements);for(var i=0;i<tableCheckBoxElements.length;i++){if(e.target.dataset.tablehtmlid==tableCheckBoxElements[i].dataset.tablehtmlid){if(tableCheckBoxElements[i].checked==true){console.log(tableCheckBoxElements[i]);for(var j=0;j<recordDataTemp.length;j++){if(tableCheckBoxElements[i].dataset.rowhtmlid1==recordDataTemp[j][_this.props.rowhtmlid1]&&tableCheckBoxElements[i].dataset.rowhtmlid2==recordDataTemp[j][_this.props.rowhtmlid2]){selectedrecordData.push(recordDataTemp[j]);}}}}}_this.setState({selectedrecordData:selectedrecordData});console.log(selectedrecordData);// this.props.tableOnChange({\n//   clientstatename: e.target.dataset.clientstatename,\n//   clientstatetype: e.target.dataset.clientstatetype,\n//   recordDataArray: selectedrecordData,\n//   itemType: \"tablecheckbox\",\n// });\n};_this.state={startOfRows:0,noofRowsPerPage:10,totalRows:0,downloadTableasCSV:false,recordData:[],recordDataTemp:[],selectedrecordData:[],updaterecorddatafromstate:[],morerecorddatafromstate:[]};return _this;}_createClass(F,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.recordData){var totalRows=this.props.recordData.length;this.setState({totalRows:totalRows,recordData:this.props.recordData,recordDataTemp:this.props.recordData,sortedColumn:\"\"});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){console.log(this.props.morerecorddata);var _this$state3=this.state,recordData=_this$state3.recordData,recordDataTemp=_this$state3.recordDataTemp,updaterecorddatafromstate=_this$state3.updaterecorddatafromstate,morerecorddatafromstate=_this$state3.morerecorddatafromstate;var _this$props=this.props,morerecorddata=_this$props.morerecorddata,updaterecorddata=_this$props.updaterecorddata;var prevmorerecorddata=prevProps.prevmorerecorddata,prevupdaterecorddata=prevProps.prevupdaterecorddata;if(JSON.stringify(morerecorddatafromstate)!=JSON.stringify(morerecorddata)){for(var i in morerecorddata){recordDataTemp.push(morerecorddata[i]);}this.setState({recordDataTemp:recordDataTemp,recordData:recordData,morerecorddatafromstate:morerecorddata});}if(JSON.stringify(updaterecorddatafromstate)!=JSON.stringify(updaterecorddata)){for(var _i in recordDataTemp){for(var j in updaterecorddata){if(recordDataTemp[_i].id==updaterecorddata[j].id){recordDataTemp[_i]=Object.assign(recordDataTemp[_i],updaterecorddata[j]);}}for(var _i2 in recordData){for(var _j in updaterecorddata){if(recordData[_i2].id==updaterecorddata[_j].id){recordData[_i2]=Object.assign(recordData[_i2],updaterecorddata[_j]);}}}this.setState({recordDataTemp:recordDataTemp,recordData:recordData,updaterecorddatafromstate:updaterecorddata});}}}},{key:\"render\",value:function render(){var _this$state4=this.state,recordData=_this$state4.recordData,noofRowsPerPage=_this$state4.noofRowsPerPage,startOfRows=_this$state4.startOfRows,sortedColumn=_this$state4.sortedColumn,downloadTableasCSV=_this$state4.downloadTableasCSV;console.log(recordData);var _this$props2=this.props,columnMetadata=_this$props2.columnMetadata,activeTableviewName=_this$props2.activeTableviewName,tablehtmlid=_this$props2.tablehtmlid,clientstatename=_this$props2.clientstatename,clientstatetype=_this$props2.clientstatetype,tableName=_this$props2.tableName,rowhtmlid1=_this$props2.rowhtmlid1,rowhtmlid2=_this$props2.rowhtmlid2,viewnamedropdownchangeaction=_this$props2.viewnamedropdownchangeaction;//  alert(JSON.stringify(this.props));\n//  alert(JSON.stringify(viewnamedropdownchangeaction));\nvar csvDownloadString=\"\";var tablemetaData=columnMetadata;var tableData=recordData;var thNameList=[];var thNameListObject=[];var endOfRows=parseInt(startOfRows)+parseInt(noofRowsPerPage)-1;var isShowSelectionCheckbox=true;// table dropdown html\nvar tableMetaDataArray=[];var tableMetaDataArraySorted=[];for(var i in tablemetaData){tableMetaDataArray.push(tablemetaData[i]);}console.log(tableMetaDataArray);// soring table metadata by order value so that first will be default shown\ntableMetaDataArraySorted=sortArray(tableMetaDataArray,\"order\",\"integer\");console.log(tableMetaDataArraySorted);// prepare th data, buttondata\nvar buttonsHtml=[];var thRowHtml=[];var tableViewSelectionDropdownHtml=[];var tableViewSelectionDropdownItemHtml=[];var tableViewSelectionDropdownButtonItemHtml=[];for(var _i3=0;_i3<tableMetaDataArraySorted.length;_i3++){var metadataItem=tableMetaDataArraySorted[_i3];if(activeTableviewName===metadataItem.name){//tableviewdropdown\ntableViewSelectionDropdownItemHtml.push(/*#__PURE__*/_jsx(\"option\",{value:metadataItem.name,selected:true,children:metadataItem.label}));tableViewSelectionDropdownButtonItemHtml.push(/*#__PURE__*/_jsx(\"button\",{onClick:this.tableActionBtnClick,\"data-name\":metadataItem.name,\"data-actionid\":\"\",\"data-actiontype\":\"\",children:metadataItem.label}));// button array\nvar buttonsArray=[];var buttonsArraySorted=[];for(var buttonI in metadataItem.buttons){buttonsArray.push(metadataItem.buttons[buttonI]);}buttonsArraySorted=sortArray(buttonsArray,\"order\",\"integer\");console.log(buttonsArray);console.log(buttonsArraySorted);//buttonarrayhtml\nfor(var _i4=0;_i4<buttonsArraySorted.length;_i4++){console.log(_i4);console.log(buttonsArraySorted[_i4]);buttonsHtml.push(/*#__PURE__*/_jsx(\"button\",{onClick:this.tableActionBtnClick,\"data-name\":buttonsArraySorted[_i4].name,\"data-actionid\":buttonsArraySorted[_i4].action.id,\"data-actiontype\":buttonsArraySorted[_i4].action.type,children:buttonsArraySorted[_i4].label}));}// th html\nvar thArray=[];var thArraySorted=[];var thItemHtml=[];for(var columnI in metadataItem.columns){thArray.push(metadataItem.columns[columnI]);}thArraySorted=sortArray(thArray,\"order\",\"integer\");console.log(thArray);console.log(thArraySorted);if(isShowSelectionCheckbox){thItemHtml.push(/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:this.selectAllRows,\"data-tablehtmlid\":tablehtmlid,\"data-clientstatename\":clientstatename,\"data-clientstatetype\":clientstatetype})}));}for(var _i5=0;_i5<thArraySorted.length;_i5++){console.log(_i5);console.log(thArraySorted[_i5]);thNameListObject[thArraySorted[_i5].name]=thArraySorted[_i5];console.log(thNameListObject);thNameList.push(thArraySorted[_i5].name);// prepare thitems if tablemetadata\nthItemHtml.push(/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"org-cursor hoverclass org-fr org-fai-c \",children:[/*#__PURE__*/_jsx(\"span\",{onClick:this.tableThClick,\"data-name\":thArraySorted[_i5].name,children:thArraySorted[_i5].label.toUpperCase()}),sortedColumn==thArraySorted[_i5].name?/*#__PURE__*/_jsx(GetGoogleIcon,{name:\"unfold_more\",onClick:this.tableThClick,\"data-name\":thArraySorted[_i5].name}):\"\"]})}));}// prepare th row if  table metadata\nthRowHtml.push(/*#__PURE__*/_jsx(\"tr\",{style:{backgroundColor:\"grey\"},children:thItemHtml}));}else{//tableviewdropdown\ntableViewSelectionDropdownItemHtml.push(/*#__PURE__*/_jsx(\"option\",{value:metadataItem.name,children:metadataItem.label}));tableViewSelectionDropdownButtonItemHtml.push(/*#__PURE__*/_jsx(\"button\",{onClick:this.tableActionBtnClick,\"data-name\":metadataItem.name,\"data-actionid\":\"\",\"data-actiontype\":\"\",children:metadataItem.label}));}}console.log(tablemetaData);tableViewSelectionDropdownHtml.push(/*#__PURE__*/_jsx(\"select\",{onChange:this.onTabledropdownChange,\"data-actionid\":viewnamedropdownchangeaction.id,\"data-tablename\":tableName,children:tableViewSelectionDropdownItemHtml}));var totalRowHtml=[];var thItemHtmlIfnoTablemetadata=[];// preparing table th html if columnmetadata is not given\nif(!tablemetaData&&tableData){for(var _i6=0;_i6<tableData.length;_i6++){var tableDataItem=tableData[_i6];console.log(tableDataItem);if(isShowSelectionCheckbox){thItemHtmlIfnoTablemetadata.push(/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:this.selectAllRows,\"data-tablehtmlid\":tablehtmlid,\"data-clientstatename\":clientstatename,\"data-clientstatetype\":clientstatetype})}));}for(var j in tableDataItem){if(!thNameList.toString().includes(j)){thNameList.push(j);thItemHtmlIfnoTablemetadata.push(/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"org-cursor hoverclass org-fr org-fai-c\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:this.tableThClick,\"data-name\":j,children:j.toUpperCase()}),sortedColumn==j?/*#__PURE__*/_jsx(GetGoogleIcon,{name:\"unfold_more\",onClick:this.tableThClick,\"data-name\":j}):\"\"]})}));}}}// prepare th row if no table metadata\nthRowHtml.push(/*#__PURE__*/_jsx(\"tr\",{style:{backgroundColor:\"grey\"},\"data-tablehtmlid\":tablehtmlid,children:thItemHtmlIfnoTablemetadata}));}totalRowHtml.push(thRowHtml);// preparing table body\nvar totalRows=0;var csvThDownloadString=\"\";var csvTrDownloadArray=[];var csvTrDownloadString=\"\";if(tableData){console.log(tableData);console.log(thNameList);csvThDownloadString=thNameList.join(\",\")+\"\\n\";console.log(csvThDownloadString);var tdRowhtml=[];var tdHtml=[];totalRows=tableData.length;for(var _tableDataItem=startOfRows;_tableDataItem<=endOfRows;_tableDataItem++){if(tableData[_tableDataItem]){console.log(_tableDataItem);console.log(tableData[_tableDataItem]);var trItem=tableData[_tableDataItem];tdHtml=[];tdHtml.push(/*#__PURE__*/_jsx(\"td\",{\"data-tablename\":tableName,children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:this.selectRow,className:\"tablecompinputcheckbox\",\"data-tablehtmlid\":tablehtmlid,\"data-rowhtmlid1\":trItem[rowhtmlid1],\"data-rowhtmlid2\":trItem[rowhtmlid2],\"data-clientstatename\":clientstatename,\"data-clientstatetype\":clientstatetype})}));var csvTdDownloadArrayItem=[];var csvTdDownloadStringItem=\"\";for(var thItem in thNameList){csvTdDownloadArrayItem.push(trItem[thNameList[thItem]]);var listnviewactionid=\"\";if(thNameListObject[thNameList[thItem]].listnviewaction&&thNameListObject[thNameList[thItem]].listnviewaction.id){listnviewactionid=thNameListObject[thNameList[thItem]].listnviewaction.id;}tdHtml.push(/*#__PURE__*/_jsx(\"td\",{onClick:this.tableTdNameLinkClick,\"data-id\":trItem.id,\"data-label\":trItem[thNameList[thItem]],\"data-tablename\":tableName,\"data-actionid\":thNameListObject[thNameList[thItem]].action.id,children:trItem[thNameList[thItem]]}));}csvTdDownloadStringItem=csvTdDownloadArrayItem.join(\",\");csvTrDownloadArray.push(csvTdDownloadStringItem);tdRowhtml.push(/*#__PURE__*/_jsx(\"tr\",{children:tdHtml}));}}csvTrDownloadString=csvTrDownloadArray.join(\"\\n\");totalRowHtml.push(tdRowhtml);csvDownloadString=csvThDownloadString+csvTrDownloadString;if(downloadTableasCSV==true){var element=document.createElement(\"a\");element.setAttribute(\"href\",\"data:text/plain;charset=utf-8, \".concat(csvDownloadString));element.setAttribute(\"download\",\"fileName\".concat(\".csv\"));element.style.display=\"none\";document.body.appendChild(element);element.click();document.body.removeChild(element);this.setState({downloadTableasCSV:false});}}console.log(this.props);return/*#__PURE__*/_jsx(\"div\",{className:\"org-frnw\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p\",children:[buttonsHtml,/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr org-fjc-sb\",children:[tableViewSelectionDropdownHtml,/*#__PURE__*/_jsx(GetAlphabetPanel,{aplhabetOnClickjs:this.alphabetPanelClick})]}),/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:\"300px\",overflow:\"auto\"},children:/*#__PURE__*/_jsx(\"table\",{id:\"table1\",style:{width:\"100%\"},children:totalRowHtml})}),/*#__PURE__*/_jsxs(\"div\",{className:\"org-fr org-fjc-c  org-fai-c \",children:[/*#__PURE__*/_jsx(Paginationcomp,{clkHandler:this.tablepaginationLinkClick,rowprops:{startOfRows:startOfRows,noofRowsPerPage:noofRowsPerPage,totalRows:totalRows}}),/*#__PURE__*/_jsxs(\"select\",{style:{paddingLeft:\"10px\"},onChange:this.tableNoofRowsPerPageChange,value:noofRowsPerPage,children:[/*#__PURE__*/_jsx(\"option\",{children:\"5\"}),/*#__PURE__*/_jsx(\"option\",{children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{children:\"50\"}),/*#__PURE__*/_jsx(\"option\",{children:\"100\"})]})]}),true?/*#__PURE__*/_jsx(\"button\",{onClick:this.tableActionBtnClick,\"data-name\":\"\",\"data-actionid\":\"\",\"data-actiontype\":\"morerecordsbutton\",children:\"More\"}):\"\"]})});}}]);return F;}(React.Component);export{F as default};","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/tablecomp.js"],"names":["React","sortArray","GetAlphabetPanel","Paginationcomp","GetLocalIcon","GetGoogleIcon","F","props","onTabledropdownChange","e","tableOnclick","tableName","target","dataset","tablename","itemLabel","itemName","value","itemType","actionid","tableActionBtnClick","itemListData","recordDataTemp","state","name","tableCheckBoxElements","document","querySelectorAll","i","length","j","rowhtmlid1","checked","push","console","log","itemData","setState","downloadTableasCSV","actiontype","itemId","alphabetPanelClick","a","sortedColumn","recordData","sortedColumnValue","toLowerCase","startsWith","tableThClick","recordDataSorted","tableTdNameLinkClick","label","id","tableNoofRowsPerPageChange","noofRowsPerPage","startOfRows","tablepaginationLinkClick","buttonName","totalRows","nextstartOfRows","parseInt","previousstartOfRows","selectAllRows","tablehtmlid","selectRow","selectedrecordData","rowhtmlid2","updaterecorddatafromstate","morerecorddatafromstate","prevProps","morerecorddata","updaterecorddata","prevmorerecorddata","prevupdaterecorddata","JSON","stringify","Object","assign","columnMetadata","activeTableviewName","clientstatename","clientstatetype","viewnamedropdownchangeaction","csvDownloadString","tablemetaData","tableData","thNameList","thNameListObject","endOfRows","isShowSelectionCheckbox","tableMetaDataArray","tableMetaDataArraySorted","buttonsHtml","thRowHtml","tableViewSelectionDropdownHtml","tableViewSelectionDropdownItemHtml","tableViewSelectionDropdownButtonItemHtml","metadataItem","buttonsArray","buttonsArraySorted","buttonI","buttons","action","type","thArray","thArraySorted","thItemHtml","columnI","columns","toUpperCase","backgroundColor","totalRowHtml","thItemHtmlIfnoTablemetadata","tableDataItem","toString","includes","csvThDownloadString","csvTrDownloadArray","csvTrDownloadString","join","tdRowhtml","tdHtml","trItem","csvTdDownloadArrayItem","csvTdDownloadStringItem","thItem","listnviewactionid","listnviewaction","element","createElement","setAttribute","style","display","body","appendChild","click","removeChild","maxHeight","overflow","width","paddingLeft","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport { sortArray, GetAlphabetPanel } from \"../js/index\";\nimport Paginationcomp from \"./pagination\";\nimport { GetLocalIcon, GetGoogleIcon } from \"./icons\";\n\nexport default class F extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startOfRows: 0,\n      noofRowsPerPage: 10,\n      totalRows: 0,\n      downloadTableasCSV: false,\n      recordData: [],\n      recordDataTemp: [],\n      selectedrecordData: [],\n      updaterecorddatafromstate: [],\n      morerecorddatafromstate: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.recordData) {\n      let totalRows = this.props.recordData.length;\n      this.setState({\n        totalRows: totalRows,\n        recordData: this.props.recordData,\n        recordDataTemp: this.props.recordData,\n        sortedColumn: \"\",\n      });\n    }\n  }\n\n  onTabledropdownChange = (e) => {\n    this.props.tableOnclick({\n      tableName: e.target.dataset.tablename,\n      itemLabel: \"\",\n      itemName: e.target.value,\n      itemType: \"tabledropdown\",\n      actionid: e.target.dataset.actionid,\n    });\n  };\n\n  tableActionBtnClick = (e) => {\n    let itemListData = [];\n    let { recordDataTemp } = this.state;\n    if (\n      e.target.dataset.name == \"upload\" ||\n      e.target.dataset.name == \"download\"\n    ) {\n      let tableCheckBoxElements = document.querySelectorAll(\n        \".tablecompinputcheckbox\"\n      );\n      for (let i = 0; i < tableCheckBoxElements.length; i++) {\n        for (let j = 0; j < recordDataTemp.length; j++) {\n          if (\n            tableCheckBoxElements[i].dataset.rowhtmlid1 ==\n              recordDataTemp[j][this.props.rowhtmlid1] &&\n            tableCheckBoxElements[i].checked\n          ) {\n            itemListData.push(recordDataTemp[j]);\n          }\n        }\n      }\n      console.log(itemListData);\n      if (e.target.dataset.name == \"upload\") {\n        this.props.tableOnclick({\n          itemLabel: \"\",\n          itemName: e.target.dataset.name,\n          itemType: \"tablebutton\",\n          itemData: \"\",\n          itemListData: itemListData,\n        });\n      }\n\n      if (e.target.dataset.name == \"download\") {\n        this.setState({ downloadTableasCSV: true });\n      }\n    } else {\n      this.props.tableOnclick({\n        itemLabel: \"\",\n        itemName: e.target.dataset.name,\n        itemType: e.target.dataset.actiontype,\n        itemId: e.target.dataset.actionid,\n        actionid: e.target.dataset.actionid,\n        itemData: \"\",\n        itemListData: itemListData,\n      });\n    }\n  };\n\n  alphabetPanelClick = (a) => {\n    console.log(a);\n    let { recordDataTemp, sortedColumn } = this.state;\n    if (sortedColumn != \"\") {\n      let recordData = [];\n      if (a == \"All\") {\n        this.setState({ recordData: recordDataTemp });\n      } else {\n        for (let i in recordDataTemp) {\n          let sortedColumnValue = recordDataTemp[i][sortedColumn];\n          if (sortedColumnValue) {\n            if (sortedColumnValue.toLowerCase().startsWith(a.toLowerCase())) {\n              recordData.push(recordDataTemp[i]);\n            }\n          }\n        }\n\n        this.setState({ recordData: recordData });\n      }\n    }\n  };\n\n  tableThClick = (e) => {\n    console.log(e.target.dataset.name);\n    let { recordData } = this.state;\n    console.log(recordData);\n    let recordDataSorted = sortArray(\n      recordData,\n      e.target.dataset.name,\n      \"string\"\n    );\n    console.log(recordDataSorted);\n    this.setState({\n      recordData: recordDataSorted,\n      sortedColumn: e.target.dataset.name,\n    });\n  };\n\n  tableTdNameLinkClick = (e) => {\n    this.props.tableOnclick({\n      itemLabel: e.target.dataset.label,\n      itemName: e.target.dataset.id,\n      actionid: e.target.dataset.actionid,\n      itemType: \"tabletdnamelink\",\n    });\n  };\n\n  tableNoofRowsPerPageChange = (e) => {\n    this.setState({ noofRowsPerPage: e.target.value, startOfRows: 0 });\n  };\n\n  tablepaginationLinkClick = (buttonName) => {\n    console.log(buttonName);\n    let { startOfRows, noofRowsPerPage, totalRows } = this.state;\n    let nextstartOfRows = parseInt(startOfRows) + parseInt(noofRowsPerPage);\n    let previousstartOfRows = parseInt(startOfRows) - parseInt(noofRowsPerPage);\n    if (buttonName == \"first\") {\n      this.setState({ startOfRows: 0 });\n    }\n    if (buttonName == \"next\") {\n      this.setState({ startOfRows: nextstartOfRows });\n    }\n    if (buttonName == \"previous\") {\n      this.setState({ startOfRows: previousstartOfRows });\n    }\n    if (buttonName == \"last\") {\n      this.setState({ startOfRows: totalRows - noofRowsPerPage });\n    }\n  };\n\n  selectAllRows = (e) => {\n    console.log(e.target.dataset);\n    let tableCheckBoxElements = document.querySelectorAll(\n      \".tablecompinputcheckbox\"\n    );\n    console.log(tableCheckBoxElements);\n    for (let i = 0; i < tableCheckBoxElements.length; i++) {\n      if (\n        e.target.dataset.tablehtmlid ==\n        tableCheckBoxElements[i].dataset.tablehtmlid\n      ) {\n        tableCheckBoxElements[i].checked = e.target.checked;\n      }\n    }\n    this.selectRow(e);\n  };\n\n  selectRow = (e) => {\n    console.log(e.target.dataset);\n    let { recordDataTemp } = this.state;\n    let selectedrecordData = [];\n\n    let tableCheckBoxElements = document.querySelectorAll(\n      \".tablecompinputcheckbox\"\n    );\n    console.log(tableCheckBoxElements);\n    for (let i = 0; i < tableCheckBoxElements.length; i++) {\n      if (\n        e.target.dataset.tablehtmlid ==\n        tableCheckBoxElements[i].dataset.tablehtmlid\n      ) {\n        if (tableCheckBoxElements[i].checked == true) {\n          console.log(tableCheckBoxElements[i]);\n          for (let j = 0; j < recordDataTemp.length; j++) {\n            if (\n              tableCheckBoxElements[i].dataset.rowhtmlid1 ==\n                recordDataTemp[j][this.props.rowhtmlid1] &&\n              tableCheckBoxElements[i].dataset.rowhtmlid2 ==\n                recordDataTemp[j][this.props.rowhtmlid2]\n            ) {\n              selectedrecordData.push(recordDataTemp[j]);\n            }\n          }\n        }\n      }\n    }\n    this.setState({ selectedrecordData: selectedrecordData });\n\n    console.log(selectedrecordData);\n\n    // this.props.tableOnChange({\n    //   clientstatename: e.target.dataset.clientstatename,\n    //   clientstatetype: e.target.dataset.clientstatetype,\n    //   recordDataArray: selectedrecordData,\n    //   itemType: \"tablecheckbox\",\n    // });\n  };\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.morerecorddata);\n    let {\n      recordData,\n      recordDataTemp,\n      updaterecorddatafromstate,\n      morerecorddatafromstate,\n    } = this.state;\n    let { morerecorddata, updaterecorddata } = this.props;\n    let { prevmorerecorddata, prevupdaterecorddata } = prevProps;\n    if (\n      JSON.stringify(morerecorddatafromstate) != JSON.stringify(morerecorddata)\n    ) {\n      for (let i in morerecorddata) {\n        recordDataTemp.push(morerecorddata[i]);\n      }\n      this.setState({\n        recordDataTemp: recordDataTemp,\n        recordData: recordData,\n        morerecorddatafromstate: morerecorddata,\n      });\n    }\n\n    if (\n      JSON.stringify(updaterecorddatafromstate) !=\n      JSON.stringify(updaterecorddata)\n    ) {\n      for (let i in recordDataTemp) {\n        for (let j in updaterecorddata) {\n          if (recordDataTemp[i].id == updaterecorddata[j].id) {\n            recordDataTemp[i] = Object.assign(\n              recordDataTemp[i],\n              updaterecorddata[j]\n            );\n          }\n        }\n\n        for (let i in recordData) {\n          for (let j in updaterecorddata) {\n            if (recordData[i].id == updaterecorddata[j].id) {\n              recordData[i] = Object.assign(recordData[i], updaterecorddata[j]);\n            }\n          }\n        }\n\n        this.setState({\n          recordDataTemp: recordDataTemp,\n          recordData: recordData,\n          updaterecorddatafromstate: updaterecorddata,\n        });\n      }\n    }\n  }\n\n  render() {\n    let {\n      recordData,\n      noofRowsPerPage,\n      startOfRows,\n      sortedColumn,\n      downloadTableasCSV,\n    } = this.state;\n    console.log(recordData);\n    let {\n      columnMetadata,\n      activeTableviewName,\n      tablehtmlid,\n      clientstatename,\n      clientstatetype,\n      tableName,\n      rowhtmlid1,\n      rowhtmlid2,\n      viewnamedropdownchangeaction,\n    } = this.props;\n    //  alert(JSON.stringify(this.props));\n    //  alert(JSON.stringify(viewnamedropdownchangeaction));\n    let csvDownloadString = \"\";\n    let tablemetaData = columnMetadata;\n    let tableData = recordData;\n    let thNameList = [];\n    let thNameListObject = [];\n\n    let endOfRows = parseInt(startOfRows) + parseInt(noofRowsPerPage) - 1;\n    let isShowSelectionCheckbox = true;\n    // table dropdown html\n    let tableMetaDataArray = [];\n    let tableMetaDataArraySorted = [];\n    for (let i in tablemetaData) {\n      tableMetaDataArray.push(tablemetaData[i]);\n    }\n    console.log(tableMetaDataArray);\n\n    // soring table metadata by order value so that first will be default shown\n    tableMetaDataArraySorted = sortArray(\n      tableMetaDataArray,\n      \"order\",\n      \"integer\"\n    );\n    console.log(tableMetaDataArraySorted);\n\n    // prepare th data, buttondata\n    let buttonsHtml = [];\n    let thRowHtml = [];\n    let tableViewSelectionDropdownHtml = [];\n    let tableViewSelectionDropdownItemHtml = [];\n    let tableViewSelectionDropdownButtonItemHtml = [];\n\n    for (let i = 0; i < tableMetaDataArraySorted.length; i++) {\n      let metadataItem = tableMetaDataArraySorted[i];\n      if (activeTableviewName === metadataItem.name) {\n        //tableviewdropdown\n        tableViewSelectionDropdownItemHtml.push(\n          <option value={metadataItem.name} selected>\n            {metadataItem.label}\n          </option>\n        );\n        tableViewSelectionDropdownButtonItemHtml.push(\n          <button\n            onClick={this.tableActionBtnClick}\n            data-name={metadataItem.name}\n            data-actionid=\"\"\n            data-actiontype=\"\"\n          >\n            {metadataItem.label}\n          </button>\n        );\n\n        // button array\n        let buttonsArray = [];\n        let buttonsArraySorted = [];\n        for (let buttonI in metadataItem.buttons) {\n          buttonsArray.push(metadataItem.buttons[buttonI]);\n        }\n\n        buttonsArraySorted = sortArray(buttonsArray, \"order\", \"integer\");\n        console.log(buttonsArray);\n        console.log(buttonsArraySorted);\n        //buttonarrayhtml\n        for (let i = 0; i < buttonsArraySorted.length; i++) {\n          console.log(i);\n          console.log(buttonsArraySorted[i]);\n          buttonsHtml.push(\n            <button\n              onClick={this.tableActionBtnClick}\n              data-name={buttonsArraySorted[i].name}\n              data-actionid={buttonsArraySorted[i].action.id}\n              data-actiontype={buttonsArraySorted[i].action.type}\n            >\n              {buttonsArraySorted[i].label}\n            </button>\n          );\n        }\n\n        // th html\n        let thArray = [];\n        let thArraySorted = [];\n        let thItemHtml = [];\n        for (let columnI in metadataItem.columns) {\n          thArray.push(metadataItem.columns[columnI]);\n        }\n\n        thArraySorted = sortArray(thArray, \"order\", \"integer\");\n        console.log(thArray);\n        console.log(thArraySorted);\n        if (isShowSelectionCheckbox) {\n          thItemHtml.push(\n            <th>\n              <input\n                type=\"checkbox\"\n                onChange={this.selectAllRows}\n                data-tablehtmlid={tablehtmlid}\n                data-clientstatename={clientstatename}\n                data-clientstatetype={clientstatetype}\n              />\n            </th>\n          );\n        }\n\n        for (let i = 0; i < thArraySorted.length; i++) {\n          console.log(i);\n          console.log(thArraySorted[i]);\n          thNameListObject[thArraySorted[i].name] = thArraySorted[i];\n          console.log(thNameListObject);\n          thNameList.push(thArraySorted[i].name);\n          // prepare thitems if tablemetadata\n          thItemHtml.push(\n            <th>\n              <div className=\"org-cursor hoverclass org-fr org-fai-c \">\n                <span\n                  onClick={this.tableThClick}\n                  data-name={thArraySorted[i].name}\n                >\n                  {thArraySorted[i].label.toUpperCase()}\n                </span>\n                {sortedColumn == thArraySorted[i].name ? (\n                  <GetGoogleIcon\n                    name=\"unfold_more\"\n                    onClick={this.tableThClick}\n                    data-name={thArraySorted[i].name}\n                  />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </th>\n          );\n        }\n        // prepare th row if  table metadata\n        thRowHtml.push(\n          <tr style={{ backgroundColor: \"grey\" }}>{thItemHtml}</tr>\n        );\n      } else {\n        //tableviewdropdown\n        tableViewSelectionDropdownItemHtml.push(\n          <option value={metadataItem.name}>{metadataItem.label}</option>\n        );\n        tableViewSelectionDropdownButtonItemHtml.push(\n          <button\n            onClick={this.tableActionBtnClick}\n            data-name={metadataItem.name}\n            data-actionid=\"\"\n            data-actiontype=\"\"\n          >\n            {metadataItem.label}\n          </button>\n        );\n      }\n    }\n    console.log(tablemetaData);\n    tableViewSelectionDropdownHtml.push(\n      <select\n        onChange={this.onTabledropdownChange}\n        data-actionid={viewnamedropdownchangeaction.id}\n        data-tablename={tableName}\n      >\n        {tableViewSelectionDropdownItemHtml}\n      </select>\n    );\n\n    let totalRowHtml = [];\n\n    let thItemHtmlIfnoTablemetadata = [];\n\n    // preparing table th html if columnmetadata is not given\n    if (!tablemetaData && tableData) {\n      for (let i = 0; i < tableData.length; i++) {\n        let tableDataItem = tableData[i];\n        console.log(tableDataItem);\n        if (isShowSelectionCheckbox) {\n          thItemHtmlIfnoTablemetadata.push(\n            <th>\n              <input\n                type=\"checkbox\"\n                onChange={this.selectAllRows}\n                data-tablehtmlid={tablehtmlid}\n                data-clientstatename={clientstatename}\n                data-clientstatetype={clientstatetype}\n              />\n            </th>\n          );\n        }\n        for (let j in tableDataItem) {\n          if (!thNameList.toString().includes(j)) {\n            thNameList.push(j);\n            thItemHtmlIfnoTablemetadata.push(\n              <th>\n                <div className=\"org-cursor hoverclass org-fr org-fai-c\">\n                  <span onClick={this.tableThClick} data-name={j}>\n                    {j.toUpperCase()}\n                  </span>\n                  {sortedColumn == j ? (\n                    <GetGoogleIcon\n                      name=\"unfold_more\"\n                      onClick={this.tableThClick}\n                      data-name={j}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </th>\n            );\n          }\n        }\n      }\n      // prepare th row if no table metadata\n      thRowHtml.push(\n        <tr style={{ backgroundColor: \"grey\" }} data-tablehtmlid={tablehtmlid}>\n          {thItemHtmlIfnoTablemetadata}\n        </tr>\n      );\n    }\n\n    totalRowHtml.push(thRowHtml);\n\n    // preparing table body\n    let totalRows = 0;\n    let csvThDownloadString = \"\";\n    let csvTrDownloadArray = [];\n    let csvTrDownloadString = \"\";\n\n    if (tableData) {\n      console.log(tableData);\n      console.log(thNameList);\n\n      csvThDownloadString = thNameList.join(\",\") + \"\\n\";\n      console.log(csvThDownloadString);\n\n      let tdRowhtml = [];\n      let tdHtml = [];\n      totalRows = tableData.length;\n\n      for (\n        let tableDataItem = startOfRows;\n        tableDataItem <= endOfRows;\n        tableDataItem++\n      ) {\n        if (tableData[tableDataItem]) {\n          console.log(tableDataItem);\n          console.log(tableData[tableDataItem]);\n          let trItem = tableData[tableDataItem];\n          tdHtml = [];\n\n          tdHtml.push(\n            <td data-tablename={tableName}>\n              <input\n                type=\"checkbox\"\n                onChange={this.selectRow}\n                className=\"tablecompinputcheckbox\"\n                data-tablehtmlid={tablehtmlid}\n                data-rowhtmlid1={trItem[rowhtmlid1]}\n                data-rowhtmlid2={trItem[rowhtmlid2]}\n                data-clientstatename={clientstatename}\n                data-clientstatetype={clientstatetype}\n              />\n            </td>\n          );\n\n          let csvTdDownloadArrayItem = [];\n          let csvTdDownloadStringItem = \"\";\n          for (let thItem in thNameList) {\n            csvTdDownloadArrayItem.push(trItem[thNameList[thItem]]);\n            let listnviewactionid = \"\";\n            if (\n              thNameListObject[thNameList[thItem]].listnviewaction &&\n              thNameListObject[thNameList[thItem]].listnviewaction.id\n            ) {\n              listnviewactionid =\n                thNameListObject[thNameList[thItem]].listnviewaction.id;\n            }\n            tdHtml.push(\n              <td\n                onClick={this.tableTdNameLinkClick}\n                data-id={trItem.id}\n                data-label={trItem[thNameList[thItem]]}\n                data-tablename={tableName}\n                data-actionid={thNameListObject[thNameList[thItem]].action.id}\n              >\n                {trItem[thNameList[thItem]]}\n                {/* {listnviewactionid == \"\" ? (\n                  \"\"\n                ) : (\n                  <span\n                    onClick={this.tableTdNameLinkClick}\n                    data-id={trItem.id}\n                    data-label={trItem[thNameList[thItem]]}\n                    data-tablename={tableName}\n                    data-actionid={listnviewactionid}\n                  >\n                    listnview\n                  </span>\n                )} */}\n              </td>\n            );\n          }\n          csvTdDownloadStringItem = csvTdDownloadArrayItem.join(\",\");\n          csvTrDownloadArray.push(csvTdDownloadStringItem);\n          tdRowhtml.push(<tr>{tdHtml}</tr>);\n        }\n      }\n      csvTrDownloadString = csvTrDownloadArray.join(\"\\n\");\n      totalRowHtml.push(tdRowhtml);\n\n      csvDownloadString = csvThDownloadString + csvTrDownloadString;\n\n      if (downloadTableasCSV == true) {\n        const element = document.createElement(\"a\");\n        element.setAttribute(\n          \"href\",\n          `data:text/plain;charset=utf-8, ${csvDownloadString}`\n        );\n        element.setAttribute(\"download\", `${\"fileName\"}.csv`);\n        element.style.display = \"none\";\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n        this.setState({ downloadTableasCSV: false });\n      }\n    }\n    console.log(this.props);\n    return (\n      <div className=\"org-frnw\">\n        {/* <div className=\"org-flexbasis-100p org-mflexbasis-15p org-lflexbasis-15p org-fc\">\n          {tableViewSelectionDropdownButtonItemHtml}\n        </div> */}\n        <div className=\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p\">\n          {buttonsHtml}\n          <div className=\"org-fr org-fjc-sb\">\n            {tableViewSelectionDropdownHtml}\n            <GetAlphabetPanel aplhabetOnClickjs={this.alphabetPanelClick} />\n          </div>\n          <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\n            <table id=\"table1\" style={{ width: \"100%\" }}>\n              {totalRowHtml}\n            </table>\n          </div>\n          <div className=\"org-fr org-fjc-c  org-fai-c \">\n            <Paginationcomp\n              clkHandler={this.tablepaginationLinkClick}\n              rowprops={{\n                startOfRows: startOfRows,\n                noofRowsPerPage: noofRowsPerPage,\n                totalRows: totalRows,\n              }}\n            />\n            <select\n              style={{ paddingLeft: \"10px\" }}\n              onChange={this.tableNoofRowsPerPageChange}\n              value={noofRowsPerPage}\n            >\n              <option>5</option>\n              <option>10</option>\n              <option>20</option>\n              <option>50</option>\n              <option>100</option>\n            </select>\n          </div>\n          {true ? (\n            <button\n              onClick={this.tableActionBtnClick}\n              data-name=\"\"\n              data-actionid=\"\"\n              data-actiontype=\"morerecordsbutton\"\n            >\n              More\n            </button>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}