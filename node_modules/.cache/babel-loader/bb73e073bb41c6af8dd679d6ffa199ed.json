{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddatalistortable2.js\";\nimport React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport Tablecomp from \"./tablecomp2\";\nimport { getLocalData, serverButtonHandler, filterArraybyObject } from \"../js/index\";\nimport { GetFontAwesomeIcon, GetGoogleIcon } from \"./icons\";\nimport Recorddataeditview from \"./recorddataeditview2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.clickHandler = (e, props) => {\n      let {\n        multiselectclickedrecordids\n      } = this.state;\n      let dataset = e.target.dataset;\n      let {\n        tablename,\n        viewname,\n        defaulttableviewnamebeginswith,\n        comphtmlid\n      } = this.props.compprops;\n\n      if (dataset.type === \"new\") {\n        this.setState({\n          showUI: false\n        }, () => {\n          this.setState({\n            clickedrecordid: \"\",\n            showUI: true,\n            action: \"new\"\n          });\n        });\n      }\n\n      if (dataset.type === \"view\") {\n        this.setState({\n          showUI: false\n        }, () => {\n          this.setState({\n            clickedrecordid: dataset.name,\n            showUI: true,\n            action: \"view\"\n          });\n        });\n      }\n\n      if (dataset.type === \"multiselectview\") {\n        if (multiselectclickedrecordids.indexOf(dataset.name) !== -1) {\n          let pos = multiselectclickedrecordids.indexOf(dataset.name);\n          multiselectclickedrecordids.splice(pos, 1);\n        } else {\n          multiselectclickedrecordids.push(dataset.name);\n        }\n\n        this.setState({\n          showUI: false\n        }, () => {\n          this.setState({\n            multiselectclickedrecordids: multiselectclickedrecordids,\n            showUI: true,\n            action: \"multiselectview\"\n          });\n          this.props.createSyncEvent({\n            comphtmlid: comphtmlid,\n            data: {\n              multiselectclickedrecordids: multiselectclickedrecordids\n            }\n          });\n        });\n      }\n\n      if (dataset.name === \"new-create\" || dataset.name === \"edit-save\") {\n        this.getRecordListMetadataAndDatafromServer({\n          tablename: tablename,\n          viewname: viewname,\n          defaulttableviewnamebeginswith: defaulttableviewnamebeginswith,\n          clickedrecordid: props.recordid\n        });\n      }\n    };\n\n    this.changeHanlder = e => {// let dataset = e.target.dataset;\n      // let { recordData } = props;\n      // console.log(recordData);\n    };\n\n    this.openwindow = props => {\n      let {\n        type\n      } = props;\n      this.setState({\n        windowtype: type\n      });\n    };\n\n    this.state = {\n      recordDataList: [],\n      recordData: {},\n      action: \"\",\n      activetableviewItem: {},\n      windowtype: \"hsplit\",\n      clickedrecordid: \"\",\n      showUI: false,\n      multiselectclickedrecordids: []\n    };\n  }\n\n  async componentDidMount() {\n    let clickedrecordid = \"\";\n    let url = new URL(document.location);\n    console.log(url); // var searchParams = new URLSearchParams(url.search);\n    // if (searchParams.get(\"id\")) {\n    //   clickedrecordid = searchParams.get(\"id\");\n    // }\n\n    let {\n      tablename,\n      comphtmlid,\n      recordeditviewprops,\n      showallrecordsubscribe,\n      parentobjectfilter,\n      showallrecords,\n      enablelocaldbdata,\n      listdisplaytype,\n      defaultdatafilter,\n      viewname,\n      defaulttableviewnamebeginswith,\n      recordviewfieldname,\n      showrecordeditview\n    } = this.props.compprops;\n    this.getRecordListMetadataAndDatafromServer({\n      tablename: tablename,\n      viewname: viewname,\n      defaulttableviewnamebeginswith: defaulttableviewnamebeginswith,\n      clickedrecordid: \"\"\n    });\n  }\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let {\n      recordviewfieldname,\n      defaultdatafilter\n    } = this.props.compprops;\n    let {\n      tablename,\n      viewname,\n      defaulttableviewnamebeginswith,\n      clickedrecordid\n    } = props;\n    let tableviewdataParams = {};\n    let dataParams = {};\n    let localdata = getLocalData(this.props);\n    let datasortparamequalsto = \"\",\n        datasortparambeginswith = \"\";\n    tableviewdataParams = {\n      objectName: \"tableview2\",\n      objectData: {},\n      keyConditions: [{\n        field: \"orgname\",\n        value: localdata.orgname,\n        expression: \"=\"\n      }, {\n        field: \"id\",\n        value: defaulttableviewnamebeginswith,\n        expression: \"beginswith\"\n      }],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\"\n    };\n    console.log(tableviewdataParams);\n    let tableviewdataresult = await getRecorddata(tableviewdataParams);\n\n    if (tableviewdataresult.isSuccess === \"false\") {\n      alert(\"data\" + tableviewdataresult.message);\n    } else {\n      let tableviewrecordDataList = tableviewdataresult.dataprops.Items;\n      console.log(tableviewrecordDataList);\n      let activetableviewItem;\n\n      for (let i = 0; i < tableviewrecordDataList.length; i++) {\n        if (viewname === tableviewrecordDataList[i].id) {\n          activetableviewItem = tableviewrecordDataList[i];\n        }\n\n        console.log(activetableviewItem);\n      }\n\n      if (activetableviewItem.keycondition.expression === \"beginswith\") {\n        datasortparambeginswith = activetableviewItem.keycondition.value.replacetext;\n\n        for (let j in activetableviewItem.keycondition.value.replaceparams) {\n          if (activetableviewItem.keycondition.value.replaceparams[j].type === \"localdata\") {\n            console.log(localdata);\n            datasortparambeginswith = datasortparambeginswith.replace(j, localdata[activetableviewItem.keycondition.value.replaceparams[j].name]);\n          }\n        }\n\n        console.log(datasortparambeginswith);\n      }\n\n      if (activetableviewItem.keycondition.expression === \"equalsto\") {}\n\n      console.log(datasortparambeginswith);\n\n      if (datasortparamequalsto != \"\") {\n        dataParams = {\n          objectName: tablename,\n          objectData: {},\n          keyConditions: [{\n            field: \"orgname\",\n            value: localdata.orgname,\n            expression: \"=\"\n          }, {\n            field: \"id\",\n            value: datasortparamequalsto,\n            expression: \"=\"\n          }],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\"\n        };\n      }\n\n      if (datasortparambeginswith != \"\") {\n        dataParams = {\n          objectName: tablename,\n          objectData: {},\n          keyConditions: [{\n            field: \"orgname\",\n            value: localdata.orgname,\n            expression: \"=\"\n          }, {\n            field: \"id\",\n            value: datasortparambeginswith,\n            expression: \"beginswith\"\n          }],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\"\n        };\n      }\n\n      let dataresult = await getRecorddata(dataParams);\n\n      if (dataresult.isSuccess === \"false\") {\n        alert(\"data\" + dataresult.message);\n      } else {\n        //  let recordDataList = dataresult.dataprops.Items;\n        //  console.log(recordDataList);\n        let recordDataList = filterArraybyObject({\n          data: dataresult.dataprops.Items,\n          filter: defaultdatafilter\n        });\n        console.log(recordDataList);\n        this.setState({\n          showUI: false\n        }, () => {\n          if (recordDataList.length > 0) {\n            if (clickedrecordid == \"\") {\n              clickedrecordid = recordDataList[0][recordviewfieldname];\n            }\n\n            this.setState({\n              recordDataList: recordDataList,\n              activetableviewItem: activetableviewItem,\n              clickedrecordid: clickedrecordid,\n              showUI: true,\n              action: \"view\"\n            });\n          } else {\n            this.setState({\n              recordDataList: [],\n              activetableviewItem: activetableviewItem,\n              showUI: true,\n              action: \"list\"\n            });\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    let {\n      recordDataList,\n      activetableviewItem,\n      windowtype,\n      clickedrecordid,\n      showUI,\n      action,\n      multiselectclickedrecordids\n    } = this.state;\n    let {\n      recordviewfieldname,\n      showrecordeditview,\n      listdisplaytype\n    } = this.props.compprops;\n    let recordeditviewprops = this.props.compprops.recordeditviewprops;\n    console.log(multiselectclickedrecordids);\n    console.log(activetableviewItem);\n    let buttonsHtml = [];\n    let columns, buttons;\n\n    if (activetableviewItem.data) {\n      columns = activetableviewItem.data.columns;\n      buttons = activetableviewItem.data.buttons;\n    }\n\n    console.log(buttons);\n\n    if (buttons && Object.keys(buttons).length > 0) {\n      for (let i in buttons) {\n        buttonsHtml.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-name\": buttons[i].name,\n          \"data-type\": buttons[i].name,\n          onClick: e => this.clickHandler(e, {}),\n          children: buttons[i].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    console.log(this.props);\n    let multiselectlistHtml = [];\n\n    if (listdisplaytype === \"multiselectlist\") {\n      if (recordDataList) {\n        for (let i = 0; i < recordDataList.length; i++) {\n          let isclicked = false;\n\n          for (let j = 0; j < multiselectclickedrecordids.length; j++) {\n            if (multiselectclickedrecordids[j] === recordDataList[i].id) {\n              isclicked = true;\n            }\n          }\n\n          if (isclicked === true) {\n            multiselectlistHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-name\": recordDataList[i].id,\n              \"data-type\": \"multiselectview\",\n              onClick: e => this.clickHandler(e, {}),\n              className: \"org-bluebg\",\n              children: recordDataList[i].label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this));\n          } else {\n            multiselectlistHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-name\": recordDataList[i].id,\n              \"data-type\": \"multiselectview\",\n              onClick: e => this.clickHandler(e, {}),\n              children: recordDataList[i].label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showUI === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [windowtype === \"hsplit\" && showrecordeditview === \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-flexbasis-100p org-mflexbasis-30p org-lflexbasis-30p \",\n            children: [buttonsHtml, listdisplaytype === \"table\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Tablecomp, {\n                compprops: {\n                  columns: columns,\n                  buttons: buttons,\n                  recordDataList: recordDataList,\n                  recordviewfieldname: recordviewfieldname\n                },\n                clickHandler: this.clickHandler,\n                changeHanlder: this.changeHanlder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), listdisplaytype === \"multiselectlist\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org-fr\",\n              children: multiselectlistHtml\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-flexbasis-100p org-mflexbasis-70p org-lflexbasis-70p  \",\n            children: /*#__PURE__*/_jsxDEV(Recorddataeditview, { ...this.props,\n              compprops: {\n                tablename: recordeditviewprops.tablename,\n                viewlayoutid: recordeditviewprops.viewlayoutid,\n                editlayoutid: recordeditviewprops.editlayoutid,\n                newlayoutid: recordeditviewprops.newlayoutid,\n                action: action,\n                recordid: clickedrecordid,\n                idbeginswith: recordeditviewprops.idbeginswith //   defaultdatafilter: {},\n\n              },\n              styleprops: {\n                width: \"100%\",\n                height: \"30vh\",\n                backgroundColor: \"\",\n                overflow: \"auto\"\n              },\n              clickHandler: this.clickHandler,\n              changeHanlder: this.changeHanlder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this) : \"\", windowtype === \"hsplit\" && showrecordeditview !== \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p \",\n            children: [buttonsHtml, listdisplaytype === \"table\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Tablecomp, {\n                compprops: {\n                  columns: columns,\n                  buttons: buttons,\n                  recordDataList: recordDataList,\n                  recordviewfieldname: recordviewfieldname\n                },\n                clickHandler: this.clickHandler,\n                changeHanlder: this.changeHanlder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), listdisplaytype === \"multiselectlist\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org-fr\",\n              children: multiselectlistHtml\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/recorddatalistortable2.js"],"names":["React","Component","getRecorddata","createRecord","bulkcreateRecord","Tablecomp","getLocalData","serverButtonHandler","filterArraybyObject","GetFontAwesomeIcon","GetGoogleIcon","Recorddataeditview","F","constructor","props","clickHandler","e","multiselectclickedrecordids","state","dataset","target","tablename","viewname","defaulttableviewnamebeginswith","comphtmlid","compprops","type","setState","showUI","clickedrecordid","action","name","indexOf","pos","splice","push","createSyncEvent","data","getRecordListMetadataAndDatafromServer","recordid","changeHanlder","openwindow","windowtype","recordDataList","recordData","activetableviewItem","componentDidMount","url","URL","document","location","console","log","recordeditviewprops","showallrecordsubscribe","parentobjectfilter","showallrecords","enablelocaldbdata","listdisplaytype","defaultdatafilter","recordviewfieldname","showrecordeditview","tableviewdataParams","dataParams","localdata","datasortparamequalsto","datasortparambeginswith","objectName","objectData","keyConditions","field","value","orgname","expression","filterConditions","pageSize","limit","exclusiveStartKey","tableviewdataresult","isSuccess","alert","message","tableviewrecordDataList","dataprops","Items","i","length","id","keycondition","replacetext","j","replaceparams","replace","dataresult","filter","render","buttonsHtml","columns","buttons","Object","keys","label","multiselectlistHtml","isclicked","viewlayoutid","editlayoutid","newlayoutid","idbeginswith","width","height","backgroundColor","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getRecorddata, createRecord, bulkcreateRecord } from \"../db/index\";\nimport Tablecomp from \"./tablecomp2\";\nimport {\n  getLocalData,\n  serverButtonHandler,\n  filterArraybyObject,\n} from \"../js/index\";\nimport { GetFontAwesomeIcon, GetGoogleIcon } from \"./icons\";\nimport Recorddataeditview from \"./recorddataeditview2\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recordDataList: [],\n      recordData: {},\n      action: \"\",\n      activetableviewItem: {},\n      windowtype: \"hsplit\",\n      clickedrecordid: \"\",\n      showUI: false,\n      multiselectclickedrecordids: [],\n    };\n  }\n\n  async componentDidMount() {\n    let clickedrecordid = \"\";\n    let url = new URL(document.location);\n    console.log(url);\n    // var searchParams = new URLSearchParams(url.search);\n\n    // if (searchParams.get(\"id\")) {\n    //   clickedrecordid = searchParams.get(\"id\");\n    // }\n\n    let {\n      tablename,\n      comphtmlid,\n      recordeditviewprops,\n      showallrecordsubscribe,\n      parentobjectfilter,\n      showallrecords,\n      enablelocaldbdata,\n      listdisplaytype,\n      defaultdatafilter,\n      viewname,\n      defaulttableviewnamebeginswith,\n      recordviewfieldname,\n      showrecordeditview,\n    } = this.props.compprops;\n    this.getRecordListMetadataAndDatafromServer({\n      tablename: tablename,\n      viewname: viewname,\n      defaulttableviewnamebeginswith: defaulttableviewnamebeginswith,\n      clickedrecordid: \"\",\n    });\n  }\n\n  async getRecordListMetadataAndDatafromServer(props) {\n    let { recordviewfieldname, defaultdatafilter } = this.props.compprops;\n    let {\n      tablename,\n      viewname,\n      defaulttableviewnamebeginswith,\n      clickedrecordid,\n    } = props;\n    let tableviewdataParams = {};\n    let dataParams = {};\n    let localdata = getLocalData(this.props);\n\n    let datasortparamequalsto = \"\",\n      datasortparambeginswith = \"\";\n\n    tableviewdataParams = {\n      objectName: \"tableview2\",\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: localdata.orgname,\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: defaulttableviewnamebeginswith,\n          expression: \"beginswith\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    console.log(tableviewdataParams);\n    let tableviewdataresult = await getRecorddata(tableviewdataParams);\n    if (tableviewdataresult.isSuccess === \"false\") {\n      alert(\"data\" + tableviewdataresult.message);\n    } else {\n      let tableviewrecordDataList = tableviewdataresult.dataprops.Items;\n      console.log(tableviewrecordDataList);\n      let activetableviewItem;\n      for (let i = 0; i < tableviewrecordDataList.length; i++) {\n        if (viewname === tableviewrecordDataList[i].id) {\n          activetableviewItem = tableviewrecordDataList[i];\n        }\n        console.log(activetableviewItem);\n      }\n      if (activetableviewItem.keycondition.expression === \"beginswith\") {\n        datasortparambeginswith =\n          activetableviewItem.keycondition.value.replacetext;\n\n        for (let j in activetableviewItem.keycondition.value.replaceparams) {\n          if (\n            activetableviewItem.keycondition.value.replaceparams[j].type ===\n            \"localdata\"\n          ) {\n            console.log(localdata);\n            datasortparambeginswith = datasortparambeginswith.replace(\n              j,\n              localdata[\n                activetableviewItem.keycondition.value.replaceparams[j].name\n              ]\n            );\n          }\n        }\n        console.log(datasortparambeginswith);\n      }\n      if (activetableviewItem.keycondition.expression === \"equalsto\") {\n      }\n      console.log(datasortparambeginswith);\n      if (datasortparamequalsto != \"\") {\n        dataParams = {\n          objectName: tablename,\n          objectData: {},\n          keyConditions: [\n            {\n              field: \"orgname\",\n              value: localdata.orgname,\n              expression: \"=\",\n            },\n            {\n              field: \"id\",\n              value: datasortparamequalsto,\n              expression: \"=\",\n            },\n          ],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\",\n        };\n      }\n\n      if (datasortparambeginswith != \"\") {\n        dataParams = {\n          objectName: tablename,\n          objectData: {},\n          keyConditions: [\n            {\n              field: \"orgname\",\n              value: localdata.orgname,\n              expression: \"=\",\n            },\n            {\n              field: \"id\",\n              value: datasortparambeginswith,\n              expression: \"beginswith\",\n            },\n          ],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\",\n        };\n      }\n\n      let dataresult = await getRecorddata(dataParams);\n      if (dataresult.isSuccess === \"false\") {\n        alert(\"data\" + dataresult.message);\n      } else {\n        //  let recordDataList = dataresult.dataprops.Items;\n        //  console.log(recordDataList);\n\n        let recordDataList = filterArraybyObject({\n          data: dataresult.dataprops.Items,\n          filter: defaultdatafilter,\n        });\n        console.log(recordDataList);\n        this.setState(\n          {\n            showUI: false,\n          },\n          () => {\n            if (recordDataList.length > 0) {\n              if (clickedrecordid == \"\") {\n                clickedrecordid = recordDataList[0][recordviewfieldname];\n              }\n              this.setState({\n                recordDataList: recordDataList,\n                activetableviewItem: activetableviewItem,\n                clickedrecordid: clickedrecordid,\n                showUI: true,\n                action: \"view\",\n              });\n            } else {\n              this.setState({\n                recordDataList: [],\n                activetableviewItem: activetableviewItem,\n                showUI: true,\n                action: \"list\",\n              });\n            }\n          }\n        );\n      }\n    }\n  }\n\n  clickHandler = (e, props) => {\n    let { multiselectclickedrecordids } = this.state;\n    let dataset = e.target.dataset;\n    let {\n      tablename,\n      viewname,\n      defaulttableviewnamebeginswith,\n      comphtmlid,\n    } = this.props.compprops;\n\n    if (dataset.type === \"new\") {\n      this.setState({ showUI: false }, () => {\n        this.setState({ clickedrecordid: \"\", showUI: true, action: \"new\" });\n      });\n    }\n    if (dataset.type === \"view\") {\n      this.setState({ showUI: false }, () => {\n        this.setState({\n          clickedrecordid: dataset.name,\n          showUI: true,\n          action: \"view\",\n        });\n      });\n    }\n    if (dataset.type === \"multiselectview\") {\n      if (multiselectclickedrecordids.indexOf(dataset.name) !== -1) {\n        let pos = multiselectclickedrecordids.indexOf(dataset.name);\n        multiselectclickedrecordids.splice(pos, 1);\n      } else {\n        multiselectclickedrecordids.push(dataset.name);\n      }\n      this.setState({ showUI: false }, () => {\n        this.setState({\n          multiselectclickedrecordids: multiselectclickedrecordids,\n          showUI: true,\n          action: \"multiselectview\",\n        });\n        this.props.createSyncEvent({\n          comphtmlid: comphtmlid,\n          data: { multiselectclickedrecordids: multiselectclickedrecordids },\n        });\n      });\n    }\n    if (dataset.name === \"new-create\" || dataset.name === \"edit-save\") {\n      this.getRecordListMetadataAndDatafromServer({\n        tablename: tablename,\n        viewname: viewname,\n        defaulttableviewnamebeginswith: defaulttableviewnamebeginswith,\n        clickedrecordid: props.recordid,\n      });\n    }\n  };\n\n  changeHanlder = (e) => {\n    // let dataset = e.target.dataset;\n    // let { recordData } = props;\n    // console.log(recordData);\n  };\n\n  openwindow = (props) => {\n    let { type } = props;\n    this.setState({ windowtype: type });\n  };\n\n  render() {\n    let {\n      recordDataList,\n      activetableviewItem,\n      windowtype,\n      clickedrecordid,\n      showUI,\n      action,\n      multiselectclickedrecordids,\n    } = this.state;\n    let {\n      recordviewfieldname,\n      showrecordeditview,\n      listdisplaytype,\n    } = this.props.compprops;\n    let recordeditviewprops = this.props.compprops.recordeditviewprops;\n\n    console.log(multiselectclickedrecordids);\n    console.log(activetableviewItem);\n    let buttonsHtml = [];\n    let columns, buttons;\n\n    if (activetableviewItem.data) {\n      columns = activetableviewItem.data.columns;\n      buttons = activetableviewItem.data.buttons;\n    }\n    console.log(buttons);\n    if (buttons && Object.keys(buttons).length > 0) {\n      for (let i in buttons) {\n        buttonsHtml.push(\n          <button\n            data-name={buttons[i].name}\n            data-type={buttons[i].name}\n            onClick={(e) => this.clickHandler(e, {})}\n          >\n            {buttons[i].label}\n          </button>\n        );\n      }\n    }\n    console.log(this.props);\n    let multiselectlistHtml = [];\n    if (listdisplaytype === \"multiselectlist\") {\n      if (recordDataList) {\n        for (let i = 0; i < recordDataList.length; i++) {\n          let isclicked = false;\n          for (let j = 0; j < multiselectclickedrecordids.length; j++) {\n            if (multiselectclickedrecordids[j] === recordDataList[i].id) {\n              isclicked = true;\n            }\n          }\n          if (isclicked === true) {\n            multiselectlistHtml.push(\n              <div\n                data-name={recordDataList[i].id}\n                data-type=\"multiselectview\"\n                onClick={(e) => this.clickHandler(e, {})}\n                className=\"org-bluebg\"\n              >\n                {recordDataList[i].label}\n              </div>\n            );\n          } else {\n            multiselectlistHtml.push(\n              <div\n                data-name={recordDataList[i].id}\n                data-type=\"multiselectview\"\n                onClick={(e) => this.clickHandler(e, {})}\n              >\n                {recordDataList[i].label}\n              </div>\n            );\n          }\n        }\n      }\n    }\n\n    return (\n      <>\n        {showUI === true ? (\n          <div>\n            {/* <div className=\"org-fr\">\n              <div\n                onClick={() => {\n                  this.openwindow({ type: \"hsplit\" });\n                }}\n              >\n                hspilt\n              </div>\n              <div\n                onClick={() => {\n                  this.openwindow({ type: \"vsplit\" });\n                }}\n              >\n                vspilt\n              </div>\n              <div\n                onClick={() => {\n                  this.openwindow({ type: \"over\" });\n                }}\n              >\n                overthewindow\n              </div>\n            </div> */}\n            {/* {windowtype === \"over\" ? (\n              <>\n                <Tablecomp\n                  compprops={{\n                    columns: columns,\n                    buttons: buttons,\n                    recordDataList: recordDataList,\n                  }}\n                />\n                <div\n                  style={{\n                    position: \"fixed\",\n                    right: 0,\n                    top: 0,\n                    width: \"40%\",\n                    height: \"100%\",\n                    backgroundColor: \"wheat\",\n                  }}\n                  className=\"sp\"\n                >\n                  <div className=\"org-fr org-fjc-e\">\n                    <div></div>\n                    <div>\n                      <GetFontAwesomeIcon name=\"close\" />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )} */}\n            {windowtype === \"hsplit\" && showrecordeditview === \"true\" ? (\n              <div className=\"org-fr\">\n                <div className=\"org-flexbasis-100p org-mflexbasis-30p org-lflexbasis-30p \">\n                  {buttonsHtml}\n                  {listdisplaytype === \"table\" ? (\n                    <>\n                      {\" \"}\n                      <Tablecomp\n                        compprops={{\n                          columns: columns,\n                          buttons: buttons,\n                          recordDataList: recordDataList,\n                          recordviewfieldname: recordviewfieldname,\n                        }}\n                        clickHandler={this.clickHandler}\n                        changeHanlder={this.changeHanlder}\n                      />\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                  {listdisplaytype === \"multiselectlist\" ? (\n                    <div className=\"org-fr\">{multiselectlistHtml}</div>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n                <div className=\"org-flexbasis-100p org-mflexbasis-70p org-lflexbasis-70p  \">\n                  <Recorddataeditview\n                    {...this.props}\n                    compprops={{\n                      tablename: recordeditviewprops.tablename,\n                      viewlayoutid: recordeditviewprops.viewlayoutid,\n                      editlayoutid: recordeditviewprops.editlayoutid,\n                      newlayoutid: recordeditviewprops.newlayoutid,\n                      action: action,\n                      recordid: clickedrecordid,\n                      idbeginswith: recordeditviewprops.idbeginswith,\n                      //   defaultdatafilter: {},\n                    }}\n                    styleprops={{\n                      width: \"100%\",\n                      height: \"30vh\",\n                      backgroundColor: \"\",\n                      overflow: \"auto\",\n                    }}\n                    clickHandler={this.clickHandler}\n                    changeHanlder={this.changeHanlder}\n                  />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {windowtype === \"hsplit\" && showrecordeditview !== \"true\" ? (\n              <div className=\"org-fr\">\n                <div className=\"org-flexbasis-100p org-mflexbasis-100p org-lflexbasis-100p \">\n                  {buttonsHtml}\n                  {listdisplaytype === \"table\" ? (\n                    <>\n                      {\" \"}\n                      <Tablecomp\n                        compprops={{\n                          columns: columns,\n                          buttons: buttons,\n                          recordDataList: recordDataList,\n                          recordviewfieldname: recordviewfieldname,\n                        }}\n                        clickHandler={this.clickHandler}\n                        changeHanlder={this.changeHanlder}\n                      />\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                  {listdisplaytype === \"multiselectlist\" ? (\n                    <div className=\"org-fr\">{multiselectlistHtml}</div>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {/* {windowtype === \"vsplit\" ? (\n              <>\n                <div style={{ height: \"30vh\", overflow: \"auto\" }}>\n                  <Tablecomp\n                    compprops={{\n                      columns: columns,\n                      buttons: buttons,\n                      recordDataList: recordDataList,\n                    }}\n                  />\n                  <Tablecomp\n                    compprops={{\n                      columns: columns,\n                      buttons: buttons,\n                      recordDataList: recordDataList,\n                    }}\n                  />\n                  <Tablecomp\n                    compprops={{\n                      columns: columns,\n                      buttons: buttons,\n                      recordDataList: recordDataList,\n                    }}\n                  />\n                </div>\n                <div className=\"org-fr org-fjc-e org-fai-c org-redbg\">\n                  <div></div>\n                  <div>\n                    <GetFontAwesomeIcon name=\"close\" />\n                  </div>\n                </div>\n              </>\n            ) : (\n              \"\"\n            )} */}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}