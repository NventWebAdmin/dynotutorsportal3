{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/auth/signin.js\";\nimport React, { Component } from \"react\";\nimport imgLogin from \"../../images/mountain.jpg\";\nimport Htmlform from \"../htmlformnew\";\nimport Iconbar from \"../iconbar\";\nimport Spinner from \"../spinner\";\nimport Nofification from \"../notification\";\nimport { signin, refreshtoken, signup, resetPassword, signInwithGoogle, getUserProfile, signInwithFacebook } from \"../../auth/index\";\nimport { showError, getLocalData } from \"../../js/index\";\nimport { getRecorddata, createRecord // bulkcreateRecord,\n, updateRecord } from \"../../db/index\"; //import { sendMail } from \"../../js/mail\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass F extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.activateUser = async () => {\n      let localdata = getLocalData(this.props);\n      let result = await updateRecord({\n        objectName: \"user\",\n        objectPrimaryKeyValue: {\n          orgname: localdata.defaultorgname,\n          id: \"usr-pradeepy\"\n        },\n        objectData: {\n          isactive: \"true\",\n          lastupdateduserid: localdata.defaultadminuserid\n        }\n      });\n\n      if (result.isSuccess === \"false\") {}\n    };\n\n    this.signinOnClk = event => {\n      // let isSuccessfulLogin = false;\n      // if (isSuccessfulLogin) {\n      //     this.props.history.push(\"/\");\n      // }\n      // else {\n      //     console.log(this.props);\n      //     this.props.setUserNotification({ \"test\": \"test\" });\n      // }\n      if (this.validate()) {\n        this.props.setUserNotification({\n          id: this.props.reduxprops.reduxDetails.user.userDetails.id + \"compname1\",\n          type: \"error\",\n          message: \"invalid data\"\n        });\n        this.props.setUserNotification({\n          id: this.props.userDetails.user.userDetails.id + \"compname2\",\n          type: \"warning\",\n          message: \"not suitatble\"\n        });\n        this.props.setUserNotification({\n          id: this.props.userDetails.user.userDetails.id + \"compname3\",\n          type: \"information\",\n          message: \"redirecting to home page\"\n        });\n        this.props.setUserNotification({\n          id: this.props.userDetails.user.userDetails.id + \"compname4\",\n          type: \"confirmation\",\n          message: \"are you sure ?\"\n        });\n      } else {\n        // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname1\", \"type\": \"\", \"message\": \"\" });\n        // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname2\", \"type\": \"\", \"message\": \"\" });\n        // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname3\", \"type\": \"\", \"message\": \"\" });\n        // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname4\", \"type\": \"\", \"message\": \"\" });\n        // this.props.setIsUserAuthenticated({ \"isUserAuthenticated\": \"true\" });\n        console.log(this.props);\n        this.props.reduxprops.logInUser({\n          username: this.state.username,\n          password: this.state.password\n        }); // sessionStorage.setItem(\"isUserAuthenticated\", true);\n        //this.props.history.push(\"/\");\n\n        console.log(window.location);\n\n        if (window.location.href.includes(\"signin\")) {\n          window.location.assign(\"/\"); //this.props.history.push(\"/\");\n        } else {\n          window.location.assign(window.location); // this.props.history.push(window.location.pathname);\n        }\n      }\n    };\n\n    this.inputChanged = (e, props) => {\n      console.log(props);\n      let {\n        inputLabel,\n        inputName,\n        inputType,\n        clientstatename,\n        clientstatetype,\n        inputValue\n      } = props;\n      console.log(inputLabel);\n      console.log(inputType);\n      console.log(clientstatename);\n      console.log(clientstatetype);\n\n      if (inputName === \"username\") {\n        this.setState({\n          username: inputValue\n        });\n      }\n\n      if (inputName === \"password\") {\n        this.setState({\n          password: inputValue\n        });\n      }\n\n      if (inputName === \"registerfirstname\") {\n        this.setState({\n          registerfirstname: inputValue\n        });\n      }\n\n      if (inputName === \"registerusername\") {\n        this.setState({\n          registerusername: inputValue\n        });\n      }\n\n      if (inputName === \"registerlastname\") {\n        this.setState({\n          registerlastname: inputValue\n        });\n      }\n\n      if (inputName === \"registeremail\") {\n        this.setState({\n          registeremail: inputValue\n        });\n      }\n\n      if (inputName === \"registerpassword\") {\n        this.setState({\n          registerpassword: inputValue\n        });\n      }\n\n      if (inputName === \"registerconfirmpassword\") {\n        this.setState({\n          registerconfirmpassword: inputValue\n        });\n      }\n\n      if (inputName === \"registerphone\") {\n        this.setState({\n          registerphone: inputValue\n        });\n      }\n\n      if (inputName === \"forgotemail\") {\n        this.setState({\n          forgotemail: inputValue\n        });\n      }\n\n      if (inputName === \"registeras\") {\n        this.setState({\n          registeras: e.target.value\n        });\n      }\n    };\n\n    this.inputKeyUp = e => {\n      console.log(e.keyCode);\n      console.log(e.target.dataset.name);\n      console.log(e.target.value);\n\n      if (e.keyCode === 13) {\n        signin({\n          username: this.state.username,\n          password: this.state.password,\n          props: this.props\n        });\n      }\n    };\n\n    this.clkHandler = props => {\n      let {\n        buttonName\n      } = props;\n      console.log(buttonName);\n\n      if (buttonName === \"signin\") {\n        console.log(buttonName);\n        this.loginHandlerAsync(\"signin\");\n      }\n\n      if (buttonName === \"signup\") {\n        console.log(this.props); // this.props.routerprops.history.push(\"/signup\");\n        //  this.setState({ isModalOpen: \"true\" });\n\n        window.open(\"/signup\", \"_self\");\n      }\n\n      if (buttonName === \"forgotpassword\") {\n        console.log(this.props); // this.props.routerprops.history.push(\"/forgotpassword\");\n        //  this.setState({ isModalOpen: \"true\" });\n\n        window.open(\"/forgotpassword\", \"_self\");\n      }\n\n      if (buttonName === \"signupcancel\") {\n        console.log(this.props); //  this.props.routerprops.history.push(\"/\");\n\n        window.open(\"/\", \"_self\");\n      }\n\n      if (buttonName === \"signupregister\") {\n        console.log(this.props);\n        this.loginHandlerAsync(\"signup\"); //  this.setState({ isModalOpen: \"false\" });\n        // signup({\n        //   username: this.state.registeremail,\n        //   password: this.state.registerpassword,\n        //   props: this.props,\n        // });\n      }\n\n      if (buttonName === \"forgotpasswordcancel\") {\n        console.log(this.props); //  this.props.routerprops.history.push(\"/\");\n\n        window.open(\"/\", \"_self\");\n      }\n\n      if (buttonName === \"forgotpasswordsubmit\") {\n        console.log(this.props); //  this.setState({ isModalOpen: \"false\" });\n\n        this.loginHandlerAsync(\"forgotpassword\");\n      }\n\n      if (buttonName === \"facebooklogin\") {\n        this.loginHandlerAsync(\"facebooklogin\");\n      }\n\n      if (buttonName === \"googlelogin\") {\n        this.loginHandlerAsync(\"googlelogin\");\n      }\n\n      if (buttonName === \"amazonlogin\") {\n        this.loginHandlerAsync(\"amazonlogin\");\n      }\n\n      if (buttonName === \"facebooksignup\") {\n        this.loginHandlerAsync(\"facebooksignup\");\n      }\n\n      if (buttonName === \"googlesignup\") {\n        this.loginHandlerAsync(\"googlesignup\");\n      }\n\n      if (buttonName === \"amazonsignup\") {\n        this.loginHandlerAsync(\"amazonsignup\");\n      }\n    };\n\n    this.setNotification = props => {\n      let {\n        msg\n      } = props;\n      this.setState({\n        showNotification: \"false\",\n        notificationMessages: []\n      }, () => this.setState({\n        showNotification: \"true\",\n        notificationMessages: [{\n          name: \"message1\",\n          message: msg,\n          type: \"info\"\n        }]\n      }));\n    };\n\n    this.createUser = async props => {\n      let localdata = getLocalData(this.props);\n      let {\n        email,\n        firstname,\n        lastname,\n        phone,\n        registeras\n      } = props;\n      let id = \"usr-\" + lastname + firstname;\n      let userprofileid = registeras ? registeras : localdata.defaultuserprofileid;\n      let recorddata = {\n        label: lastname + \" \" + firstname,\n        isactive: \"true\",\n        createduserid: localdata.defaultadminuserid,\n        lastupdateduserid: localdata.defaultadminuserid,\n        orgname: localdata.defaultorgname,\n        id: id.replace(\" \", \"\"),\n        email: email,\n        firstname: firstname,\n        lastname: lastname,\n        phone: phone,\n        userprofileid: userprofileid\n      };\n      alert(userprofileid);\n      let result = await createRecord({\n        objectName: \"user\",\n        objectData: recorddata\n      });\n\n      if (result.isSuccess === \"false\") {\n        alert(result.message);\n      } else {\n        let signinrecorddata = {\n          label: lastname + firstname,\n          isactive: \"true\",\n          createduserid: localdata.defaultadminuserid,\n          lastupdateduserid: localdata.defaultadminuserid,\n          orgname: localdata.defaultorgname,\n          id: email,\n          userid: id.replace(\" \", \"\")\n        };\n        let signinresult = await createRecord({\n          objectName: \"usersignin\",\n          objectData: signinrecorddata\n        });\n\n        if (signinresult.isSuccess === \"false\") {\n          alert(result.message);\n        } else {\n          this.setNotification({\n            msg: \"User is created, please signin\"\n          });\n          setTimeout(function () {\n            window.location.assign(\"/\");\n          }, 3000);\n        }\n      }\n    };\n\n    this.getUserfromDatabase = async props => {\n      let {\n        orgemail,\n        result\n      } = props;\n      var d = new Date();\n      var tokenexpiryTime = parseInt(d.getTime()) + parseInt(result.dataprops.expiresIn) * 1000;\n      let d2 = new Date(parseInt(tokenexpiryTime));\n      console.log(d2);\n      let dataParams = {\n        objectName: \"usersignin\",\n        objectData: {},\n        keyConditions: [{\n          field: \"orgname\",\n          value: \"postpaidtutors\",\n          expression: \"=\"\n        }, {\n          field: \"id\",\n          value: orgemail,\n          expression: \"=\"\n        }],\n        filterConditions: [],\n        pageSize: \"\",\n        limit: \"\",\n        exclusiveStartKey: \"\"\n      };\n      this.setState({\n        showSpinner: \"true\"\n      });\n      let dataresult = await getRecorddata(dataParams);\n\n      if (dataresult.isSuccess === \"false\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        alert(\"data\" + dataresult.message);\n      } else {\n        this.setState({\n          showSpinner: \"false\"\n        });\n\n        if (dataresult.dataprops.Items.length > 0) {\n          let userdataParams = {\n            objectName: \"user\",\n            objectData: {},\n            keyConditions: [{\n              field: \"orgname\",\n              value: \"postpaidtutors\",\n              expression: \"=\"\n            }, {\n              field: \"id\",\n              value: dataresult.dataprops.Items[0].userid,\n              expression: \"=\"\n            }],\n            filterConditions: [],\n            pageSize: \"\",\n            limit: \"\",\n            exclusiveStartKey: \"\"\n          };\n          this.setState({\n            showSpinner: \"true\"\n          });\n          let userdataresult = await getRecorddata(userdataParams);\n\n          if (userdataresult.isSuccess === \"false\") {\n            this.setState({\n              showSpinner: \"false\"\n            });\n            alert(\"data\" + userdataresult.message);\n          } else {\n            this.setState({\n              showSpinner: \"false\"\n            });\n            console.log(userdataresult.dataprops.Items);\n\n            if (userdataresult.dataprops.Items.length > 0) {\n              let usersignin = userdataresult.dataprops.Items[0];\n              await sessionStorage.setItem(\"orgemail\", orgemail);\n              await sessionStorage.setItem(\"orgexpiresAt\", tokenexpiryTime);\n              await sessionStorage.setItem(\"orgidToken\", result.dataprops.idToken);\n              await sessionStorage.setItem(\"orgrefreshToken\", result.dataprops.refreshToken);\n              await sessionStorage.setItem(\"orgname\", usersignin.orgname);\n              await sessionStorage.setItem(\"userid\", usersignin.id);\n              await sessionStorage.setItem(\"userprofileid\", usersignin.userprofileid);\n              await sessionStorage.setItem(\"userroleid\", usersignin.userroleid);\n              await sessionStorage.setItem(\"appname\", usersignin.defaultappname);\n              window.location.assign(window.location);\n            } else {\n              this.setNotification({\n                msg: \"Please Signup and Login\"\n              });\n              setTimeout(function () {\n                window.location.assign(\"/signup\");\n              }, 5000);\n            }\n          }\n        } else {\n          this.setNotification({\n            msg: \"Please Signup and Login\"\n          });\n          setTimeout(function () {\n            window.location.assign(\"/signup\");\n          }, 5000);\n        }\n      }\n    };\n\n    this.validate = e => {\n      let iserror = false;\n      this.inputcompref1.current.validate();\n      this.inputcompref2.current.validate();\n      iserror = this.inputcompref1.current.validate() || this.inputcompref2.current.validate();\n      return iserror;\n    };\n\n    this.continueSession = async () => {\n      let result = await refreshtoken({\n        refreshtoken: sessionStorage.getItem(\"orgrefreshToken\")\n      });\n\n      if (result.isSuccess === \"true\") {\n        var d = new Date();\n        var tokenexpiryTime = parseInt(d.getTime()) + parseInt(result.dataprops.expires_in) * 1000;\n        let d2 = new Date(parseInt(tokenexpiryTime));\n        console.log(d2);\n        await sessionStorage.setItem(\"orgemail\", result.dataprops.email); // await sessionStorage.setItem(\"orguserid\", result.dataprops.user_id);\n\n        await sessionStorage.setItem(\"orgexpiresAt\", tokenexpiryTime);\n        await sessionStorage.setItem(\"orgidToken\", result.dataprops.access_token);\n        await sessionStorage.setItem(\"orgrefreshToken\", result.dataprops.refresh_token); // window.location.assign(window.location);\n      }\n\n      if (result.isSuccess === \"false\") {\n        let errorArray = [];\n        let isFieldError = false;\n\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message\n          });\n        }\n\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message\n          });\n        }\n\n        showError(errorArray);\n        console.log(isFieldError);\n\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message\n          });\n        }\n      }\n\n      if (window.location.href.includes(\"signin\")) {\n        window.location.assign(\"/\");\n      } else {\n        window.location.assign(window.location);\n      }\n    };\n\n    this.cancelSession = () => {\n      sessionStorage.clear();\n      window.location.assign(window.location);\n    };\n\n    this.state = {\n      showSpinner: \"false\"\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      action,\n      isrefreshtoken\n    } = this.props;\n    console.log(isrefreshtoken);\n\n    if (action === \"activateuser\") {\n      this.activateUser();\n    }\n  }\n\n  async loginHandlerAsync(action) {\n    console.log(action);\n    console.log(this.state);\n    let result = {};\n    let {\n      username,\n      password,\n      registeras\n    } = this.state;\n\n    if (action === \"signin\") {\n      if (!username) {\n        showError([{\n          name: \"username\",\n          message: \"please enter valid username\"\n        }]);\n      } else if (!password) {\n        showError([{\n          name: \"password\",\n          message: \"please enter valid password\"\n        }]);\n      } else {\n        this.setState({\n          showSpinner: \"true\"\n        });\n        result = await signin({\n          username: username,\n          password: password,\n          props: this.props\n        });\n\n        if (result.isSuccess === \"true\") {\n          this.setState({\n            showSpinner: \"false\"\n          });\n\n          if (result.dataprops.registered !== \"true\" && result.dataprops.registered !== true) {\n            this.setNotification({\n              msg: \"please click on link in verifacation mail to login \"\n            });\n          } else {\n            let orgemail = result.dataprops.email;\n            this.setState({\n              showSpinner: \"true\"\n            });\n            let props = {\n              orgemail: orgemail,\n              result: result\n            };\n            this.getUserfromDatabase(props);\n          }\n        }\n\n        if (result.isSuccess === \"false\") {\n          this.setState({\n            showSpinner: \"false\"\n          });\n          let errorArray = [];\n          let isFieldError = false;\n\n          if (result.message.includes(\"EMAIL\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"username\",\n              message: result.message\n            });\n          }\n\n          if (result.message.includes(\"PASSWORD\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"password\",\n              message: result.message\n            });\n          }\n\n          showError(errorArray);\n\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message\n            });\n          }\n        }\n      }\n    }\n\n    if (action === \"signup\") {\n      if (!this.state.registeremail) {\n        showError([{\n          name: \"registeremail\",\n          message: \"please enter valid username\"\n        }]);\n      } else if (!this.state.registerpassword) {\n        showError([{\n          name: \"registerpassword\",\n          message: \"please enter valid password\"\n        }]);\n      } else if (!this.state.registerconfirmpassword) {\n        showError([{\n          name: \"registerconfirmpassword\",\n          message: \"please enter valid confirm password\"\n        }]);\n      } else if (this.state.registerconfirmpassword && this.state.registerconfirmpassword !== this.state.registerpassword) {\n        showError([{\n          name: \"registerconfirmpassword\",\n          message: \"password not matching\"\n        }]);\n      } else if (!this.state.registeremail) {\n        showError([{\n          name: \"registeremail\",\n          message: \"please enter valid email\"\n        }]);\n      } else if (!this.state.registerfirstname) {\n        showError([{\n          name: \"registerfirstname\",\n          message: \"please enter firstname\"\n        }]);\n      } else {\n        result = await signup({\n          userState: this.state,\n          props: this.props\n        });\n        console.log(result);\n\n        if (result.isSuccess === \"false\") {\n          let errorArray = [];\n          let isFieldError = false;\n\n          if (result.message.includes(\"EMAIL\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"registeremail\",\n              message: result.message\n            });\n          }\n\n          if (result.message.includes(\"PASSWORD\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"registerpassword\",\n              message: result.message\n            });\n          }\n\n          showError(errorArray);\n          console.log(isFieldError);\n\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message\n            });\n          }\n        } else {\n          this.createUser({\n            email: this.state.registeremail,\n            firstname: this.state.registerfirstname,\n            lastname: this.state.registerlastname ? this.state.registerlastname : \"\",\n            phone: this.state.registerphone,\n            registeras: registeras\n          }); // setTimeout(function () {\n          //   window.location.assign(\"/\");\n          // }, 3000);\n        }\n      }\n    }\n\n    if (action === \"forgotpassword\") {\n      if (!this.state.forgotemail) {\n        showError([{\n          name: \"forgotemail\",\n          message: \"please enter email\"\n        }]);\n      } else {\n        result = await resetPassword({\n          userState: this.state,\n          props: this.props\n        });\n        console.log(result);\n\n        if (result.isSuccess === \"false\") {\n          let errorArray = [];\n          let isFieldError = false;\n\n          if (result.message.includes(\"email\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"forgotemail\",\n              message: result.message\n            });\n          }\n\n          showError(errorArray);\n          console.log(isFieldError);\n\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message\n            });\n          }\n        } else {\n          let errorArray = [];\n          showError(errorArray);\n          this.setNotification({\n            msg: \"Reset Password Email sent\"\n          });\n          setTimeout(function () {\n            window.location.assign(\"/\");\n          }, 3000);\n        }\n      }\n    }\n\n    if (action === \"facebooklogin\") {\n      this.setState({\n        showSpinner: \"true\"\n      });\n      let result = await signInwithFacebook();\n\n      if (result.isSuccess === \"true\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result\n        };\n        console.log(props); //  this.getUserfromDatabase(props);\n      }\n\n      if (result.isSuccess === \"false\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let errorArray = [];\n        let isFieldError = false;\n\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message\n          });\n        }\n\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message\n          });\n        }\n\n        showError(errorArray);\n\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message\n          });\n        }\n      }\n    }\n\n    if (action === \"googlelogin\") {\n      this.setState({\n        showSpinner: \"true\"\n      });\n      let result = await signInwithGoogle();\n\n      if (result.isSuccess === \"true\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result\n        };\n        console.log(result.dataprops.emailVerified);\n        this.getUserfromDatabase(props);\n      }\n\n      if (result.isSuccess === \"false\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let errorArray = [];\n        let isFieldError = false;\n\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message\n          });\n        }\n\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message\n          });\n        }\n\n        showError(errorArray);\n\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message\n          });\n        }\n      }\n    }\n\n    if (action === \"googlesignup\") {\n      this.setState({\n        showSpinner: \"true\"\n      });\n      let result = await signInwithGoogle();\n\n      if (result.isSuccess === \"true\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result\n        };\n        console.log(props);\n        let userprofileresult = await getUserProfile({\n          idToken: result.dataprops.idToken\n        });\n\n        if (userprofileresult.isSuccess === \"true\") {\n          this.createUser({\n            email: orgemail,\n            firstname: userprofileresult.dataprops.name,\n            lastname: \"\",\n            phone: userprofileresult.dataprops.phone ? userprofileresult.dataprops.phone : \"\",\n            registeras: registeras\n          });\n        }\n      }\n\n      if (result.isSuccess === \"false\") {\n        this.setState({\n          showSpinner: \"false\"\n        });\n        let errorArray = [];\n        let isFieldError = false;\n\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message\n          });\n        }\n\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message\n          });\n        }\n\n        showError(errorArray);\n\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message\n          });\n        }\n      }\n    }\n\n    if (action === \"amazonlogin\") {} // sessionStorage.setItem(\"isUserAuthenticated\", \"true\");\n    // if (window.location.href.includes(\"signin\")) {\n    //   window.location.assign(\"/\");\n    // } else {\n    //   window.location.assign(window.location);\n    // }\n\n\n    return result;\n  }\n\n  render() {\n    console.log(this.state);\n    let dataprops = {};\n    let {\n      showSpinner\n    } = this.state;\n    let {\n      action,\n      isrefreshtoken\n    } = this.props;\n    let refreshTokenHtml = [];\n\n    if (isrefreshtoken === true || isrefreshtoken === \"true\") {\n      refreshTokenHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Session Loggin out Click on Ok to continue session, cancel to logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this));\n      refreshTokenHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.continueSession,\n          children: \"Continue Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.cancelSession,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }, this));\n    }\n\n    if (action === \"activateuser\") {} else {\n      let loginIconsHtml = [];\n      let iconarray = [// {\n      //   label: \"Label1\",\n      //   name: \"facebooklogin\",\n      //   iconName: \"facebook\",\n      //   iconSource: \"fontaway\",\n      // },\n      {\n        label: \"Label2\",\n        name: \"googlelogin\",\n        iconName: \"google\",\n        iconSource: \"fontaway\"\n      } // {\n      //   label: \"Label2\",\n      //   name: \"amazonlogin\",\n      //   iconName: \"amazon\",\n      //   iconSource: \"fontaway\",\n      // },\n      ];\n      loginIconsHtml.push( /*#__PURE__*/_jsxDEV(Iconbar, {\n        iconarray: iconarray,\n        isHorizontol: \"true\",\n        style: {\n          width: \"\"\n        },\n        iconPadding: \"1vw\",\n        iconClk: this.clkHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 9\n      }, this));\n      dataprops = [{\n        label: \"User Name\",\n        name: \"username\",\n        type: \"inputtext\",\n        width: \"100%\",\n        placeholder: \"\",\n        required: \"true\",\n        tabname: \"1\"\n      }, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"inputpassword\",\n        width: \"100%\",\n        placeholder: \"\",\n        required: \"true\",\n        tabname: \"1\"\n      }, {\n        label: \"Log In\",\n        name: \"signin\",\n        type: \"button\",\n        width: \"100%\",\n        placeholder: \"\",\n        required: \"false\",\n        tabname: \"1\"\n      }, {\n        label: \"Forgot Password?\",\n        name: \"forgotpassword\",\n        type: \"link\",\n        width: \"50%\",\n        placeholder: \"\",\n        required: \"false\",\n        tabname: \"1\"\n      }, {\n        label: \"Sign Up\",\n        name: \"signup\",\n        type: \"link\",\n        width: \"50%\",\n        placeholder: \"\",\n        required: \"false\",\n        tabname: \"1\"\n      }, {\n        label: loginIconsHtml,\n        name: \"signup\",\n        type: \"outputhtml\",\n        width: \"100%\",\n        placeholder: \"\",\n        required: \"false\",\n        tabname: \"1\"\n      }];\n\n      if (action === \"signup\") {\n        let loginIconsSignupHtml = [];\n        let iconarraySignup = [// {\n        //   label: \"Label1\",\n        //   name: \"facebooksignup\",\n        //   iconName: \"facebook\",\n        //   iconSource: \"fontaway\",\n        // },\n        {\n          label: \"Label2\",\n          name: \"googlesignup\",\n          iconName: \"google\",\n          iconSource: \"fontaway\"\n        } // {\n        //   label: \"Label2\",\n        //   name: \"amazonlogin\",\n        //   iconName: \"amazon\",\n        //   iconSource: \"fontaway\",\n        // },\n        ]; // loginIconsSignupHtml.push(\n        //   <Iconbar\n        //     iconarray={iconarraySignup}\n        //     isHorizontol=\"true\"\n        //     style={{ width: \"\" }}\n        //     iconPadding=\"1vw\"\n        //     iconClk={this.clkHandler}\n        //   />\n        // );\n\n        let signuppannelbuttonshtml = [];\n        signuppannelbuttonshtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fjc-sb org-fai-c\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-fr org-fai-c\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.clkHandler({\n                buttonLabel: \"\",\n                buttonName: \"signupcancel\",\n                buttonType: \"\"\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org-fr org-fjc-e org-fai-c\",\n            children: [\"I want to Register as \\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              defaultValue: \"learner\",\n              style: {\n                padding: \"5px\"\n              },\n              onChange: e => {\n                this.inputChanged(e, {\n                  inputName: \"registeras\"\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"tutor\",\n                children: \"Tutor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"learner\",\n                children: \"Learner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.clkHandler({\n                buttonLabel: \"\",\n                buttonName: \"signupregister\",\n                buttonType: \"\"\n              }),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), loginIconsSignupHtml]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 11\n        }, this));\n        dataprops = [{\n          label: \"Email\",\n          name: \"registeremail\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }, {\n          label: \"Password\",\n          name: \"registerpassword\",\n          type: \"inputpassword\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }, {\n          label: \"Confirm Password\",\n          name: \"registerconfirmpassword\",\n          type: \"inputpassword\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }, {\n          label: \"First Name\",\n          name: \"registerfirstname\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }, {\n          label: \"Last Name\",\n          name: \"registerlastname\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\"\n        }, {\n          label: \"Phone\",\n          name: \"registerphone\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\"\n        }, {\n          label: signuppannelbuttonshtml,\n          name: \"signuppannelbuttons\",\n          type: \"outputhtml\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\"\n        }];\n      }\n\n      if (action === \"forgotpassword\") {\n        let forgotpasswordpannelbuttonshtml = [];\n        forgotpasswordpannelbuttonshtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fjc-e\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.clkHandler({\n              buttonLabel: \"\",\n              buttonName: \"forgotpasswordcancel\",\n              buttonType: \"\"\n            }),\n            \"data-buttonname\": \"forgotpasswordcancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.clkHandler({\n              buttonLabel: \"\",\n              buttonName: \"forgotpasswordsubmit\",\n              buttonType: \"\"\n            }),\n            \"data-name\": \"forgotpasswordsubmit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 11\n        }, this));\n        dataprops = [{\n          label: \"Email\",\n          name: \"forgotemail\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }, {\n          label: forgotpasswordpannelbuttonshtml,\n          name: \"forgotpasswordpannelbuttons\",\n          type: \"outputhtml\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\"\n        }];\n      }\n    }\n\n    console.log(dataprops);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Nofification, {\n        showNotification: this.state.showNotification,\n        notificationMessages: this.state.notificationMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 9\n      }, this), showSpinner === \"true\" ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 35\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgLogin,\n        alt: \"img\",\n        style: {\n          width: \"100vw\",\n          height: \"100vh\",\n          objectFit: \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          color: \"\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eelf mp\",\n          style: {\n            textAlign: \"center\",\n            color: \"black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Postpaid Tutors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 11\n        }, this), isrefreshtoken === \"true\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: refreshTokenHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Htmlform, {\n          inputChanged: this.inputChanged,\n          clkHandler: this.clkHandler,\n          inputKeyUp: this.inputKeyUp,\n          dataprops: dataprops,\n          bgcolor: \"\",\n          activeTabName: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default F;","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/auth/signin.js"],"names":["React","Component","imgLogin","Htmlform","Iconbar","Spinner","Nofification","signin","refreshtoken","signup","resetPassword","signInwithGoogle","getUserProfile","signInwithFacebook","showError","getLocalData","getRecorddata","createRecord","updateRecord","F","constructor","props","activateUser","localdata","result","objectName","objectPrimaryKeyValue","orgname","defaultorgname","id","objectData","isactive","lastupdateduserid","defaultadminuserid","isSuccess","signinOnClk","event","validate","setUserNotification","reduxprops","reduxDetails","user","userDetails","type","message","console","log","logInUser","username","state","password","window","location","href","includes","assign","inputChanged","e","inputLabel","inputName","inputType","clientstatename","clientstatetype","inputValue","setState","registerfirstname","registerusername","registerlastname","registeremail","registerpassword","registerconfirmpassword","registerphone","forgotemail","registeras","target","value","inputKeyUp","keyCode","dataset","name","clkHandler","buttonName","loginHandlerAsync","open","setNotification","msg","showNotification","notificationMessages","createUser","email","firstname","lastname","phone","userprofileid","defaultuserprofileid","recorddata","label","createduserid","replace","alert","signinrecorddata","userid","signinresult","setTimeout","getUserfromDatabase","orgemail","d","Date","tokenexpiryTime","parseInt","getTime","dataprops","expiresIn","d2","dataParams","keyConditions","field","expression","filterConditions","pageSize","limit","exclusiveStartKey","showSpinner","dataresult","Items","length","userdataParams","userdataresult","usersignin","sessionStorage","setItem","idToken","refreshToken","userroleid","defaultappname","iserror","inputcompref1","current","inputcompref2","continueSession","getItem","expires_in","access_token","refresh_token","errorArray","isFieldError","push","cancelSession","clear","componentDidMount","action","isrefreshtoken","registered","userState","emailVerified","userprofileresult","render","refreshTokenHtml","loginIconsHtml","iconarray","iconName","iconSource","width","placeholder","required","tabname","loginIconsSignupHtml","iconarraySignup","signuppannelbuttonshtml","buttonLabel","buttonType","padding","forgotpasswordpannelbuttonshtml","height","position","objectFit","color","top","left","transform","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport imgLogin from \"../../images/mountain.jpg\";\nimport Htmlform from \"../htmlformnew\";\nimport Iconbar from \"../iconbar\";\nimport Spinner from \"../spinner\";\nimport Nofification from \"../notification\";\nimport {\n  signin,\n  refreshtoken,\n  signup,\n  resetPassword,\n  signInwithGoogle,\n  getUserProfile,\n  signInwithFacebook,\n} from \"../../auth/index\";\nimport { showError, getLocalData } from \"../../js/index\";\nimport {\n  getRecorddata,\n  createRecord,\n  // bulkcreateRecord,\n  updateRecord,\n} from \"../../db/index\";\n//import { sendMail } from \"../../js/mail\";\n\nclass F extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showSpinner: \"false\" };\n  }\n\n  async componentDidMount() {\n    let { action, isrefreshtoken } = this.props;\n    console.log(isrefreshtoken);\n    if (action === \"activateuser\") {\n      this.activateUser();\n    }\n  }\n\n  activateUser = async () => {\n    let localdata = getLocalData(this.props);\n\n    let result = await updateRecord({\n      objectName: \"user\",\n      objectPrimaryKeyValue: {\n        orgname: localdata.defaultorgname,\n        id: \"usr-pradeepy\",\n      },\n      objectData: {\n        isactive: \"true\",\n        lastupdateduserid: localdata.defaultadminuserid,\n      },\n    });\n    if (result.isSuccess === \"false\") {\n    }\n  };\n\n  signinOnClk = (event) => {\n    // let isSuccessfulLogin = false;\n    // if (isSuccessfulLogin) {\n    //     this.props.history.push(\"/\");\n    // }\n    // else {\n    //     console.log(this.props);\n    //     this.props.setUserNotification({ \"test\": \"test\" });\n    // }\n    if (this.validate()) {\n      this.props.setUserNotification({\n        id:\n          this.props.reduxprops.reduxDetails.user.userDetails.id + \"compname1\",\n        type: \"error\",\n        message: \"invalid data\",\n      });\n      this.props.setUserNotification({\n        id: this.props.userDetails.user.userDetails.id + \"compname2\",\n        type: \"warning\",\n        message: \"not suitatble\",\n      });\n      this.props.setUserNotification({\n        id: this.props.userDetails.user.userDetails.id + \"compname3\",\n        type: \"information\",\n        message: \"redirecting to home page\",\n      });\n      this.props.setUserNotification({\n        id: this.props.userDetails.user.userDetails.id + \"compname4\",\n        type: \"confirmation\",\n        message: \"are you sure ?\",\n      });\n    } else {\n      // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname1\", \"type\": \"\", \"message\": \"\" });\n      // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname2\", \"type\": \"\", \"message\": \"\" });\n      // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname3\", \"type\": \"\", \"message\": \"\" });\n      // this.props.setUserNotification({ \"id\": this.props.userDetails.user.userDetails.id + \"compname4\", \"type\": \"\", \"message\": \"\" });\n      // this.props.setIsUserAuthenticated({ \"isUserAuthenticated\": \"true\" });\n      console.log(this.props);\n      this.props.reduxprops.logInUser({\n        username: this.state.username,\n        password: this.state.password,\n      });\n\n      // sessionStorage.setItem(\"isUserAuthenticated\", true);\n      //this.props.history.push(\"/\");\n      console.log(window.location);\n      if (window.location.href.includes(\"signin\")) {\n        window.location.assign(\"/\");\n        //this.props.history.push(\"/\");\n      } else {\n        window.location.assign(window.location);\n        // this.props.history.push(window.location.pathname);\n      }\n    }\n  };\n\n  inputChanged = (e, props) => {\n    console.log(props);\n    let {\n      inputLabel,\n      inputName,\n      inputType,\n      clientstatename,\n      clientstatetype,\n      inputValue,\n    } = props;\n    console.log(inputLabel);\n    console.log(inputType);\n    console.log(clientstatename);\n    console.log(clientstatetype);\n    if (inputName === \"username\") {\n      this.setState({ username: inputValue });\n    }\n    if (inputName === \"password\") {\n      this.setState({ password: inputValue });\n    }\n    if (inputName === \"registerfirstname\") {\n      this.setState({ registerfirstname: inputValue });\n    }\n    if (inputName === \"registerusername\") {\n      this.setState({ registerusername: inputValue });\n    }\n    if (inputName === \"registerlastname\") {\n      this.setState({ registerlastname: inputValue });\n    }\n    if (inputName === \"registeremail\") {\n      this.setState({ registeremail: inputValue });\n    }\n    if (inputName === \"registerpassword\") {\n      this.setState({ registerpassword: inputValue });\n    }\n    if (inputName === \"registerconfirmpassword\") {\n      this.setState({ registerconfirmpassword: inputValue });\n    }\n    if (inputName === \"registerphone\") {\n      this.setState({ registerphone: inputValue });\n    }\n    if (inputName === \"forgotemail\") {\n      this.setState({ forgotemail: inputValue });\n    }\n    if (inputName === \"registeras\") {\n      this.setState({ registeras: e.target.value });\n    }\n  };\n\n  inputKeyUp = (e) => {\n    console.log(e.keyCode);\n    console.log(e.target.dataset.name);\n    console.log(e.target.value);\n    if (e.keyCode === 13) {\n      signin({\n        username: this.state.username,\n        password: this.state.password,\n        props: this.props,\n      });\n    }\n  };\n\n  clkHandler = (props) => {\n    let { buttonName } = props;\n    console.log(buttonName);\n    if (buttonName === \"signin\") {\n      console.log(buttonName);\n      this.loginHandlerAsync(\"signin\");\n    }\n    if (buttonName === \"signup\") {\n      console.log(this.props);\n      // this.props.routerprops.history.push(\"/signup\");\n      //  this.setState({ isModalOpen: \"true\" });\n      window.open(\"/signup\", \"_self\");\n    }\n    if (buttonName === \"forgotpassword\") {\n      console.log(this.props);\n      // this.props.routerprops.history.push(\"/forgotpassword\");\n      //  this.setState({ isModalOpen: \"true\" });\n      window.open(\"/forgotpassword\", \"_self\");\n    }\n    if (buttonName === \"signupcancel\") {\n      console.log(this.props);\n      //  this.props.routerprops.history.push(\"/\");\n      window.open(\"/\", \"_self\");\n    }\n    if (buttonName === \"signupregister\") {\n      console.log(this.props);\n      this.loginHandlerAsync(\"signup\");\n      //  this.setState({ isModalOpen: \"false\" });\n      // signup({\n      //   username: this.state.registeremail,\n      //   password: this.state.registerpassword,\n      //   props: this.props,\n      // });\n    }\n\n    if (buttonName === \"forgotpasswordcancel\") {\n      console.log(this.props);\n      //  this.props.routerprops.history.push(\"/\");\n      window.open(\"/\", \"_self\");\n    }\n    if (buttonName === \"forgotpasswordsubmit\") {\n      console.log(this.props);\n      //  this.setState({ isModalOpen: \"false\" });\n      this.loginHandlerAsync(\"forgotpassword\");\n    }\n    if (buttonName === \"facebooklogin\") {\n      this.loginHandlerAsync(\"facebooklogin\");\n    }\n    if (buttonName === \"googlelogin\") {\n      this.loginHandlerAsync(\"googlelogin\");\n    }\n    if (buttonName === \"amazonlogin\") {\n      this.loginHandlerAsync(\"amazonlogin\");\n    }\n    if (buttonName === \"facebooksignup\") {\n      this.loginHandlerAsync(\"facebooksignup\");\n    }\n    if (buttonName === \"googlesignup\") {\n      this.loginHandlerAsync(\"googlesignup\");\n    }\n    if (buttonName === \"amazonsignup\") {\n      this.loginHandlerAsync(\"amazonsignup\");\n    }\n  };\n\n  setNotification = (props) => {\n    let { msg } = props;\n    this.setState(\n      {\n        showNotification: \"false\",\n        notificationMessages: [],\n      },\n\n      () =>\n        this.setState({\n          showNotification: \"true\",\n          notificationMessages: [\n            {\n              name: \"message1\",\n              message: msg,\n              type: \"info\",\n            },\n          ],\n        })\n    );\n  };\n\n  async loginHandlerAsync(action) {\n    console.log(action);\n    console.log(this.state);\n    let result = {};\n    let { username, password, registeras } = this.state;\n    if (action === \"signin\") {\n      if (!username) {\n        showError([\n          { name: \"username\", message: \"please enter valid username\" },\n        ]);\n      } else if (!password) {\n        showError([\n          { name: \"password\", message: \"please enter valid password\" },\n        ]);\n      } else {\n        this.setState({ showSpinner: \"true\" });\n        result = await signin({\n          username: username,\n          password: password,\n          props: this.props,\n        });\n        if (result.isSuccess === \"true\") {\n          this.setState({ showSpinner: \"false\" });\n          if (\n            result.dataprops.registered !== \"true\" &&\n            result.dataprops.registered !== true\n          ) {\n            this.setNotification({\n              msg: \"please click on link in verifacation mail to login \",\n            });\n          } else {\n            let orgemail = result.dataprops.email;\n\n            this.setState({ showSpinner: \"true\" });\n            let props = {\n              orgemail: orgemail,\n              result: result,\n            };\n\n            this.getUserfromDatabase(props);\n          }\n        }\n        if (result.isSuccess === \"false\") {\n          this.setState({ showSpinner: \"false\" });\n          let errorArray = [];\n          let isFieldError = false;\n          if (result.message.includes(\"EMAIL\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"username\",\n              message: result.message,\n            });\n          }\n          if (result.message.includes(\"PASSWORD\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"password\",\n              message: result.message,\n            });\n          }\n          showError(errorArray);\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message,\n            });\n          }\n        }\n      }\n    }\n    if (action === \"signup\") {\n      if (!this.state.registeremail) {\n        showError([\n          { name: \"registeremail\", message: \"please enter valid username\" },\n        ]);\n      } else if (!this.state.registerpassword) {\n        showError([\n          { name: \"registerpassword\", message: \"please enter valid password\" },\n        ]);\n      } else if (!this.state.registerconfirmpassword) {\n        showError([\n          {\n            name: \"registerconfirmpassword\",\n            message: \"please enter valid confirm password\",\n          },\n        ]);\n      } else if (\n        this.state.registerconfirmpassword &&\n        this.state.registerconfirmpassword !== this.state.registerpassword\n      ) {\n        showError([\n          {\n            name: \"registerconfirmpassword\",\n            message: \"password not matching\",\n          },\n        ]);\n      } else if (!this.state.registeremail) {\n        showError([\n          { name: \"registeremail\", message: \"please enter valid email\" },\n        ]);\n      } else if (!this.state.registerfirstname) {\n        showError([\n          { name: \"registerfirstname\", message: \"please enter firstname\" },\n        ]);\n      } else {\n        result = await signup({\n          userState: this.state,\n          props: this.props,\n        });\n        console.log(result);\n        if (result.isSuccess === \"false\") {\n          let errorArray = [];\n          let isFieldError = false;\n          if (result.message.includes(\"EMAIL\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"registeremail\",\n              message: result.message,\n            });\n          }\n          if (result.message.includes(\"PASSWORD\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"registerpassword\",\n              message: result.message,\n            });\n          }\n          showError(errorArray);\n          console.log(isFieldError);\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message,\n            });\n          }\n        } else {\n          this.createUser({\n            email: this.state.registeremail,\n            firstname: this.state.registerfirstname,\n            lastname: this.state.registerlastname\n              ? this.state.registerlastname\n              : \"\",\n            phone: this.state.registerphone,\n            registeras: registeras,\n          });\n\n          // setTimeout(function () {\n          //   window.location.assign(\"/\");\n          // }, 3000);\n        }\n      }\n    }\n    if (action === \"forgotpassword\") {\n      if (!this.state.forgotemail) {\n        showError([{ name: \"forgotemail\", message: \"please enter email\" }]);\n      } else {\n        result = await resetPassword({\n          userState: this.state,\n          props: this.props,\n        });\n        console.log(result);\n        if (result.isSuccess === \"false\") {\n          let errorArray = [];\n          let isFieldError = false;\n          if (result.message.includes(\"email\")) {\n            isFieldError = true;\n            errorArray.push({\n              name: \"forgotemail\",\n              message: result.message,\n            });\n          }\n          showError(errorArray);\n          console.log(isFieldError);\n          if (isFieldError !== true) {\n            this.setNotification({\n              msg: result.message,\n            });\n          }\n        } else {\n          let errorArray = [];\n          showError(errorArray);\n          this.setNotification({\n            msg: \"Reset Password Email sent\",\n          });\n\n          setTimeout(function () {\n            window.location.assign(\"/\");\n          }, 3000);\n        }\n      }\n    }\n\n    if (action === \"facebooklogin\") {\n      this.setState({ showSpinner: \"true\" });\n      let result = await signInwithFacebook();\n      if (result.isSuccess === \"true\") {\n        this.setState({ showSpinner: \"false\" });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result,\n        };\n        console.log(props);\n        //  this.getUserfromDatabase(props);\n      }\n      if (result.isSuccess === \"false\") {\n        this.setState({ showSpinner: \"false\" });\n        let errorArray = [];\n        let isFieldError = false;\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message,\n          });\n        }\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message,\n          });\n        }\n        showError(errorArray);\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message,\n          });\n        }\n      }\n    }\n    if (action === \"googlelogin\") {\n      this.setState({ showSpinner: \"true\" });\n      let result = await signInwithGoogle();\n      if (result.isSuccess === \"true\") {\n        this.setState({ showSpinner: \"false\" });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result,\n        };\n        console.log(result.dataprops.emailVerified);\n        this.getUserfromDatabase(props);\n      }\n      if (result.isSuccess === \"false\") {\n        this.setState({ showSpinner: \"false\" });\n        let errorArray = [];\n        let isFieldError = false;\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message,\n          });\n        }\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message,\n          });\n        }\n        showError(errorArray);\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message,\n          });\n        }\n      }\n    }\n    if (action === \"googlesignup\") {\n      this.setState({ showSpinner: \"true\" });\n      let result = await signInwithGoogle();\n      if (result.isSuccess === \"true\") {\n        this.setState({ showSpinner: \"false\" });\n        let orgemail = result.dataprops.email;\n        let props = {\n          orgemail: orgemail,\n          result: result,\n        };\n        console.log(props);\n\n        let userprofileresult = await getUserProfile({\n          idToken: result.dataprops.idToken,\n        });\n        if (userprofileresult.isSuccess === \"true\") {\n          this.createUser({\n            email: orgemail,\n            firstname: userprofileresult.dataprops.name,\n\n            lastname: \"\",\n            phone: userprofileresult.dataprops.phone\n              ? userprofileresult.dataprops.phone\n              : \"\",\n            registeras: registeras,\n          });\n        }\n      }\n      if (result.isSuccess === \"false\") {\n        this.setState({ showSpinner: \"false\" });\n        let errorArray = [];\n        let isFieldError = false;\n        if (result.message.includes(\"EMAIL\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"username\",\n            message: result.message,\n          });\n        }\n        if (result.message.includes(\"PASSWORD\")) {\n          isFieldError = true;\n          errorArray.push({\n            name: \"password\",\n            message: result.message,\n          });\n        }\n        showError(errorArray);\n        if (isFieldError !== true) {\n          this.setNotification({\n            msg: result.message,\n          });\n        }\n      }\n    }\n    if (action === \"amazonlogin\") {\n    }\n    // sessionStorage.setItem(\"isUserAuthenticated\", \"true\");\n    // if (window.location.href.includes(\"signin\")) {\n    //   window.location.assign(\"/\");\n    // } else {\n    //   window.location.assign(window.location);\n    // }\n\n    return result;\n  }\n  createUser = async (props) => {\n    let localdata = getLocalData(this.props);\n\n    let { email, firstname, lastname, phone, registeras } = props;\n    let id = \"usr-\" + lastname + firstname;\n    let userprofileid = registeras\n      ? registeras\n      : localdata.defaultuserprofileid;\n    let recorddata = {\n      label: lastname + \" \" + firstname,\n      isactive: \"true\",\n      createduserid: localdata.defaultadminuserid,\n      lastupdateduserid: localdata.defaultadminuserid,\n      orgname: localdata.defaultorgname,\n      id: id.replace(\" \", \"\"),\n      email: email,\n      firstname: firstname,\n      lastname: lastname,\n      phone: phone,\n      userprofileid: userprofileid,\n    };\n    alert(userprofileid);\n\n    let result = await createRecord({\n      objectName: \"user\",\n      objectData: recorddata,\n    });\n    if (result.isSuccess === \"false\") {\n      alert(result.message);\n    } else {\n      let signinrecorddata = {\n        label: lastname + firstname,\n        isactive: \"true\",\n        createduserid: localdata.defaultadminuserid,\n        lastupdateduserid: localdata.defaultadminuserid,\n        orgname: localdata.defaultorgname,\n        id: email,\n        userid: id.replace(\" \", \"\"),\n      };\n\n      let signinresult = await createRecord({\n        objectName: \"usersignin\",\n        objectData: signinrecorddata,\n      });\n      if (signinresult.isSuccess === \"false\") {\n        alert(result.message);\n      } else {\n        this.setNotification({\n          msg: \"User is created, please signin\",\n        });\n        setTimeout(function () {\n          window.location.assign(\"/\");\n        }, 3000);\n      }\n    }\n  };\n\n  getUserfromDatabase = async (props) => {\n    let { orgemail, result } = props;\n    var d = new Date();\n    var tokenexpiryTime =\n      parseInt(d.getTime()) + parseInt(result.dataprops.expiresIn) * 1000;\n    let d2 = new Date(parseInt(tokenexpiryTime));\n    console.log(d2);\n    let dataParams = {\n      objectName: \"usersignin\",\n      objectData: {},\n      keyConditions: [\n        {\n          field: \"orgname\",\n          value: \"postpaidtutors\",\n          expression: \"=\",\n        },\n        {\n          field: \"id\",\n          value: orgemail,\n          expression: \"=\",\n        },\n      ],\n      filterConditions: [],\n      pageSize: \"\",\n      limit: \"\",\n      exclusiveStartKey: \"\",\n    };\n    this.setState({ showSpinner: \"true\" });\n    let dataresult = await getRecorddata(dataParams);\n    if (dataresult.isSuccess === \"false\") {\n      this.setState({ showSpinner: \"false\" });\n      alert(\"data\" + dataresult.message);\n    } else {\n      this.setState({ showSpinner: \"false\" });\n      if (dataresult.dataprops.Items.length > 0) {\n        let userdataParams = {\n          objectName: \"user\",\n          objectData: {},\n          keyConditions: [\n            {\n              field: \"orgname\",\n              value: \"postpaidtutors\",\n              expression: \"=\",\n            },\n            {\n              field: \"id\",\n              value: dataresult.dataprops.Items[0].userid,\n              expression: \"=\",\n            },\n          ],\n          filterConditions: [],\n          pageSize: \"\",\n          limit: \"\",\n          exclusiveStartKey: \"\",\n        };\n        this.setState({ showSpinner: \"true\" });\n        let userdataresult = await getRecorddata(userdataParams);\n        if (userdataresult.isSuccess === \"false\") {\n          this.setState({ showSpinner: \"false\" });\n          alert(\"data\" + userdataresult.message);\n        } else {\n          this.setState({ showSpinner: \"false\" });\n          console.log(userdataresult.dataprops.Items);\n          if (userdataresult.dataprops.Items.length > 0) {\n            let usersignin = userdataresult.dataprops.Items[0];\n            await sessionStorage.setItem(\"orgemail\", orgemail);\n            await sessionStorage.setItem(\"orgexpiresAt\", tokenexpiryTime);\n            await sessionStorage.setItem(\n              \"orgidToken\",\n              result.dataprops.idToken\n            );\n            await sessionStorage.setItem(\n              \"orgrefreshToken\",\n              result.dataprops.refreshToken\n            );\n\n            await sessionStorage.setItem(\"orgname\", usersignin.orgname);\n            await sessionStorage.setItem(\"userid\", usersignin.id);\n            await sessionStorage.setItem(\n              \"userprofileid\",\n              usersignin.userprofileid\n            );\n            await sessionStorage.setItem(\"userroleid\", usersignin.userroleid);\n            await sessionStorage.setItem(\"appname\", usersignin.defaultappname);\n            window.location.assign(window.location);\n          } else {\n            this.setNotification({\n              msg: \"Please Signup and Login\",\n            });\n\n            setTimeout(function () {\n              window.location.assign(\"/signup\");\n            }, 5000);\n          }\n        }\n      } else {\n        this.setNotification({\n          msg: \"Please Signup and Login\",\n        });\n        setTimeout(function () {\n          window.location.assign(\"/signup\");\n        }, 5000);\n      }\n    }\n  };\n\n  validate = (e) => {\n    let iserror = false;\n    this.inputcompref1.current.validate();\n    this.inputcompref2.current.validate();\n    iserror =\n      this.inputcompref1.current.validate() ||\n      this.inputcompref2.current.validate();\n    return iserror;\n  };\n\n  continueSession = async () => {\n    let result = await refreshtoken({\n      refreshtoken: sessionStorage.getItem(\"orgrefreshToken\"),\n    });\n    if (result.isSuccess === \"true\") {\n      var d = new Date();\n      var tokenexpiryTime =\n        parseInt(d.getTime()) + parseInt(result.dataprops.expires_in) * 1000;\n      let d2 = new Date(parseInt(tokenexpiryTime));\n      console.log(d2);\n      await sessionStorage.setItem(\"orgemail\", result.dataprops.email);\n      // await sessionStorage.setItem(\"orguserid\", result.dataprops.user_id);\n      await sessionStorage.setItem(\"orgexpiresAt\", tokenexpiryTime);\n      await sessionStorage.setItem(\"orgidToken\", result.dataprops.access_token);\n      await sessionStorage.setItem(\n        \"orgrefreshToken\",\n        result.dataprops.refresh_token\n      );\n\n      // window.location.assign(window.location);\n    }\n    if (result.isSuccess === \"false\") {\n      let errorArray = [];\n      let isFieldError = false;\n      if (result.message.includes(\"EMAIL\")) {\n        isFieldError = true;\n        errorArray.push({\n          name: \"username\",\n          message: result.message,\n        });\n      }\n      if (result.message.includes(\"PASSWORD\")) {\n        isFieldError = true;\n        errorArray.push({\n          name: \"password\",\n          message: result.message,\n        });\n      }\n      showError(errorArray);\n      console.log(isFieldError);\n      if (isFieldError !== true) {\n        this.setNotification({ msg: result.message });\n      }\n    }\n\n    if (window.location.href.includes(\"signin\")) {\n      window.location.assign(\"/\");\n    } else {\n      window.location.assign(window.location);\n    }\n  };\n\n  cancelSession = () => {\n    sessionStorage.clear();\n    window.location.assign(window.location);\n  };\n\n  render() {\n    console.log(this.state);\n    let dataprops = {};\n    let { showSpinner } = this.state;\n    let { action, isrefreshtoken } = this.props;\n\n    let refreshTokenHtml = [];\n    if (isrefreshtoken === true || isrefreshtoken === \"true\") {\n      refreshTokenHtml.push(\n        <div>\n          Session Loggin out Click on Ok to continue session, cancel to logout\n        </div>\n      );\n      refreshTokenHtml.push(\n        <div>\n          <button onClick={this.continueSession}>Continue Session</button>\n          <button onClick={this.cancelSession}>Logout</button>\n        </div>\n      );\n    }\n\n    if (action === \"activateuser\") {\n    } else {\n      let loginIconsHtml = [];\n\n      let iconarray = [\n        // {\n        //   label: \"Label1\",\n        //   name: \"facebooklogin\",\n        //   iconName: \"facebook\",\n        //   iconSource: \"fontaway\",\n        // },\n        {\n          label: \"Label2\",\n          name: \"googlelogin\",\n          iconName: \"google\",\n          iconSource: \"fontaway\",\n        },\n        // {\n        //   label: \"Label2\",\n        //   name: \"amazonlogin\",\n        //   iconName: \"amazon\",\n        //   iconSource: \"fontaway\",\n        // },\n      ];\n      loginIconsHtml.push(\n        <Iconbar\n          iconarray={iconarray}\n          isHorizontol=\"true\"\n          style={{ width: \"\" }}\n          iconPadding=\"1vw\"\n          iconClk={this.clkHandler}\n        />\n      );\n\n      dataprops = [\n        {\n          label: \"User Name\",\n          name: \"username\",\n          type: \"inputtext\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\",\n        },\n        {\n          label: \"Password\",\n          name: \"password\",\n          type: \"inputpassword\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"true\",\n          tabname: \"1\",\n        },\n        {\n          label: \"Log In\",\n          name: \"signin\",\n          type: \"button\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\",\n        },\n\n        {\n          label: \"Forgot Password?\",\n          name: \"forgotpassword\",\n          type: \"link\",\n          width: \"50%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\",\n        },\n        {\n          label: \"Sign Up\",\n          name: \"signup\",\n          type: \"link\",\n          width: \"50%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\",\n        },\n        {\n          label: loginIconsHtml,\n          name: \"signup\",\n          type: \"outputhtml\",\n          width: \"100%\",\n          placeholder: \"\",\n          required: \"false\",\n          tabname: \"1\",\n        },\n      ];\n      if (action === \"signup\") {\n        let loginIconsSignupHtml = [];\n\n        let iconarraySignup = [\n          // {\n          //   label: \"Label1\",\n          //   name: \"facebooksignup\",\n          //   iconName: \"facebook\",\n          //   iconSource: \"fontaway\",\n          // },\n          {\n            label: \"Label2\",\n            name: \"googlesignup\",\n            iconName: \"google\",\n            iconSource: \"fontaway\",\n          },\n          // {\n          //   label: \"Label2\",\n          //   name: \"amazonlogin\",\n          //   iconName: \"amazon\",\n          //   iconSource: \"fontaway\",\n          // },\n        ];\n        // loginIconsSignupHtml.push(\n        //   <Iconbar\n        //     iconarray={iconarraySignup}\n        //     isHorizontol=\"true\"\n        //     style={{ width: \"\" }}\n        //     iconPadding=\"1vw\"\n        //     iconClk={this.clkHandler}\n        //   />\n        // );\n        let signuppannelbuttonshtml = [];\n        signuppannelbuttonshtml.push(\n          <div className=\"org-fr org-fjc-sb org-fai-c\">\n            <div className=\"org-fr org-fai-c\">\n              <button\n                onClick={() =>\n                  this.clkHandler({\n                    buttonLabel: \"\",\n                    buttonName: \"signupcancel\",\n                    buttonType: \"\",\n                  })\n                }\n              >\n                Cancel\n              </button>\n            </div>\n            <div className=\"org-fr org-fjc-e org-fai-c\">\n              I want to Register as &nbsp;\n              <select\n                defaultValue=\"learner\"\n                style={{ padding: \"5px\" }}\n                onChange={(e) => {\n                  this.inputChanged(e, { inputName: \"registeras\" });\n                }}\n              >\n                <option value=\"tutor\">Tutor</option>\n                <option value=\"learner\">Learner</option>\n                <option value=\"admin\">Admin</option>\n              </select>\n              &nbsp;\n              <button\n                onClick={() =>\n                  this.clkHandler({\n                    buttonLabel: \"\",\n                    buttonName: \"signupregister\",\n                    buttonType: \"\",\n                  })\n                }\n              >\n                Register\n              </button>\n              {loginIconsSignupHtml}\n            </div>\n          </div>\n        );\n        dataprops = [\n          {\n            label: \"Email\",\n            name: \"registeremail\",\n            type: \"inputtext\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n          {\n            label: \"Password\",\n            name: \"registerpassword\",\n            type: \"inputpassword\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n          {\n            label: \"Confirm Password\",\n            name: \"registerconfirmpassword\",\n            type: \"inputpassword\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n          {\n            label: \"First Name\",\n            name: \"registerfirstname\",\n            type: \"inputtext\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n          {\n            label: \"Last Name\",\n            name: \"registerlastname\",\n            type: \"inputtext\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"false\",\n            tabname: \"1\",\n          },\n          {\n            label: \"Phone\",\n            name: \"registerphone\",\n            type: \"inputtext\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"false\",\n            tabname: \"1\",\n          },\n\n          {\n            label: signuppannelbuttonshtml,\n            name: \"signuppannelbuttons\",\n            type: \"outputhtml\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"false\",\n            tabname: \"1\",\n          },\n        ];\n      }\n      if (action === \"forgotpassword\") {\n        let forgotpasswordpannelbuttonshtml = [];\n        forgotpasswordpannelbuttonshtml.push(\n          <div className=\"org-fr org-fjc-e\">\n            <button\n              onClick={() =>\n                this.clkHandler({\n                  buttonLabel: \"\",\n                  buttonName: \"forgotpasswordcancel\",\n                  buttonType: \"\",\n                })\n              }\n              data-buttonname=\"forgotpasswordcancel\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={() =>\n                this.clkHandler({\n                  buttonLabel: \"\",\n                  buttonName: \"forgotpasswordsubmit\",\n                  buttonType: \"\",\n                })\n              }\n              data-name=\"forgotpasswordsubmit\"\n            >\n              Submit\n            </button>\n          </div>\n        );\n        dataprops = [\n          {\n            label: \"Email\",\n            name: \"forgotemail\",\n            type: \"inputtext\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n\n          {\n            label: forgotpasswordpannelbuttonshtml,\n            name: \"forgotpasswordpannelbuttons\",\n            type: \"outputhtml\",\n            width: \"100%\",\n            placeholder: \"\",\n            required: \"true\",\n            tabname: \"1\",\n          },\n        ];\n      }\n    }\n\n    console.log(dataprops);\n    return (\n      <div style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}>\n        <Nofification\n          showNotification={this.state.showNotification}\n          notificationMessages={this.state.notificationMessages}\n        />\n        {showSpinner === \"true\" ? <Spinner /> : \"\"}\n        <img\n          src={imgLogin}\n          alt=\"img\"\n          style={{ width: \"100vw\", height: \"100vh\", objectFit: \"cover\" }}\n        />\n        <div\n          style={{\n            position: \"absolute\",\n            color: \"\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <div\n            className=\"eelf mp\"\n            style={{ textAlign: \"center\", color: \"black\" }}\n          >\n            <b>Postpaid Tutors</b>\n          </div>\n\n          {isrefreshtoken === \"true\" ? (\n            <div>{refreshTokenHtml}</div>\n          ) : (\n            <Htmlform\n              inputChanged={this.inputChanged}\n              clkHandler={this.clkHandler}\n              inputKeyUp={this.inputKeyUp}\n              dataprops={dataprops}\n              bgcolor=\"\"\n              activeTabName=\"1\"\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default F;\n"]},"metadata":{},"sourceType":"module"}