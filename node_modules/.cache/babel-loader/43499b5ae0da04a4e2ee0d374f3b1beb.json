{"ast":null,"code":"//import React from \"react\";\n//import { MediaUploader } from \"./cors_upload\";\nimport axios from \"axios\";\nimport // getImagefromData,\n// getVideofromData,\n// getPDFfromData,\n\"../js/getMultiMediafromData\"; //let youtubeApiUrl = \"https://www.googleapis.com/youtube/v3/\";\n\nexport let getRecordsYoutube = async dataprops => {\n  //let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  // let folderUrl = dataprops.folderUrl;\n  let recArray = [\"test\", \"test2\"]; // let prefix = folderUrl;\n\n  return recArray;\n};\nexport async function getRecordYoutube(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName; // let pdfpageNumber = dataprops.pdfpageNumber;\n  // let keyParam = folderUrl + \"/\" + fileName;\n\n  let getresult = await axios.get(\"https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fyoutube.readonly&include_granted_scopes=true&state=state_parameter_passthrough_value&response_type=token&client_id=896269655884-86g035o98bggg9ai522t1621e5a0qh45.apps.googleusercontent.com\").then(err => console.log(JSON.stringify(err))).catch(err => console.log(JSON.stringify(err)));\n  console.log(getresult);\n  const config = {\n    headers: {\n      Authorization: `Bearer `,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const bodyParameters = {\n    snippet: {\n      categoryId: \"22\",\n      description: \"Description of uploaded video.\",\n      title: \"Test video upload.\"\n    },\n    status: {\n      privacyStatus: \"private\"\n    }\n  }; // let axiosresult = await axios\n  //   .post(\n  //     \"https://www.googleapis.com/youtube/v3/videos?part=snippet%2Cstatus&key=AIzaSyDl9YbnIoB7IMBXp3tp03QNH8Eb3B5AuDA\",\n  //     bodyParameters,\n  //     config\n  //   )\n  //   .then((err) => console.log(JSON.stringify(err)))\n  //   .catch((err) => console.log(JSON.stringify(err)));\n  // result = axiosresult;\n\n  console.log(result);\n  return result;\n}\nexport async function createRecordYoutube(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  }; //  let folderUrl = dataprops.folderUrl;\n  //  let fileName = dataprops.fileName;\n  // let fileEvent = dataprops.fileEvent;\n  // var files, file, fileSuffix;\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${\"token\"}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const bodyParameters = {\n    snippet: {\n      categoryId: \"22\",\n      description: \"Description of uploaded video.\",\n      title: \"Test video upload.\"\n    },\n    status: {\n      privacyStatus: \"private\"\n    }\n  };\n  let axiosresult = axios.post(\"https://www.googleapis.com/youtube/v3/videos?part=snippet%2Cstatus&key=[YOUR_API_KEY]\", bodyParameters, config).then(err => console.log(err)).catch(err => console.log(err));\n  result = axiosresult;\n  console.log(result);\n  return result;\n}\nexport async function updateRecordYoutube(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  return result;\n}\nexport async function deleteRecordYoutube(dataprops) {\n  console.log(dataprops);\n  let result = {\n    isSuccess: \"false\",\n    message: \"\",\n    dataprops: {}\n  };\n  return result;\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/videostorage/youtube.js"],"names":["axios","getRecordsYoutube","dataprops","recArray","getRecordYoutube","console","log","result","isSuccess","message","folderUrl","fileName","getresult","get","then","err","JSON","stringify","catch","config","headers","Authorization","Accept","bodyParameters","snippet","categoryId","description","title","status","privacyStatus","createRecordYoutube","axiosresult","post","updateRecordYoutube","deleteRecordYoutube"],"mappings":"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","sourcesContent":["//import React from \"react\";\n//import { MediaUploader } from \"./cors_upload\";\nimport axios from \"axios\";\nimport // getImagefromData,\n// getVideofromData,\n// getPDFfromData,\n\"../js/getMultiMediafromData\";\n\n//let youtubeApiUrl = \"https://www.googleapis.com/youtube/v3/\";\n\nexport let getRecordsYoutube = async (dataprops) => {\n  //let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  // let folderUrl = dataprops.folderUrl;\n  let recArray = [\"test\", \"test2\"];\n  // let prefix = folderUrl;\n  return recArray;\n};\n\nexport async function getRecordYoutube(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  let folderUrl = dataprops.folderUrl;\n  let fileName = dataprops.fileName;\n  // let pdfpageNumber = dataprops.pdfpageNumber;\n  // let keyParam = folderUrl + \"/\" + fileName;\n\n  let getresult = await axios\n    .get(\n      \"https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fyoutube.readonly&include_granted_scopes=true&state=state_parameter_passthrough_value&response_type=token&client_id=896269655884-86g035o98bggg9ai522t1621e5a0qh45.apps.googleusercontent.com\"\n    )\n    .then((err) => console.log(JSON.stringify(err)))\n    .catch((err) => console.log(JSON.stringify(err)));\n  console.log(getresult);\n  const config = {\n    headers: {\n      Authorization: `Bearer `,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const bodyParameters = {\n    snippet: {\n      categoryId: \"22\",\n      description: \"Description of uploaded video.\",\n      title: \"Test video upload.\",\n    },\n    status: {\n      privacyStatus: \"private\",\n    },\n  };\n\n  // let axiosresult = await axios\n  //   .post(\n  //     \"https://www.googleapis.com/youtube/v3/videos?part=snippet%2Cstatus&key=AIzaSyDl9YbnIoB7IMBXp3tp03QNH8Eb3B5AuDA\",\n  //     bodyParameters,\n  //     config\n  //   )\n  //   .then((err) => console.log(JSON.stringify(err)))\n  //   .catch((err) => console.log(JSON.stringify(err)));\n\n  // result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function createRecordYoutube(dataprops) {\n  console.log(dataprops);\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n  //  let folderUrl = dataprops.folderUrl;\n  //  let fileName = dataprops.fileName;\n  // let fileEvent = dataprops.fileEvent;\n  // var files, file, fileSuffix;\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${\"token\"}`,\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const bodyParameters = {\n    snippet: {\n      categoryId: \"22\",\n      description: \"Description of uploaded video.\",\n      title: \"Test video upload.\",\n    },\n    status: {\n      privacyStatus: \"private\",\n    },\n  };\n\n  let axiosresult = axios\n    .post(\n      \"https://www.googleapis.com/youtube/v3/videos?part=snippet%2Cstatus&key=[YOUR_API_KEY]\",\n      bodyParameters,\n      config\n    )\n    .then((err) => console.log(err))\n    .catch((err) => console.log(err));\n\n  result = axiosresult;\n  console.log(result);\n\n  return result;\n}\n\nexport async function updateRecordYoutube(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  return result;\n}\n\nexport async function deleteRecordYoutube(dataprops) {\n  console.log(dataprops);\n\n  let result = { isSuccess: \"false\", message: \"\", dataprops: {} };\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}