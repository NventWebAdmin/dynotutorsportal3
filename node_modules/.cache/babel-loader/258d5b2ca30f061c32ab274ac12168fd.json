{"ast":null,"code":"//import React, { Component } from \"react\";\n//const fs = require(\"fs\");\nfunction encode(data) {\n  console.log(data);\n  let buf = Buffer.from(data);\n  console.log(buf);\n  let base64 = buf.toString(\"base64\");\n  console.log(base64);\n  let buff = new Buffer(base64, \"base64\");\n  console.log(buff);\n  var x = Buffer.compare(buf, buff);\n  console.log(x);\n  return base64;\n}\n\nexport let getImagefromData = (databody, dataprops) => {\n  var mimes = {\n    jpeg: \"data:image/jpeg;base64,\"\n  };\n  let url = mimes.jpeg + encode(databody);\n  return url; // return (\n  //   <>\n  //     <img\n  //       src={url}\n  //       width=\"100%\"\n  //       height=\"100%\"\n  //       style={{ objectFit: \"cover\" }}\n  //       // onClick={this.dataprops.onClick}\n  //       // data-name={this.dataprops.name}\n  //     />\n  //   </>\n  // );\n};\nexport let getVideofromData = (databody, dataprops) => {\n  console.log(databody);\n  var mimes = {\n    jpeg: \"data:image/jpeg;base64,\"\n  };\n  let url = mimes.jpeg + encode(databody);\n  return url; // return (\n  //   <>\n  //     <img\n  //       src={url}\n  //       width=\"100%\"\n  //       height=\"100%\"\n  //       style={{ objectFit: \"cover\" }}\n  //       // onClick={this.dataprops.onClick}\n  //       // data-name={this.dataprops.name}\n  //     />\n  //   </>\n  // );\n};\nexport let getPDFfromData = (databody, dataprops) => {\n  //  var canvaselement = document.createElement(\"canvas\");\n  var canvaselement = document.getElementById(\"theCanvas2\"); // var b64 = \"\";\n  // b64 = encode(data.Body);\n  // Decode Base64 to binary and show some information about the PDF file (note that I skipped all checks)\n  // var bin = atob(b64);\n  // console.log(\"PDF Version:\", bin.match(/^.PDF-([0-9.]+)/)[1]);\n  // console.log(\n  //   \"Create Date:\",\n  //   bin.match(/<xmp:CreateDate>(.+?)<\\/xmp:CreateDate>/)[1]\n  // );\n  // console.log(\n  //   \"Modify Date:\",\n  //   bin.match(/<xmp:ModifyDate>(.+?)<\\/xmp:ModifyDate>/)[1]\n  // );\n  // console.log(\n  //   \"Creator Tool:\",\n  //   bin.match(/<xmp:CreatorTool>(.+?)<\\/xmp:CreatorTool>/)[1]\n  // );\n  // var obj = document.createElement(\"object\");\n  // obj.style.width = \"100%\";\n  // obj.style.height = \"80vh\";\n  // obj.type = \"application/pdf\";\n  // obj.data = \"data:application/pdf;base64,\" + b64;\n  // document.body.appendChild(obj);\n  // var link = document.createElement(\"a\");\n  // link.innerHTML = \"Download PDF file\";\n  // link.download = \"file.pdf\";\n  // link.href = \"data:application/octet-stream;base64,\" + b64;\n  // document.body.appendChild(link);\n  // var mimes = {\n  //   jpeg: \"data:image/jpeg;base64,\",\n  // };\n\n  var pdfData = atob(encode(databody)); // Loaded via <script> tag, create shortcut to access PDF.js exports.\n\n  var pdfjsLib = window[\"pdfjs-dist/build/pdf\"]; // The workerSrc property shall be specified.\n\n  pdfjsLib.GlobalWorkerOptions.workerSrc = \"//mozilla.github.io/pdf.js/build/pdf.worker.js\";\n  var loadingTask = pdfjsLib.getDocument({\n    data: pdfData\n  });\n  loadingTask.promise.then(function (pdf) {\n    var pageNumber = dataprops.pdfpageNumber;\n    pdf.getPage(pageNumber).then(function (page) {\n      console.log(\"Page loaded\");\n      var scale = 1.5;\n      var viewport = page.getViewport({\n        scale: scale\n      });\n      var canvas = document.getElementById(dataprops.htmlId);\n      var context = canvas.getContext(\"2d\");\n      canvas.height = viewport.height;\n      canvas.width = viewport.width;\n      var renderContext = {\n        canvasContext: context,\n        viewport: viewport\n      };\n      var renderTask = page.render(renderContext);\n      renderTask.promise.then(function () {\n        console.log(\"Page rendered\");\n      });\n    });\n  }, function (reason) {\n    console.error(reason);\n  });\n  return canvaselement;\n};","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/js/getMultiMediafromData.js"],"names":["encode","data","console","log","buf","Buffer","from","base64","toString","buff","x","compare","getImagefromData","databody","dataprops","mimes","jpeg","url","getVideofromData","getPDFfromData","canvaselement","document","getElementById","pdfData","atob","pdfjsLib","window","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","promise","then","pdf","pageNumber","pdfpageNumber","getPage","page","scale","viewport","getViewport","canvas","htmlId","context","getContext","height","width","renderContext","canvasContext","renderTask","render","reason","error"],"mappings":"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","sourcesContent":["//import React, { Component } from \"react\";\n//const fs = require(\"fs\");\n\nfunction encode(data) {\n  console.log(data);\n  let buf = Buffer.from(data);\n  console.log(buf);\n  let base64 = buf.toString(\"base64\");\n  console.log(base64);\n\n  let buff = new Buffer(base64, \"base64\");\n  console.log(buff);\n\n  var x = Buffer.compare(buf, buff);\n  console.log(x);\n\n  return base64;\n}\n\nexport let getImagefromData = (databody, dataprops) => {\n  var mimes = {\n    jpeg: \"data:image/jpeg;base64,\",\n  };\n  let url = mimes.jpeg + encode(databody);\n  return url;\n  // return (\n  //   <>\n  //     <img\n  //       src={url}\n  //       width=\"100%\"\n  //       height=\"100%\"\n  //       style={{ objectFit: \"cover\" }}\n  //       // onClick={this.dataprops.onClick}\n  //       // data-name={this.dataprops.name}\n  //     />\n  //   </>\n  // );\n};\n\nexport let getVideofromData = (databody, dataprops) => {\n  console.log(databody);\n  var mimes = {\n    jpeg: \"data:image/jpeg;base64,\",\n  };\n  let url = mimes.jpeg + encode(databody);\n  return url;\n  // return (\n  //   <>\n  //     <img\n  //       src={url}\n  //       width=\"100%\"\n  //       height=\"100%\"\n  //       style={{ objectFit: \"cover\" }}\n  //       // onClick={this.dataprops.onClick}\n  //       // data-name={this.dataprops.name}\n  //     />\n  //   </>\n  // );\n};\n\nexport let getPDFfromData = (databody, dataprops) => {\n  //  var canvaselement = document.createElement(\"canvas\");\n  var canvaselement = document.getElementById(\"theCanvas2\");\n\n  // var b64 = \"\";\n\n  // b64 = encode(data.Body);\n\n  // Decode Base64 to binary and show some information about the PDF file (note that I skipped all checks)\n  // var bin = atob(b64);\n\n  // console.log(\"PDF Version:\", bin.match(/^.PDF-([0-9.]+)/)[1]);\n  // console.log(\n  //   \"Create Date:\",\n  //   bin.match(/<xmp:CreateDate>(.+?)<\\/xmp:CreateDate>/)[1]\n  // );\n  // console.log(\n  //   \"Modify Date:\",\n  //   bin.match(/<xmp:ModifyDate>(.+?)<\\/xmp:ModifyDate>/)[1]\n  // );\n  // console.log(\n  //   \"Creator Tool:\",\n  //   bin.match(/<xmp:CreatorTool>(.+?)<\\/xmp:CreatorTool>/)[1]\n  // );\n\n  // var obj = document.createElement(\"object\");\n  // obj.style.width = \"100%\";\n  // obj.style.height = \"80vh\";\n  // obj.type = \"application/pdf\";\n  // obj.data = \"data:application/pdf;base64,\" + b64;\n  // document.body.appendChild(obj);\n\n  // var link = document.createElement(\"a\");\n  // link.innerHTML = \"Download PDF file\";\n  // link.download = \"file.pdf\";\n  // link.href = \"data:application/octet-stream;base64,\" + b64;\n  // document.body.appendChild(link);\n  // var mimes = {\n  //   jpeg: \"data:image/jpeg;base64,\",\n  // };\n\n  var pdfData = atob(encode(databody));\n  // Loaded via <script> tag, create shortcut to access PDF.js exports.\n  var pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n  // The workerSrc property shall be specified.\n  pdfjsLib.GlobalWorkerOptions.workerSrc =\n    \"//mozilla.github.io/pdf.js/build/pdf.worker.js\";\n  var loadingTask = pdfjsLib.getDocument({ data: pdfData });\n  loadingTask.promise.then(\n    function (pdf) {\n      var pageNumber = dataprops.pdfpageNumber;\n      pdf.getPage(pageNumber).then(function (page) {\n        console.log(\"Page loaded\");\n        var scale = 1.5;\n        var viewport = page.getViewport({ scale: scale });\n        var canvas = document.getElementById(dataprops.htmlId);\n        var context = canvas.getContext(\"2d\");\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        var renderContext = {\n          canvasContext: context,\n          viewport: viewport,\n        };\n        var renderTask = page.render(renderContext);\n        renderTask.promise.then(function () {\n          console.log(\"Page rendered\");\n        });\n      });\n    },\n    function (reason) {\n      console.error(reason);\n    }\n  );\n  return canvaselement;\n};\n"]},"metadata":{},"sourceType":"module"}