{"ast":null,"code":"import { signinAWS, refreshTokenAWS, signupAWS, resetPasswordAWS, forgetPasswordAWS, isUserAlreadyExistsAWS, getUserProfileAWS, isAuthenticatedUserAWS, signInwithGoogleAWS, signInwithFacebookAWS } from \"./aws\";\nimport { signinFirebase, refreshTokenFirebase, signupFirebase, resetPasswordFirebase, forgetPasswordFirebase, isUserAlreadyExistsFirebase, getUserProfileFirebase, isAuthenticatedUserFirebase, signInwithGoogleFirebase, signInwithFacebookFirebase } from \"./firebase\";\nimport { configdata } from \"../config\";\nexport function signin(userDetails) {\n  console.log(userDetails);\n  console.log(configdata().authvendor);\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = signinAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = signinFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function refreshtoken(userDetails) {\n  console.log(userDetails);\n  console.log(configdata().authvendor);\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = refreshTokenAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = refreshTokenFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function signup(userDetails) {\n  console.log(userDetails);\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = signupAWS();\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = signupFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function resetPassword(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = resetPasswordAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = resetPasswordFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function forgetPassword(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = forgetPasswordAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = forgetPasswordFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function isUserAlreadyExists(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = isUserAlreadyExistsAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = isUserAlreadyExistsFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function getUserProfile(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = getUserProfileAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = getUserProfileFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function isAuthenticatedUser(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = isAuthenticatedUserAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = isAuthenticatedUserFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function signInwithGoogle(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = signInwithGoogleAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = signInwithGoogleFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function signInwithFacebook(userDetails) {\n  let result = {};\n\n  if (configdata().authvendor == \"aws\") {\n    result = signInwithFacebookAWS(userDetails);\n  }\n\n  if (configdata().authvendor == \"firebase\") {\n    result = signInwithFacebookFirebase(userDetails);\n  }\n\n  return result;\n}\nexport function checkAsync() {\n  let result = setTimeout(function () {\n    return \"helow\";\n  }, 3000);\n  console.log(result);\n  return \"test\";\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/auth/index.js"],"names":["signinAWS","refreshTokenAWS","signupAWS","resetPasswordAWS","forgetPasswordAWS","isUserAlreadyExistsAWS","getUserProfileAWS","isAuthenticatedUserAWS","signInwithGoogleAWS","signInwithFacebookAWS","signinFirebase","refreshTokenFirebase","signupFirebase","resetPasswordFirebase","forgetPasswordFirebase","isUserAlreadyExistsFirebase","getUserProfileFirebase","isAuthenticatedUserFirebase","signInwithGoogleFirebase","signInwithFacebookFirebase","configdata","signin","userDetails","console","log","authvendor","result","refreshtoken","signup","resetPassword","forgetPassword","isUserAlreadyExists","getUserProfile","isAuthenticatedUser","signInwithGoogle","signInwithFacebook","checkAsync","setTimeout"],"mappings":"AAAA,SACEA,SADF,EAEEC,eAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,iBALF,EAMEC,sBANF,EAOEC,iBAPF,EAQEC,sBARF,EASEC,mBATF,EAUEC,qBAVF,QAWO,OAXP;AAYA,SACEC,cADF,EAEEC,oBAFF,EAGEC,cAHF,EAIEC,qBAJF,EAKEC,sBALF,EAMEC,2BANF,EAOEC,sBAPF,EAQEC,2BARF,EASEC,wBATF,EAUEC,0BAVF,QAWO,YAXP;AAYA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAO,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,GAAGK,UAAzB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAG1B,SAAS,CAACsB,WAAD,CAAlB;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGhB,cAAc,CAACY,WAAD,CAAvB;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBL,WAAtB,EAAmC;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,GAAGK,UAAzB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGzB,eAAe,CAACqB,WAAD,CAAxB;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGf,oBAAoB,CAACW,WAAD,CAA7B;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASE,MAAT,CAAgBN,WAAhB,EAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGxB,SAAS,EAAlB;AACD;;AACD,MAAIkB,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGd,cAAc,CAACU,WAAD,CAAvB;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASG,aAAT,CAAuBP,WAAvB,EAAoC;AACzC,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGvB,gBAAgB,CAACmB,WAAD,CAAzB;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGb,qBAAqB,CAACS,WAAD,CAA9B;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASI,cAAT,CAAwBR,WAAxB,EAAqC;AAC1C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGtB,iBAAiB,CAACkB,WAAD,CAA1B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGZ,sBAAsB,CAACQ,WAAD,CAA/B;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASK,mBAAT,CAA6BT,WAA7B,EAA0C;AAC/C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGrB,sBAAsB,CAACiB,WAAD,CAA/B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGX,2BAA2B,CAACO,WAAD,CAApC;AACD;;AAED,SAAOI,MAAP;AACD;AAED,OAAO,SAASM,cAAT,CAAwBV,WAAxB,EAAqC;AAC1C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGpB,iBAAiB,CAACgB,WAAD,CAA1B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGV,sBAAsB,CAACM,WAAD,CAA/B;AACD;;AACD,SAAOI,MAAP;AACD;AAED,OAAO,SAASO,mBAAT,CAA6BX,WAA7B,EAA0C;AAC/C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGnB,sBAAsB,CAACe,WAAD,CAA/B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGT,2BAA2B,CAACK,WAAD,CAApC;AACD;;AACD,SAAOI,MAAP;AACD;AAED,OAAO,SAASQ,gBAAT,CAA0BZ,WAA1B,EAAuC;AAC5C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGlB,mBAAmB,CAACc,WAAD,CAA5B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGR,wBAAwB,CAACI,WAAD,CAAjC;AACD;;AACD,SAAOI,MAAP;AACD;AAED,OAAO,SAASS,kBAAT,CAA4Bb,WAA5B,EAAyC;AAC9C,MAAII,MAAM,GAAG,EAAb;;AACA,MAAIN,UAAU,GAAGK,UAAb,IAA2B,KAA/B,EAAsC;AACpCC,IAAAA,MAAM,GAAGjB,qBAAqB,CAACa,WAAD,CAA9B;AACD;;AACD,MAAIF,UAAU,GAAGK,UAAb,IAA2B,UAA/B,EAA2C;AACzCC,IAAAA,MAAM,GAAGP,0BAA0B,CAACG,WAAD,CAAnC;AACD;;AACD,SAAOI,MAAP;AACD;AAED,OAAO,SAASU,UAAT,GAAsB;AAC3B,MAAIV,MAAM,GAAGW,UAAU,CAAC,YAAY;AAClC,WAAO,OAAP;AACD,GAFsB,EAEpB,IAFoB,CAAvB;AAGAd,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,SAAO,MAAP;AACD","sourcesContent":["import {\n  signinAWS,\n  refreshTokenAWS,\n  signupAWS,\n  resetPasswordAWS,\n  forgetPasswordAWS,\n  isUserAlreadyExistsAWS,\n  getUserProfileAWS,\n  isAuthenticatedUserAWS,\n  signInwithGoogleAWS,\n  signInwithFacebookAWS,\n} from \"./aws\";\nimport {\n  signinFirebase,\n  refreshTokenFirebase,\n  signupFirebase,\n  resetPasswordFirebase,\n  forgetPasswordFirebase,\n  isUserAlreadyExistsFirebase,\n  getUserProfileFirebase,\n  isAuthenticatedUserFirebase,\n  signInwithGoogleFirebase,\n  signInwithFacebookFirebase,\n} from \"./firebase\";\nimport { configdata } from \"../config\";\n\nexport function signin(userDetails) {\n  console.log(userDetails);\n  console.log(configdata().authvendor);\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = signinAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = signinFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function refreshtoken(userDetails) {\n  console.log(userDetails);\n  console.log(configdata().authvendor);\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = refreshTokenAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = refreshTokenFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function signup(userDetails) {\n  console.log(userDetails);\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = signupAWS();\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = signupFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function resetPassword(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = resetPasswordAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = resetPasswordFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function forgetPassword(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = forgetPasswordAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = forgetPasswordFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function isUserAlreadyExists(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = isUserAlreadyExistsAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = isUserAlreadyExistsFirebase(userDetails);\n  }\n\n  return result;\n}\n\nexport function getUserProfile(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = getUserProfileAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = getUserProfileFirebase(userDetails);\n  }\n  return result;\n}\n\nexport function isAuthenticatedUser(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = isAuthenticatedUserAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = isAuthenticatedUserFirebase(userDetails);\n  }\n  return result;\n}\n\nexport function signInwithGoogle(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = signInwithGoogleAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = signInwithGoogleFirebase(userDetails);\n  }\n  return result;\n}\n\nexport function signInwithFacebook(userDetails) {\n  let result = {};\n  if (configdata().authvendor == \"aws\") {\n    result = signInwithFacebookAWS(userDetails);\n  }\n  if (configdata().authvendor == \"firebase\") {\n    result = signInwithFacebookFirebase(userDetails);\n  }\n  return result;\n}\n\nexport function checkAsync() {\n  let result = setTimeout(function () {\n    return \"helow\";\n  }, 3000);\n  console.log(result);\n  return \"test\";\n}\n"]},"metadata":{},"sourceType":"module"}