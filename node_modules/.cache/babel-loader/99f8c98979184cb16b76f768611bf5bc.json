{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/tabpanel.js\";\nimport React, { Component } from \"react\";\nimport { sortArray, fieldTypeHtmltoDBmapping, getLocalData, serverButtonHandler } from \"../js/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class F extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setComponentData = (tabs, activetab) => {\n      console.log(tabs);\n      let tabsHtml = [];\n      let dataprops = tabs;\n      console.log(dataprops);\n      let activeTabName = activetab;\n      let activeTabNamefromState = this.state.activeTabNamefromState;\n\n      if (activeTabNamefromState != \"\") {\n        activeTabName = activeTabNamefromState;\n      }\n\n      let datapropsarray = [];\n      let datapropsarraysorted = [];\n\n      for (let i in dataprops) {\n        datapropsarray.push(dataprops[i]);\n      }\n\n      datapropsarraysorted = sortArray(datapropsarray, \"order\", \"integer\");\n\n      if (activeTabName == \"\" || activeTabName == undefined) {\n        activeTabName = datapropsarraysorted[0].name;\n      }\n\n      for (let i = 0; i < datapropsarraysorted.length; i++) {\n        console.log(datapropsarraysorted[i]);\n\n        if (datapropsarraysorted[i].name == activeTabName) {\n          tabsHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sp activeblack\",\n            \"data-name\": datapropsarraysorted[i].name,\n            \"data-label\": datapropsarraysorted[i].label,\n            \"data-type\": datapropsarraysorted[i].type,\n            \"data-actionid\": datapropsarraysorted[i].action ? datapropsarraysorted[i].action.id : \"\",\n            onClick: this.onTabOpen,\n            children: datapropsarraysorted[i].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this));\n        } else {\n          tabsHtml.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sp \",\n            \"data-name\": datapropsarraysorted[i].name,\n            \"data-label\": datapropsarraysorted[i].label,\n            \"data-type\": datapropsarraysorted[i].type,\n            \"data-actionid\": datapropsarraysorted[i].action ? datapropsarraysorted[i].action.id : \"\",\n            onClick: this.onTabOpen,\n            children: datapropsarraysorted[i].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this));\n        }\n      }\n\n      this.setState({\n        mainpanelHtml: tabsHtml\n      });\n    };\n\n    this.onTabOpen = e => {\n      console.log(e.target.dataset);\n\n      if (this.props.onTabOpen) {\n        this.props.onTabOpen({\n          tabLabel: e.target.dataset.label,\n          tabName: e.target.dataset.name,\n          tabType: e.target.dataset.type\n        });\n        this.setState({\n          activeTabNamefromState: e.target.dataset.name\n        });\n      } else {\n        let localdata = getLocalData(this.props);\n        let clickprops = {\n          actionid: e.target.dataset.actionid\n        };\n        serverButtonHandler({\n          localdata: localdata,\n          clickprops: clickprops,\n          recorddata: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      activeTabNamefromState: \"\",\n      mainpanelHtml: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let {\n      tabs,\n      activetab,\n      defaultactivetab\n    } = this.props.compprops;\n\n    if (activetab == \"\" || activetab == undefined) {\n      activetab = defaultactivetab;\n    }\n\n    this.setComponentData(tabs, activetab);\n  }\n\n  render() {\n    console.log(this.props.style);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: this.props.htmlid,\n        style: {\n          color: \"black\",\n          width: \"100%\",\n          backgroundColor: this.props.bgcolor === \"\" ? \"#F2F2F2\" : this.props.bgcolor\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org-fr org-fjc-s org-bdb\",\n          children: this.state.mainpanelHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/pradeep/Downloads/twilioudemy1/nventwebgithub/dynotutorsportal3/src/components/tabpanel.js"],"names":["React","Component","sortArray","fieldTypeHtmltoDBmapping","getLocalData","serverButtonHandler","F","constructor","props","setComponentData","tabs","activetab","console","log","tabsHtml","dataprops","activeTabName","activeTabNamefromState","state","datapropsarray","datapropsarraysorted","i","push","undefined","name","length","label","type","action","id","onTabOpen","setState","mainpanelHtml","e","target","dataset","tabLabel","tabName","tabType","localdata","clickprops","actionid","recorddata","componentDidMount","defaultactivetab","compprops","render","style","htmlid","color","width","backgroundColor","bgcolor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  sortArray,\n  fieldTypeHtmltoDBmapping,\n  getLocalData,\n  serverButtonHandler,\n} from \"../js/index\";\n\nexport default class F extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTabNamefromState: \"\", mainpanelHtml: [] };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let { tabs, activetab, defaultactivetab } = this.props.compprops;\n    if (activetab == \"\" || activetab == undefined) {\n      activetab = defaultactivetab;\n    }\n    this.setComponentData(tabs, activetab);\n  }\n\n  setComponentData = (tabs, activetab) => {\n    console.log(tabs);\n    let tabsHtml = [];\n    let dataprops = tabs;\n    console.log(dataprops);\n    let activeTabName = activetab;\n    let activeTabNamefromState = this.state.activeTabNamefromState;\n    if (activeTabNamefromState != \"\") {\n      activeTabName = activeTabNamefromState;\n    }\n    let datapropsarray = [];\n    let datapropsarraysorted = [];\n    for (let i in dataprops) {\n      datapropsarray.push(dataprops[i]);\n    }\n    datapropsarraysorted = sortArray(datapropsarray, \"order\", \"integer\");\n\n    if (activeTabName == \"\" || activeTabName == undefined) {\n      activeTabName = datapropsarraysorted[0].name;\n    }\n\n    for (let i = 0; i < datapropsarraysorted.length; i++) {\n      console.log(datapropsarraysorted[i]);\n      if (datapropsarraysorted[i].name == activeTabName) {\n        tabsHtml.push(\n          <div\n            className=\"sp activeblack\"\n            data-name={datapropsarraysorted[i].name}\n            data-label={datapropsarraysorted[i].label}\n            data-type={datapropsarraysorted[i].type}\n            data-actionid={\n              datapropsarraysorted[i].action\n                ? datapropsarraysorted[i].action.id\n                : \"\"\n            }\n            onClick={this.onTabOpen}\n          >\n            {datapropsarraysorted[i].label}\n          </div>\n        );\n      } else {\n        tabsHtml.push(\n          <div\n            className=\"sp \"\n            data-name={datapropsarraysorted[i].name}\n            data-label={datapropsarraysorted[i].label}\n            data-type={datapropsarraysorted[i].type}\n            data-actionid={\n              datapropsarraysorted[i].action\n                ? datapropsarraysorted[i].action.id\n                : \"\"\n            }\n            onClick={this.onTabOpen}\n          >\n            {datapropsarraysorted[i].label}\n          </div>\n        );\n      }\n    }\n    this.setState({ mainpanelHtml: tabsHtml });\n  };\n\n  onTabOpen = (e) => {\n    console.log(e.target.dataset);\n    if (this.props.onTabOpen) {\n      this.props.onTabOpen({\n        tabLabel: e.target.dataset.label,\n        tabName: e.target.dataset.name,\n        tabType: e.target.dataset.type,\n      });\n      this.setState({ activeTabNamefromState: e.target.dataset.name });\n    } else {\n      let localdata = getLocalData(this.props);\n      let clickprops = { actionid: e.target.dataset.actionid };\n\n      serverButtonHandler({\n        localdata: localdata,\n        clickprops: clickprops,\n        recorddata: \"\",\n      });\n    }\n  };\n\n  render() {\n    console.log(this.props.style);\n\n    return (\n      <>\n        <div\n          id={this.props.htmlid}\n          style={{\n            color: \"black\",\n            width: \"100%\",\n            backgroundColor:\n              this.props.bgcolor === \"\" ? \"#F2F2F2\" : this.props.bgcolor,\n          }}\n        >\n          <div className=\"org-fr org-fjc-s org-bdb\">\n            {this.state.mainpanelHtml}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}