import React, { Component } from "react";
import Img1 from "../images/cat1.jpeg";

class F extends Component {
  constructor(props) {
    super(props);
    this.state = {};
  }

  componentDidMount() {
    var svgString = new XMLSerializer().serializeToString(
      document.querySelector("svg")
    );

    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");
    var DOMURL = window.location;
    var img = new Image();
    var svg = new Blob([svgString], { type: "image/svg+xml;charset=utf-8" });
    var url = URL.createObjectURL(svg);
    img.onload = function () {
      ctx.drawImage(img, 0, 0);
      var png = canvas.toDataURL("image/png");
      document.querySelector("#png-container").innerHTML =
        '<img src="' + png + '"/>';
      URL.revokeObjectURL(png);
    };
    img.src = url;
  }
  render() {
    return (
      <>
        <div id="svg-container">
          <svg
            preserveAspectRatio="none"
            x="80"
            y="80"
            width="690"
            height="280"
            style={{ fill: "none" }}
            viewBox="0 0 690 280"
          >
            <g class="errorbars" style={{ stroke: "#000000" }}></g>
            <g class="errorbars" style={{ stroke: "#000000" }}></g>
            <g class="errorbars" style={{ stroke: "#000000" }}></g>
            <g class="errorbars" style={{ stroke: "#000000" }}></g>
            <g class="errorbars" style={{ stroke: "#000000" }}></g>
            <g
              class="trace scatter"
              style={{ strokeMiterlimit: "2", opacity: "1" }}
            >
              <path
                class="js-fill"
                data-curve="0"
                d="M0,275.87L14.08,247.04L28.16,232.85L42.24,253.86L56.33,246.47L70.41,243.89L84.49,217.25L98.57,217.82L112.65,225.6L126.73,241.67L140.82,253.84L154.9,216.99L168.98,207.33L183.06,212.18L197.14,251.33L211.22,242.07L225.31,234.25L239.39,221.58L253.47,217.92L267.55,228.46L281.63,224.71L295.71,253.29L309.8,202.84L323.88,225.91L337.96,229.59L352.04,216.11L366.12,225.59L380.2,222.05L394.29,194.73L408.37,209.7L422.45,189.5L436.53,242.94L450.61,191.95L464.69,200.14L478.78,204.29L492.86,184.43L506.94,231L521.02,223.42L535.1,176.94L549.18,179.33L563.27,182.01L577.35,193.65L591.43,208.45L605.51,226.7L619.59,191.43L633.67,173.51L647.76,176.67L661.84,182.12L675.92,190.75L690,163.75L690,280L0,280Z"
                style={{
                  strokeWidth: "0px",
                  fill: "#df3f1a",
                  fillOpacity: "1",
                }}
              ></path>
              <path
                class="js-fill"
                d="M690,158.64L675.92,146.27L661.84,123.59L647.76,133.24L633.67,129.54L619.59,184.78L605.51,173.37L591.43,191.32L577.35,139.98L563.27,140.87L549.18,120.83L535.1,165.83L521.02,202.89L506.94,174.71L492.86,183.88L478.78,176.98L464.69,168.83L450.61,147.56L436.53,218.62L422.45,157.63L408.37,169.32L394.29,193.1L380.2,198.8L366.12,174.23L352.04,174.58L337.96,220.43L323.88,218.74L309.8,197.31L295.71,210.27L281.63,198.01L267.55,206.3L253.47,178.69L239.39,177.23L225.31,180.65L211.22,236.26L197.14,193.08L183.06,209.16L168.98,170.28L154.9,174.01L140.82,217.41L126.73,204.06L112.65,201.15L98.57,205.47L84.49,213.49L70.41,206.95L56.33,195.46L42.24,224.24L28.16,202.11L14.08,212.84L0,258.04L0,275.87L14.08,247.04L28.16,232.85L42.24,253.86L56.33,246.47L70.41,243.89L84.49,217.25L98.57,217.82L112.65,225.6L126.73,241.67L140.82,253.84L154.9,216.99L168.98,207.33L183.06,212.18L197.14,251.33L211.22,242.07L225.31,234.25L239.39,221.58L253.47,217.92L267.55,228.46L281.63,224.71L295.71,253.29L309.8,202.84L323.88,225.91L337.96,229.59L352.04,216.11L366.12,225.59L380.2,222.05L394.29,194.73L408.37,209.7L422.45,189.5L436.53,242.94L450.61,191.95L464.69,200.14L478.78,204.29L492.86,184.43L506.94,231L521.02,223.42L535.1,176.94L549.18,179.33L563.27,182.01L577.35,193.65L591.43,208.45L605.51,226.7L619.59,191.43L633.67,173.51L647.76,176.67L661.84,182.12L675.92,190.75L690,163.75Z"
                style={{
                  strokeWidth: "0px",
                  fill: "#3bcc2d",
                  fillOpacity: "1",
                }}
              ></path>
              <path
                class="js-line"
                d="M0,275.87L14.08,247.04L28.16,232.85L42.24,253.86L56.33,246.47L70.41,243.89L84.49,217.25L98.57,217.82L112.65,225.6L126.73,241.67L140.82,253.84L154.9,216.99L168.98,207.33L183.06,212.18L197.14,251.33L211.22,242.07L225.31,234.25L239.39,221.58L253.47,217.92L267.55,228.46L281.63,224.71L295.71,253.29L309.8,202.84L323.88,225.91L337.96,229.59L352.04,216.11L366.12,225.59L380.2,222.05L394.29,194.73L408.37,209.7L422.45,189.5L436.53,242.94L450.61,191.95L464.69,200.14L478.78,204.29L492.86,184.43L506.94,231L521.02,223.42L535.1,176.94L549.18,179.33L563.27,182.01L577.35,193.65L591.43,208.45L605.51,226.7L619.59,191.43L633.67,173.51L647.76,176.67L661.84,182.12L675.92,190.75L690,163.75"
                style="stroke-width: 2px; stroke: #df3f1a; stroke-opacity: 0.7; fill: none;"
                style={{
                  strokeWidth: "2px",
                  fill: "#3bcc2d",
                  fillOpacity: "1",
                }}
              ></path>
            </g>
          </svg>
        </div>

        <canvas id="canvas" width="800" height="400"></canvas>
        <div id="png-container"></div>
      </>
    );
  }
}

export default F;
